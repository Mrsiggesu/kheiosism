
increase_unraveling_knowledge_small = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = 0.002
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = 0.005
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = 0.007
	}
	else = {
		add_reform_desire = 0.01
	}
}


increase_unraveling_knowledge_medium = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = 0.005
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = 0.007
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = 0.01
	}
	else = {
		add_reform_desire = 0.02
	}
}

increase_unraveling_knowledge_large = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = 0.005
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = 0.01
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = 0.02
	}
	else = {
		add_reform_desire = 0.04
	}
}

decrease_unraveling_knowledge_small = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = -0.002
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = -0.005
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = -0.007
	}
	else = {
		add_reform_desire = -0.01
	}
}


decrease_unraveling_knowledge_medium = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = -0.005
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = -0.007
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = -0.01
	}
	else = {
		add_reform_desire = -0.02
	}
}

decrease_unraveling_knowledge_large = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = -0.005
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = -0.01
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = -0.02
	}
	else = {
		add_reform_desire = -0.04
	}
}

aelantiri_tech_group = {
	OR = {
		technology_group = tech_north_aelantiri
	}
}

ruler_save_spell_schools = {
	if = {
		limit = {
			is_abjuration_1 = yes
		}
		set_country_flag = saved_abjuration_1
	}
	if = {
		limit = {
			is_abjuration_2 = yes
		}
		set_country_flag = saved_abjuration_2
	}
	if = {
		limit = {
			is_abjuration_3 = yes
		}
		set_country_flag = saved_abjuration_3
	}
	
	if = {
		limit = {
			is_conjuration_1 = yes
		}
		set_country_flag = saved_conjuration_1
	}
	if = {
		limit = {
			is_conjuration_2 = yes
		}
		set_country_flag = saved_conjuration_2
	}
	if = {
		limit = {
			is_conjuration_3 = yes
		}
		set_country_flag = saved_conjuration_3
	}
	
	if = {
		limit = {
			is_divination_1 = yes
		}
		set_country_flag = saved_divination_1
	}
	if = {
		limit = {
			is_divination_2 = yes
		}
		set_country_flag = saved_divination_2
	}
	if = {
		limit = {
			is_divination_3 = yes
		}
		set_country_flag = saved_divination_3
	}
	
	if = {
		limit = {
			is_enchantment_1 = yes
		}
		set_country_flag = saved_enchantment_1
	}
	if = {
		limit = {
			is_enchantment_2 = yes
		}
		set_country_flag = saved_enchantment_2
	}
	if = {
		limit = {
			is_enchantment_3 = yes
		}
		set_country_flag = saved_enchantment_3
	}
	
	if = {
		limit = {
			is_evocation_1 = yes
		}
		set_country_flag = saved_evocation_1
	}
	if = {
		limit = {
			is_evocation_2 = yes
		}
		set_country_flag = saved_evocation_2
	}
	if = {
		limit = {
			is_evocation_3 = yes
		}
		set_country_flag = saved_evocation_3
	}
	
	if = {
		limit = {
			is_illusion_1 = yes
		}
		set_country_flag = saved_illusion_1
	}
	if = {
		limit = {
			is_illusion_2 = yes
		}
		set_country_flag = saved_illusion_2
	}
	if = {
		limit = {
			is_illusion_3 = yes
		}
		set_country_flag = saved_illusion_3
	}
	
	if = {
		limit = {
			is_necromancy_1 = yes
		}
		set_country_flag = saved_necromancy_1
	}
	if = {
		limit = {
			is_necromancy_2 = yes
		}
		set_country_flag = saved_necromancy_2
	}
	if = {
		limit = {
			is_necromancy_3 = yes
		}
		set_country_flag = saved_necromancy_3
	}
	
	if = {
		limit = {
			is_transmutation_1 = yes
		}
		set_country_flag = saved_transmutation_1
	}
	if = {
		limit = {
			is_transmutation_2 = yes
		}
		set_country_flag = saved_transmutation_2
	}
	if = {
		limit = {
			is_transmutation_3 = yes
		}
		set_country_flag = saved_transmutation_3
	}
	
}

ruler_give_saved_spell_schools = {
	if = {
		limit = {
			has_country_flag = saved_abjuration_1
		}
		set_ruler_flag = abjuration_1
	}
	if = {
		limit = {
			has_country_flag = saved_abjuration_2
		}
		set_ruler_flag = abjuration_1
		set_ruler_flag = abjuration_2
	}
	if = {
		limit = {
			has_country_flag = saved_abjuration_3
		}
		set_ruler_flag = abjuration_1
		set_ruler_flag = abjuration_2
		set_ruler_flag = abjuration_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_conjuration_1
		}
		set_ruler_flag = conjuration_1
	}
	if = {
		limit = {
			has_country_flag = saved_conjuration_2
		}
		set_ruler_flag = conjuration_1
		set_ruler_flag = conjuration_2
	}
	if = {
		limit = {
			has_country_flag = saved_conjuration_3
		}
		set_ruler_flag = conjuration_1
		set_ruler_flag = conjuration_2
		set_ruler_flag = conjuration_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_divination_1
		}
		set_ruler_flag = divination_1
	}
	if = {
		limit = {
			has_country_flag = saved_divination_2
		}
		set_ruler_flag = divination_1
		set_ruler_flag = divination_2
	}
	if = {
		limit = {
			has_country_flag = saved_divination_3
		}
		set_ruler_flag = divination_1
		set_ruler_flag = divination_2
		set_ruler_flag = divination_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_enchantment_1
		}
		set_ruler_flag = enchantment_1
	}
	if = {
		limit = {
			has_country_flag = saved_enchantment_2
		}
		set_ruler_flag = enchantment_1
		set_ruler_flag = enchantment_2
	}
	if = {
		limit = {
			has_country_flag = saved_enchantment_3
		}
		set_ruler_flag = enchantment_1
		set_ruler_flag = enchantment_2
		set_ruler_flag = enchantment_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_evocation_1
		}
		set_ruler_flag = evocation_1
	}
	if = {
		limit = {
			has_country_flag = saved_evocation_2
		}
		set_ruler_flag = evocation_1
		set_ruler_flag = evocation_2
	}
	if = {
		limit = {
			has_country_flag = saved_evocation_3
		}
		set_ruler_flag = evocation_1
		set_ruler_flag = evocation_2
		set_ruler_flag = evocation_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_illusion_1
		}
		set_ruler_flag = illusion_1
	}
	if = {
		limit = {
			has_country_flag = saved_illusion_2
		}
		set_ruler_flag = illusion_1
		set_ruler_flag = illusion_2
	}
	if = {
		limit = {
			has_country_flag = saved_illusion_3
		}
		set_ruler_flag = illusion_1
		set_ruler_flag = illusion_2
		set_ruler_flag = illusion_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_necromancy_1
		}
		set_ruler_flag = necromancy_1
	}
	if = {
		limit = {
			has_country_flag = saved_necromancy_2
		}
		set_ruler_flag = necromancy_1
		set_ruler_flag = necromancy_2
	}
	if = {
		limit = {
			has_country_flag = saved_necromancy_3
		}
		set_ruler_flag = necromancy_1
		set_ruler_flag = necromancy_2
		set_ruler_flag = necromancy_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_transmutation_1
		}
		set_ruler_flag = transmutation_1
	}
	if = {
		limit = {
			has_country_flag = saved_transmutation_2
		}
		set_ruler_flag = transmutation_1
		set_ruler_flag = transmutation_2
	}
	if = {
		limit = {
			has_country_flag = saved_transmutation_3
		}
		set_ruler_flag = transmutation_1
		set_ruler_flag = transmutation_2
		set_ruler_flag = transmutation_3
	}
}

ruler_clear_spell_schools = {
	clr_country_flag = abjuration_1
	clr_country_flag = abjuration_2
	clr_country_flag = abjuration_3
	clr_country_flag = conjuration_1
	clr_country_flag = conjuration_2
	clr_country_flag = conjuration_3
	clr_country_flag = divination_1
	clr_country_flag = divination_2
	clr_country_flag = divination_3
	clr_country_flag = enchantment_1
	clr_country_flag = enchantment_2
	clr_country_flag = enchantment_3
	clr_country_flag = evocation_1
	clr_country_flag = evocation_2
	clr_country_flag = evocation_3
	clr_country_flag = illusion_1
	clr_country_flag = illusion_2
	clr_country_flag = illusion_3
	clr_country_flag = necromancy_1
	clr_country_flag = necromancy_2
	clr_country_flag = necromancy_3
	clr_country_flag = transmutation_1
	clr_country_flag = transmutation_2
	clr_country_flag = transmutation_3
}

ruler_clear_saved_spell_schools = {
	clr_country_flag = saved_abjuration_1
	clr_country_flag = saved_abjuration_2
	clr_country_flag = saved_abjuration_3
	clr_country_flag = saved_conjuration_1
	clr_country_flag = saved_conjuration_2
	clr_country_flag = saved_conjuration_3
	clr_country_flag = saved_divination_1
	clr_country_flag = saved_divination_2
	clr_country_flag = saved_divination_3
	clr_country_flag = saved_enchantment_1
	clr_country_flag = saved_enchantment_2
	clr_country_flag = saved_enchantment_3
	clr_country_flag = saved_evocation_1
	clr_country_flag = saved_evocation_2
	clr_country_flag = saved_evocation_3
	clr_country_flag = saved_illusion_1
	clr_country_flag = saved_illusion_2
	clr_country_flag = saved_illusion_3
	clr_country_flag = saved_necromancy_1
	clr_country_flag = saved_necromancy_2
	clr_country_flag = saved_necromancy_3
	clr_country_flag = saved_transmutation_1
	clr_country_flag = saved_transmutation_2
	clr_country_flag = saved_transmutation_3
}

magic_project_clear_lichdom_flags = {
	set_ruler_flag = magic_project_lichdom_complete
	clr_ruler_flag = magic_project_lichdom_started
	clr_ruler_flag = magic_project_lichdom_1
	clr_ruler_flag = magic_project_lichdom_2
	clr_ruler_flag = magic_project_lichdom_3
	clr_ruler_flag = magic_project_lichdom_4
	clr_ruler_flag = magic_project_lichdom_5
	clr_ruler_flag = magic_project_lichdom_6
	clr_ruler_flag = magic_project_lichdom_7
	clr_ruler_flag = magic_project_lichdom_8
	clr_ruler_flag = magic_project_lichdom_9
	clr_ruler_flag = magic_project_lichdom_10
	
	clr_ruler_flag = magic_project_lichdom_1_adventurers
	clr_ruler_flag = magic_project_lichdom_1_state
	clr_ruler_flag = magic_project_lichdom_1_myself
	clr_ruler_flag = magic_project_lichdom_2_amulet
	clr_ruler_flag = magic_project_lichdom_2_box
	clr_ruler_flag = magic_project_lichdom_5_a
	clr_ruler_flag = magic_project_lichdom_5_b
	clr_ruler_flag = magic_project_lichdom_5_c
	clr_ruler_flag = magic_project_lichdom_6_a
	clr_ruler_flag = magic_project_lichdom_6_b
	clr_ruler_flag = magic_project_lichdom_6_c
	clr_ruler_flag = magic_project_lichdom_7_heart
	clr_ruler_flag = magic_project_lichdom_7_unicorn
	clr_ruler_flag = magic_project_lichdom_8_a
}

magic_project_clear_lichdom_government_flags = {
	clr_country_flag = wizard_king_magocracy
	clr_country_flag = original_gov_monarchy
	clr_country_flag = original_gov_republic
	clr_country_flag = original_gov_theocracy
	clr_country_flag = original_gov_clergy
	clr_country_flag = original_gov_monastic
	clr_country_flag = original_gov_secular
	clr_country_flag = original_gov_adventurer
	clr_country_flag = original_gov_rezankand
	clr_country_flag = original_gov_oracular
	clr_country_flag = original_gov_tribal
}

clear_spell_flags = {
	clr_country_flag = spell_1
	clr_country_flag = spell_2
	clr_country_flag = spell_3
	clr_country_flag = spell_4
	clr_country_flag = spell_5
	clr_country_flag = spell_6
	clr_country_flag = spell_7
	clr_country_flag = spell_8
	clr_country_flag = spell_9
	clr_country_flag = spell_10
}

calculate_lichdom_chance = {
	set_variable ={
		which=$which$ value=0
	}
	
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_2_box
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_5_b
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_5_c
		}
		change_variable = {
			which = $which$
			value = 2
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_6_b
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_6_c
		}
		change_variable = {
			which = $which$
			value = 2
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_7_unicorn
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_8_a
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
}

count_provinces_in_capital_area = {
	set_variable ={
		which=$which$ value=0
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 1
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 2
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 4
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 6
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}	
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 8
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 10
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 12
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 14
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 16
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 18
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 20
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 22
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 24
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 26
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 28
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 30
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 32
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 34
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 36
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 38
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 40
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 42
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 44
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 46
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 48
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 50
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 60
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 70
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 80
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 90
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 100
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 110
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 120
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 140
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 160
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 180
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 200
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 10
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 225
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 250
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 275
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 300
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 325
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 350
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 375
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 400
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 425
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 450
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 475
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
	
	if = {
		limit = {
			num_of_owned_provinces_with = {
				value = 500
				is_in_capital_area = yes
			}
		}
		change_variable = {
			which = $which$
			value = 25
		}
	}
}

magic_ruler_give_contextual_spell_school = {
	#Yeah eventually lol
}

magic_ruler_give_random_spell_school = {
	random_list = {
		10 = {
			if = {
				limit = {
					is_abjuration_1 = yes
				}
				set_ruler_flag = abjuration_2
			}
			else_if = {
				limit = {
					is_abjuration_2 = yes
				}
				set_ruler_flag = abjuration_3
			}
			else = {
				set_ruler_flag = abjuration_1
			}
		}
		10 = {
			if = {
				limit = {
					is_conjuration_1 = yes
				}
				set_ruler_flag = conjuration_2
			}
			else_if = {
				limit = {
					is_conjuration_2 = yes
				}
				set_ruler_flag = conjuration_3
			}
			else = {
				set_ruler_flag = conjuration_1
			}
		}
		10 = {
			if = {
				limit = {
					is_divination_1 = yes
				}
				set_ruler_flag = divination_2
			}
			else_if = {
				limit = {
					is_divination_2 = yes
				}
				set_ruler_flag = divination_3
			}
			else = {
				set_ruler_flag = divination_1
			}
		}
		10 = {
			if = {
				limit = {
					is_enchantment_1 = yes
				}
				set_ruler_flag = enchantment_2
			}
			else_if = {
				limit = {
					is_enchantment_2 = yes
				}
				set_ruler_flag = enchantment_3
			}
			else = {
				set_ruler_flag = enchantment_1
			}
		}
		10 = {
			if = {
				limit = {
					is_evocation_1 = yes
				}
				set_ruler_flag = evocation_2
			}
			else_if = {
				limit = {
					is_evocation_2 = yes
				}
				set_ruler_flag = evocation_3
			}
			else = {
				set_ruler_flag = evocation_1
			}
		}
		10 = {
			if = {
				limit = {
					is_illusion_1 = yes
				}
				set_ruler_flag = illusion_2
			}
			else_if = {
				limit = {
					is_illusion_2 = yes
				}
				set_ruler_flag = illusion_3
			}
			else = {
				set_ruler_flag = illusion_1
			}
		}
		10 = {
			if = {
				limit = {
					is_necromancy_1 = yes
				}
				set_ruler_flag = necromancy_2
			}
			else_if = {
				limit = {
					is_necromancy_2 = yes
				}
				set_ruler_flag = necromancy_3
			}
			else = {
				set_ruler_flag = necromancy_1
			}
		}
		10 = {
			if = {
				limit = {
					is_transmutation_1 = yes
				}
				set_ruler_flag = transmutation_2
			}
			else_if = {
				limit = {
					is_transmutation_2 = yes
				}
				set_ruler_flag = transmutation_3
			}
			else = {
				set_ruler_flag = transmutation_1
			}
		}
	}
}

magic_ruler_give_random_adm_school = {
	random_list = {
		34 = {
			if = {
				limit = {
					is_conjuration_1 = yes
				}
				set_ruler_flag = conjuration_2
			}
			else_if = {
				limit = {
					is_conjuration_2 = yes
				}
				set_ruler_flag = conjuration_3
			}
			else = {
				set_ruler_flag = conjuration_1
			}
		}
		33 = {
			if = {
				limit = {
					is_transmutation_1 = yes
				}
				set_ruler_flag = transmutation_2
			}
			else_if = {
				limit = {
					is_transmutation_2 = yes
				}
				set_ruler_flag = transmutation_3
			}
			else = {
				set_ruler_flag = transmutation_1
			}
		}
		33 = {
			if = {
				limit = {
					is_divination_1 = yes
				}
				set_ruler_flag = divination_2
			}
			else_if = {
				limit = {
					is_divination_2 = yes
				}
				set_ruler_flag = divination_3
			}
			else = {
				set_ruler_flag = divination_1
			}
		}
	}
}

magic_ruler_give_random_dip_school = {
	random_list = {
		34 = {
			if = {
				limit = {
					is_abjuration_1 = yes
				}
				set_ruler_flag = abjuration_2
			}
			else_if = {
				limit = {
					is_abjuration_2 = yes
				}
				set_ruler_flag = abjuration_3
			}
			else = {
				set_ruler_flag = abjuration_1
			}
		}
		33 = {
			if = {
				limit = {
					is_enchantment_1 = yes
				}
				set_ruler_flag = enchantment_2
			}
			else_if = {
				limit = {
					is_enchantment_2 = yes
				}
				set_ruler_flag = enchantment_3
			}
			else = {
				set_ruler_flag = enchantment_1
			}
		}
		33 = {
			if = {
				limit = {
					is_necromancy_1 = yes
				}
				set_ruler_flag = necromancy_2
			}
			else_if = {
				limit = {
					is_necromancy_2 = yes
				}
				set_ruler_flag = necromancy_3
			}
			else = {
				set_ruler_flag = necromancy_1
			}
		}
	}
}

magic_ruler_give_random_mil_school = {
	random_list = {
		50 = {
			if = {
				limit = {
					is_evocation_1 = yes
				}
				set_ruler_flag = evocation_2
			}
			else_if = {
				limit = {
					is_evocation_2 = yes
				}
				set_ruler_flag = evocation_3
			}
			else = {
				set_ruler_flag = evocation_1
			}
		}
		50 = {
			if = {
				limit = {
					is_abjuration_1 = yes
				}
				set_ruler_flag = abjuration_2
			}
			else_if = {
				limit = {
					is_abjuration_2 = yes
				}
				set_ruler_flag = abjuration_3
			}
			else = {
				set_ruler_flag = abjuration_1
			}
		}
	}
}


clear_witch_king_points = {
	#variable is set in magic ruler initialization
	hidden_effect = {
		set_variable = {
			which = pointsWitchKing
			value = 0
		}
	}
}

increase_witch_king_points_small = {
	#variable is set in magic ruler initialization
	hidden_effect = {
		change_variable = {
			which = pointsWitchKing
			value = 1
		}
	}
}

increase_witch_king_points_medium = {
	#variable is set in magic ruler initialization
	hidden_effect = {
		change_variable = {
			which = pointsWitchKing
			value = 2
		}
	}
}

increase_witch_king_points_large = {
	#variable is set in magic ruler initialization
	hidden_effect = {
		change_variable = {
			which = pointsWitchKing
			value = 3
		}
	}
}

magic_project_clear_homunculus_flags = {
		hidden_effect = {
			clr_ruler_flag = magic_project_homunculus_started
			clr_ruler_flag = magic_project_homunculus_1
			clr_ruler_flag = magic_project_homunculus_2
			clr_ruler_flag = magic_project_homunculus_3
			clr_ruler_flag = magic_project_homunculus_4
			clr_ruler_flag = magic_project_homunculus_5
			clr_ruler_flag = magic_project_homunculus_complete
			
			clr_ruler_flag = homunculus_current_male
			clr_ruler_flag = homunculus_current_female
			clr_ruler_flag = homunculus_current_androgyne
			clr_ruler_flag = homunculus_current_humanlike
			clr_ruler_flag = homunculus_current_artificial
		}
}

casted_foresight_spell_flag = {
	if = {
		limit = { 
			has_ruler_flag = foresight_spell_1
			NOT = { has_ruler_flag = foresight_spell_2 }
		}
		set_ruler_flag = foresight_spell_2
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_2
			NOT = { has_ruler_flag = foresight_spell_3 }
		}
		set_ruler_flag = foresight_spell_3
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_3
			NOT = { has_ruler_flag = foresight_spell_4 }
		}
		set_ruler_flag = foresight_spell_4
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_4
			NOT = { has_ruler_flag = foresight_spell_5 }
		}
		set_ruler_flag = foresight_spell_5
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_5
			NOT = { has_ruler_flag = foresight_spell_6 }
		}
		set_ruler_flag = foresight_spell_6
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_6
			NOT = { has_ruler_flag = foresight_spell_7 }
		}
		set_ruler_flag = foresight_spell_7
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_7
			NOT = { has_ruler_flag = foresight_spell_8 }
		}
		set_ruler_flag = foresight_spell_8
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_8
			NOT = { has_ruler_flag = foresight_spell_9 }
		}
		set_ruler_flag = foresight_spell_9
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_9
			NOT = { has_ruler_flag = foresight_spell_10 }
		}
		set_ruler_flag = foresight_spell_10
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_10
			NOT = { has_ruler_flag = foresight_spell_11 }
		}
		set_ruler_flag = foresight_spell_11
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_11
			NOT = { has_ruler_flag = foresight_spell_12 }
		}
		set_ruler_flag = foresight_spell_12
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_12
			NOT = { has_ruler_flag = foresight_spell_13 }
		}
		set_ruler_flag = foresight_spell_13
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_13
			NOT = { has_ruler_flag = foresight_spell_14 }
		}
		set_ruler_flag = foresight_spell_14
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_14
			NOT = { has_ruler_flag = foresight_spell_15 }
		}
		set_ruler_flag = foresight_spell_15
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_15
			NOT = { has_ruler_flag = foresight_spell_16 }
		}
		set_ruler_flag = foresight_spell_16
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_16
			NOT = { has_ruler_flag = foresight_spell_17 }
		}
		set_ruler_flag = foresight_spell_17
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_17
			NOT = { has_ruler_flag = foresight_spell_18 }
		}
		set_ruler_flag = foresight_spell_18
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_18
			NOT = { has_ruler_flag = foresight_spell_19 }
		}
		set_ruler_flag = foresight_spell_19
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_19
			NOT = { has_ruler_flag = foresight_spell_20 }
		}
		set_ruler_flag = foresight_spell_20
	}
	else = {
		set_ruler_flag = foresight_spell_1
	}
}

apply_foresight_spell = {
	if = {
		limit = {
			#has_ruler_flag = foresight_spell_1
		}
		random_list = {
			99 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			1 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_2
		}
		random_list = {
			98 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			2 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_3
		}
		random_list = {
			97 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			3 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}

		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_4
		}
		random_list = {
			96 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			4 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_5
		}
		random_list = {
			95 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			5 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_6
		}
		random_list = {
			94 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			6 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_7
		}
		random_list = {
			93 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			7 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_8
		}
		random_list = {
			92 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			8 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_9
		}
		random_list = {
			91 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			9 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_10
		}
		random_list = {
			90 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			10 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_11
		}
		random_list = {
			85 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			15 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_12
		}
		random_list = {
			80 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			20 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_13
		}
		random_list = {
			75 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			25 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_14
		}
		random_list = {
			70 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			30 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_15
		}
		random_list = {
			65 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			35 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_16
		}
		random_list = {
			60 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			40 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_17
		}
		random_list = {
			55 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			45 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_18
		}
		random_list = {
			50 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			50 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_19
		}
		random_list = {
			40 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			60 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
	if = {
		limit = {
			has_ruler_flag = foresight_spell_20
		}
		random_list = {
			20 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
			80 = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight_madness
					duration = -1
				}
				change_adm = -6
				change_dip = -6
				change_mil = -6
			}
		}
	}
}

magic_study_clear_study_effects = {
	clr_ruler_flag = ruler_studying_abjuration
	clr_ruler_flag = ruler_studying_conjuration
	clr_ruler_flag = ruler_studying_divination
	clr_ruler_flag = ruler_studying_enchantment
	clr_ruler_flag = ruler_studying_evocation
	clr_ruler_flag = ruler_studying_illusion
	clr_ruler_flag = ruler_studying_necromancy
	clr_ruler_flag = ruler_studying_transmutation
	
	clr_ruler_flag = ruler_studying_help_from_mages_estate
	clr_ruler_flag = ruler_studying_help_from_advisor
	clr_ruler_flag = ruler_studying_library_archives
	clr_ruler_flag = ruler_studying_ancient_tome_found
	clr_ruler_flag = ruler_studying_magic_relic
	clr_ruler_flag = ruler_studying_magic_precursor_knowledge
	clr_ruler_flag = ruler_studying_magisterial_support
	clr_ruler_flag = ruler_studying_mana_1
	clr_ruler_flag = ruler_studying_mana_2
	clr_ruler_flag = ruler_studying_mana_3
	clr_ruler_flag = ruler_studying_gold_1
	clr_ruler_flag = ruler_studying_gold_2
	clr_ruler_flag = ruler_studying_gold_3
	clr_ruler_flag = ruler_studying_unregulated_research
	clr_ruler_flag = ruler_studying_unsafe_experiments
	clr_ruler_flag = ruler_studying_live_experiments
	clr_ruler_flag = ruler_studying_forbidden_knowledge
	clr_ruler_flag = ruler_studying_appealed_to_darker_powers
	
	clr_ruler_flag = money_magic_study
	clr_ruler_flag = ruler_studying_magic_flag
	clr_ruler_flag = magical_study_1
	clr_ruler_flag = magical_study_2
	clr_ruler_flag = magical_study_3
	
	remove_country_modifier = ruler_studying_magic
	
	hidden_effect = {
		set_variable = {
			which = ruler_study_experience 
			value = 0
		}
	}
}

magic_study_level_up_abjuration = {
	if = {
		limit = { 
			is_abjuration_1 = yes
		}
		set_ruler_flag = abjuration_2
		custom_tooltip = tooltip_abjuration_2_level_up 
	}
	else_if = {
		limit = { 
			is_abjuration_2 = yes
		}
		set_ruler_flag = abjuration_3
		custom_tooltip = tooltip_abjuration_3_level_up 
	}
	else = {
		set_ruler_flag = abjuration_1
		custom_tooltip = tooltip_abjuration_1_level_up 
	}
	
	if = {
		limit = { 
			has_ruler_flag = ruler_studying_abjuration
		}
		magic_study_clear_study_effects = yes
	}
}

magic_study_level_up_conjuration = {
	if = {
		limit = { 
			is_conjuration_1 = yes
		}
		set_ruler_flag = conjuration_2
		custom_tooltip = tooltip_conjuration_2_level_up 
	}
	else_if = {
		limit = { 
			is_conjuration_2 = yes
		}
		set_ruler_flag = conjuration_3
		custom_tooltip = tooltip_conjuration_3_level_up 
	}
	else = {
		set_ruler_flag = conjuration_1
		custom_tooltip = tooltip_conjuration_1_level_up 
	}
	
	if = {
		limit = { 
			has_ruler_flag = ruler_studying_conjuration
		}
		magic_study_clear_study_effects = yes
	}
}

magic_study_level_up_divination = {
	if = {
		limit = { 
			is_divination_1 = yes
		}
		set_ruler_flag = divination_2
		custom_tooltip = tooltip_divination_2_level_up 
	}
	else_if = {
		limit = { 
			is_divination_2 = yes
		}
		set_ruler_flag = divination_3
		custom_tooltip = tooltip_divination_3_level_up 
	}
	else_if = {
		limit = { is_divination_0 = yes }
		set_ruler_flag = divination_1
		custom_tooltip = tooltip_divination_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_divination
		}
		magic_study_clear_study_effects = yes
	}
}

magic_study_level_up_enchantment = {
	if = {
		limit = { 
			is_enchantment_1 = yes
		}
		set_ruler_flag = enchantment_2
		custom_tooltip = tooltip_enchantment_2_level_up 
	}
	else_if = {
		limit = { 
			is_enchantment_2 = yes
		}
		set_ruler_flag = enchantment_3
		custom_tooltip = tooltip_enchantment_3_level_up 
	}
	else_if = {
		limit = { is_enchantment_0 = yes }
		set_ruler_flag = enchantment_1
		custom_tooltip = tooltip_enchantment_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_enchantment
		}
		magic_study_clear_study_effects = yes
	}
}

magic_study_level_up_evocation = {
	if = {
		limit = { 
			is_evocation_1 = yes
		}
		set_ruler_flag = evocation_2
		custom_tooltip = tooltip_evocation_2_level_up 
	}
	else_if = {
		limit = { 
			is_evocation_2 = yes
		}
		set_ruler_flag = evocation_3
		custom_tooltip = tooltip_evocation_3_level_up 
	}
	else_if = {
		limit = { is_evocation_0 = yes }
		set_ruler_flag = evocation_1
		custom_tooltip = tooltip_evocation_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_evocation
		}
		magic_study_clear_study_effects = yes
	}
}

magic_study_level_up_illusion = {
	if = {
		limit = { 
			is_illusion_1 = yes
		}
		set_ruler_flag = illusion_2
		custom_tooltip = tooltip_illusion_2_level_up 
	}
	else_if = {
		limit = { 
			is_illusion_2 = yes
		}
		set_ruler_flag = illusion_3
		custom_tooltip = tooltip_illusion_3_level_up 
	}
	else_if = {
		limit = { is_illusion_0 = yes }
		set_ruler_flag = illusion_1
		custom_tooltip = tooltip_illusion_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_illusion
		}
		magic_study_clear_study_effects = yes
	}
}

magic_study_level_up_necromancy = {
	if = {
		limit = { 
			is_necromancy_1 = yes
		}
		set_ruler_flag = necromancy_2
		custom_tooltip = tooltip_necromancy_2_level_up 
	}
	else_if = {
		limit = { 
			is_necromancy_2 = yes
		}
		set_ruler_flag = necromancy_3
		custom_tooltip = tooltip_necromancy_3_level_up 
	}
	else_if = {
		limit = { is_necromancy_0 = yes }
		set_ruler_flag = necromancy_1
		custom_tooltip = tooltip_necromancy_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_necromancy
		}
		magic_study_clear_study_effects = yes
	}
}

magic_study_level_up_transmutation = {
	if = {
		limit = { 
			is_transmutation_1 = yes
		}
		set_ruler_flag = transmutation_2
		custom_tooltip = tooltip_transmutation_2_level_up 
	}
	else_if = {
		limit = { 
			is_transmutation_2 = yes
		}
		set_ruler_flag = transmutation_3
		custom_tooltip = tooltip_transmutation_3_level_up 
	}
	else_if = {
		limit = { is_transmutation_0 = yes }
		set_ruler_flag = transmutation_1
		custom_tooltip = tooltip_transmutation_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_transmutation
		}
		magic_study_clear_study_effects = yes
	}
}

magic_study_level_up_all = {
	magic_study_level_up_abjuration = yes
	magic_study_level_up_divination = yes
	magic_study_level_up_conjuration = yes
	magic_study_level_up_enchantment = yes
	magic_study_level_up_evocation = yes
	magic_study_level_up_illusion = yes
	magic_study_level_up_necromancy = yes
	magic_study_level_up_transmutation = yes
}

magic_study_level_up_mana = {
	if = {
		limit = { 
			has_ruler_flag = ruler_studying_mana_1
			NOT = { has_ruler_flag = ruler_studying_mana_2 }
		}
		set_ruler_flag = ruler_studying_mana_2
	}
	else_if = {
		limit = { 
			has_ruler_flag = ruler_studying_mana_2
			NOT = { has_ruler_flag = ruler_studying_mana_3 }
		}
		set_ruler_flag = ruler_studying_mana_3
	}
	else = {
		set_ruler_flag = ruler_studying_mana_1
	}
}

magic_study_level_up_gold = {
	if = {
		limit = { 
			has_ruler_flag = ruler_studying_gold_1
			NOT = { has_ruler_flag = ruler_studying_gold_2 }
		}
		set_ruler_flag = ruler_studying_gold_2
	}
	else_if = {
		limit = { 
			has_ruler_flag = ruler_studying_gold_2
			NOT = { has_ruler_flag = ruler_studying_gold_3 }
		}
		set_ruler_flag = ruler_studying_gold_3
	}
	else = {
		set_ruler_flag = ruler_studying_gold_1
	}
}

remove_siege_spells_from_province = {
	remove_province_modifier = siege_magic_elemental_besieger
	remove_province_modifier = siege_magic_giant_besieger
	remove_province_modifier = siege_magic_dragon_besieger
}

magic_casted_spell = {
#Eventually this would be spending spell slots, but for its a spell-a-month limit
	hidden_effect = {
		ROOT = {
			add_ruler_modifier = { 
				name = ruler_recently_casted_spell
				duration = 28 #a month
				desc = ruler_recently_casted_spell_desc
				#hidden = yes
			}
		}
	}
	if = {
		limit = { has_ruler_flag = magic_menu_opened }
			clr_ruler_flag = magic_menu_opened 
	}
}

open_single_menu = {
	set_ruler_flag = magic_menu_opened
}

close_single_menu = {
		if = {
			limit = { has_ruler_flag = magic_menu_opened }
			clr_ruler_flag = magic_menu_opened 
		}
}

clear_siege_magic_effects = {
	#remove_province_modifier = 
}

remove_government_name_changers = {
	clr_country_flag = is_a_county
	clr_country_flag = knightly_order_adventurer
}

clear_mage_organization_effect = {
	clr_country_flag = mage_organization_decentralized_flag
	clr_country_flag = mage_organization_centralized_flag
	clr_country_flag = mage_organization_magisterium_flag

	remove_country_modifier = mage_organization_decentralized
	remove_country_modifier = mage_organization_centralized
	remove_country_modifier = mage_organization_magisterium
}

count_provinces_with_farm_goods_effect = {	#it isnt an actual count its used for the Plant Growth spell, its in 2's til 50 then 10's til 100, 25's til 500
	set_variable = {
		which=$which$ value=0
	}
	
	every_owned_province = {
	    limit = { plant_growth_target = yes }
	    ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}


count_provinces_owned_by_neighbours_effect = {
	set_variable = {
		which=$which$ value=0
	}
	
	
	every_province = {
		limit = {
			owner = {
				is_neighbor_of = ROOT
			}
		}
		ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}

count_provinces_owned_by_war_enemies_effect = {
	set_variable = {
		which=$which$ 
		value=0
	}
	
	every_province = {
		limit = {
			owner = {
				war_with = ROOT
			}
		}
		ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}

}

count_provinces_owned_by_country_effect = {	
	set_variable = {
		which=$which$ 
		value=0
	}
	
	every_owned_province = {
		ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}

count_provinces_owned_by_rivals_effect = {	
	set_variable = {
		which=$which$ 
		value=0
	}
	
	every_province = {
		limit = {
			owner = {
				ROOT = { is_rival = PREV }
			}
		}
		ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}


randomize_leader_pips_nonmagical_effect = {	#more chances for low pips in the random list
	set_variable = {
		which=$which$ 
		value=0
	}
	export_to_variable = {
		which = $which$
		value = MIL	
		who = ROOT
	}
	
	# if = {
		# limit = {
			# army_tradition = 20
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 40
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 60
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 80
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 100
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	
	random_list = {
		10 = {
			change_variable = {
				which = $which$
				value = 0
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 1
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 2
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 3
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 4
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 5
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 1
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 2
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 3
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 1
			}
		}
	}
	
	#Invalid number checks
	if = {
		limit = {
			check_variable = {
				which = $which$
				value = 12	
			}
		}
		set_variable = {
			which = $which$
			value = 11	
		}
	}
	if = {
		limit = {
			check_variable = {
				which = $which$
				value = 0	
			}
			NOT = {
				check_variable = {
					which = $which$
					value = 1
				}
			}
		}
		set_variable = {
			which = $which$
			value = 0
		}
	}
}

randomize_leader_pips_magical_effect = {	#more chances for high pips in the random list
	set_variable = {
		which=$which$ value=0
	}
	export_to_variable = {
		which = $which$
		value = MIL
		who = ROOT
	}

	
	# if = {
		# limit = {
			# army_tradition = 20
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 40
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 60
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 80
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 100
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	
	
	random_list = {
		10 = {
			change_variable = {
				which = $which$
				value = 4
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 4
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 5
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 6
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 7
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 8
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 9
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 10
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 11
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 12
			}
		}
	}
	
	#Invalid number checks
	if = {
		limit = {
			check_variable = {
				which = $which$
				value = 12	
			}
		}
		set_variable = {
			which = $which$
			value = 11	
		}
	}
	# if = {
		# limit = {
			# check_variable = {
				# which = $which$
				# value = 0	
			# }
			# NOT = {
				# check_variable = {
					# which = $which$
					# value = 1
				# }
			# }
		# }
		# set_variable = {
			# which = $which$
			# value = 0
		# }
	# }
}

set_add_relics_count = {
	hidden_effect = { REB = { change_variable = { num_precursor_relics = 1 } } }
}

set_add_damestear_count = {
	hidden_effect = { REB = { change_variable = { num_damestear = 1 } } }
}

set_add_orc_slaves_count = {
	hidden_effect = {
		REB = {
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = num_orc_slaves
							value = 0
						}
					}
				}
				set_variable = {
					which = num_orc_slaves
					value = 1
				}
			}
			else = {
				change_variable = {
					which = num_orc_slaves
					value = 1
				}
			}
		}
	}
}

set_add_ruin_count = {
	hidden_effect = { REB = { change_variable = { num_ruin = 1 } } }
}

ynn_barge_clear_flag = {
	clr_country_flag = little_barges
	clr_country_flag = normal_barges
	clr_country_flag = big_barges
	clr_country_flag = ynn_barge_distance_0
	clr_country_flag = ynn_barge_distance_1
	clr_country_flag = ynn_barge_distance_2
	clr_country_flag = ynn_barge_distance_3
	clr_country_flag = ynn_dam_mocbarja
	clr_country_flag = ynn_dam_bosancovac
	clr_country_flag = ynn_dam_vels_bacar
	clr_country_flag = ynn_dam_adbrabohvi
	clr_country_flag = ynn_reward_1
	clr_country_flag = ynn_reward_2
	clr_country_flag = ynn_reward_3
	clr_country_flag = ynn_reward_4
	clr_country_flag = ynn_reward_5
	clr_country_flag = ynn_reward_6
	clr_country_flag = ynn_reward_7
}

ynn_reward = {
	trigger_switch = {
		on_trigger = has_country_flag
		
		ynn_reward_1 = { add_prestige = 2 add_legitimacy = 2 }
		ynn_reward_2 = { add_prestige = 5 increase_legitimacy_small_effect = yes }
		ynn_reward_3 = { add_prestige = 5 increase_legitimacy_small_effect = yes  add_dip_power = 10 }
		ynn_reward_4 = { add_prestige = 5 increase_legitimacy_small_effect = yes  add_dip_power = 15 }
		ynn_reward_5 = { add_prestige = 10 increase_legitimacy_medium_effect = yes  add_dip_power = 20 }
		ynn_reward_6 = { add_prestige = 10 increase_legitimacy_medium_effect = yes  add_dip_power = 20 random = { chance = 50 add_stability_or_adm_power = yes } }
		ynn_reward_7 = { add_prestige = 15 increase_legitimacy_large_effect = yes  add_dip_power = 30 add_stability_or_adm_power = yes }
	}
}

rahen_remove_harimraj_reforms_effect = {
	remove_country_modifier = rahen_board_of_inquiry
	remove_country_modifier = rahen_restoring_ministry_1
	remove_country_modifier = rahen_restoring_ministry_2
	remove_country_modifier = rahen_restoring_ministry_3
	remove_country_modifier = rahen_restoring_ministry_4
	remove_country_modifier = rahen_raja_accompanying_diplomatic_missions
	remove_country_modifier = rahen_raja_restored_court_reputation_1
	remove_country_modifier = rahen_raja_restored_court_reputation_2
	remove_country_modifier = rahen_raja_restored_court_reputation_3
	remove_country_modifier = rahen_raja_restored_court_reputation_4
	remove_country_modifier = rahen_raja_restored_court_reputation_5
	clr_country_flag = rahen_ministries_disbanded_1
	clr_country_flag = rahen_ministries_disbanded_2
}

rahen_add_completed_reforms_flag = {
	if = {
		limit = {
			4411 = { 
				NOT = {
					has_province_modifier = rahen_corrupt_ministers
					has_province_modifier = rahen_powerful_nobility
					has_province_modifier = rahen_arrogant_foreign_office
					has_province_modifier = rahen_disloyal_officers
				} 
			}
		}
		set_country_flag = reformed_rahen_court
	}
}


blood_lotus_rebellion_spawns_headquarters = {
	random_owned_province = {
		limit = {
			OR = {
				culture_group = upper_raheni
				culture_group = middle_raheni
				culture_group = south_raheni
				has_human_minority_trigger = yes
			}
			NOT = {
				has_province_modifier = blood_lotus_guerrillas
				has_province_modifier = blood_lotus_guerrillas_hidden
				has_province_modifier = blood_lotus_sympathizers
			}
			superregion = rahen_superregion
			NOT = {
				calc_true_if = {
					region_for_scope_province = { has_province_modifier = blood_lotus_headquarter }
					amount = 2
				}
			}
		}
		add_province_modifier = {
			name = blood_lotus_headquarter
			duration = -1
		}
		spawn_rebels = {
			type = blood_lotus_rebel
			size = 2
			win = yes
		}
	}
}

blood_lotus_rebellion_spawns = {
	random_owned_province = {
		limit = {
			OR = {
				culture_group = upper_raheni
				culture_group = middle_raheni
				culture_group = south_raheni
				has_human_minority_trigger = yes
			}
			NOT = {
				has_province_modifier = blood_lotus_guerrillas
				has_province_modifier = blood_lotus_guerrillas_hidden
				has_province_modifier = blood_lotus_headquarter
			}
			superregion = rahen_superregion
		}
		add_province_modifier = {
			name = blood_lotus_guerrillas
			duration = -1
		}
	}
}

blood_lotus_rebellion_spawns_hidden = {
	random_owned_province = {
		limit = {
			OR = {
				culture_group = upper_raheni
				culture_group = middle_raheni
				culture_group = south_raheni
				has_human_minority_trigger = yes
			}
			NOT = {
				has_province_modifier = blood_lotus_guerrillas
				has_province_modifier = blood_lotus_guerrillas_hidden
				has_province_modifier = blood_lotus_headquarter
			}
			superregion = rahen_superregion
			has_province_modifier = blood_lotus_sympathizers
		}
		add_province_modifier = {
			name = blood_lotus_guerrillas_hidden
			duration = -1
			hidden = yes
		}
	}
}

blood_lotus_rebellion_spreads = {
	random_owned_province = {
		limit = {
			OR = {
				has_province_modifier = blood_lotus_guerrillas
				has_province_modifier = blood_lotus_headquarter
			}
			any_neighbor_province = { #To ensure that it can spread to a neighbouring province
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
			}
			superregion = rahen_superregion
		}
		random_neighbor_province = {
			limit = {
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
			}
			add_province_modifier = {
				name = blood_lotus_guerrillas
				duration = -1
			}
		}
	}
}

blood_lotus_rebellion_spreads_hidden = {
	random_owned_province = {
		limit = {
			OR = {
				has_province_modifier = blood_lotus_guerrillas_hidden
				has_province_modifier = blood_lotus_guerrillas
				has_province_modifier = blood_lotus_headquarter
			}
			any_neighbor_province = { #To ensure that it can spread to a neighbouring province
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
				has_province_modifier = blood_lotus_sympathizers
			}
			superregion = rahen_superregion
		}
		random_neighbor_province = {
			limit = {
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
				has_province_modifier = blood_lotus_sympathizers
			}
			add_province_modifier = {
				name = blood_lotus_guerrillas_hidden
				duration = -1
				hidden = yes
			}
		}
	}
}

blood_lotus_rebellion_moves = {
	random_owned_province = {
		limit = {
			OR = {
				has_province_modifier = blood_lotus_guerrillas
			}
			any_neighbor_province = { #To ensure that it can spread to a neighbouring province
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
			}
			superregion = rahen_superregion
		}
		random_neighbor_province = {
			limit = {
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
			}
			add_province_modifier = {
				name = blood_lotus_guerrillas
				duration = -1
			}
			PREV = { remove_province_modifier = blood_lotus_guerrillas }
		}
	}
}

blood_lotus_rebellion_moves_hidden = {
	random_owned_province = {
		limit = {
			OR = {
				has_province_modifier = blood_lotus_guerrillas_hidden
			}
			any_neighbor_province = { #To ensure that it can spread to a neighbouring province
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
				has_province_modifier = blood_lotus_sympathizers
			}
			superregion = rahen_superregion
		}
		random_neighbor_province = {
			limit = {
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
				has_province_modifier = blood_lotus_sympathizers
			}
			add_province_modifier = {
				name = blood_lotus_guerrillas_hidden
				duration = -1
				hidden = yes
			}
			PREV = { remove_province_modifier = blood_lotus_guerrillas_hidden }
		}
	}
}

blood_lotus_rebellion_hides = {
	random_owned_province = {
		limit = {
			OR = {
				has_province_modifier = blood_lotus_guerrillas
			}
			any_neighbor_province = { #To ensure that it can spread to a neighbouring province
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
				has_province_modifier = blood_lotus_sympathizers
			}
			
			superregion = rahen_superregion
		}
		random_neighbor_province = {
			limit = {
				NOT = {
					has_province_modifier = blood_lotus_guerrillas
					has_province_modifier = blood_lotus_guerrillas_hidden
					has_province_modifier = blood_lotus_headquarter
				}
				superregion = rahen_superregion
				owned_by = ROOT
				has_province_modifier = blood_lotus_sympathizers
			}
			add_province_modifier = {
				name = blood_lotus_guerrillas_hidden
				duration = -1
				hidden = yes
			}
			PREV = { remove_province_modifier = blood_lotus_guerrillas }
		}
	}
}

blood_lotus_new_sympathizers = {
	random_owned_province = {
		limit = {
			OR = {
				culture_group = upper_raheni
				culture_group = middle_raheni
				culture_group = south_raheni
				has_human_minority_trigger = yes
			}
			NOT = {
				has_province_modifier = blood_lotus_sympathizers
				has_province_modifier = blood_lotus_headquarter
				has_province_modifier = blood_lotus_dissuaded_sympathizers
			}
			superregion = rahen_superregion
			owned_by = ROOT
		}
		area = {
			limit = {
				OR = {
					culture_group = upper_raheni
					culture_group = middle_raheni
					culture_group = south_raheni
					has_human_minority_trigger = yes
				}
				NOT = {
					has_province_modifier = blood_lotus_sympathizers
					has_province_modifier = blood_lotus_headquarter
					has_province_modifier = blood_lotus_dissuaded_sympathizers
				}
				superregion = rahen_superregion
				owned_by = ROOT
			}
			add_province_modifier = {
				name = blood_lotus_sympathizers
				duration = -1
			}
		}
	}
}

clear_oracle_prophecy_flag = {
	clr_ruler_flag = prophecy_bad_outcome
	clr_ruler_flag = prophecy_grey_outcome
	clr_ruler_flag = prophecy_good_outcome
	clr_ruler_flag = prophecy_low_intensity
	clr_ruler_flag = prophecy_high_intensity
	clr_ruler_flag = oracle_prophecy_ongoing
}


harpy_define_pop_to_take = {
	random_province = {
		limit = { OR = { AND = { owned_by = ROOT is_capital = no } owner = { is_subject_of = ROOT } } NOT = { has_province_flag = harpy_pop_@ROOT has_harpy_majority_trigger = yes } is_city = yes development = 4 }
		set_province_flag = option_harpy_pop_1_@ROOT
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop1
	}
	random_province = {
		limit = { OR = { AND = { owned_by = ROOT is_capital = no } owner = { is_subject_of = ROOT } } NOT = { has_province_flag = harpy_pop_@ROOT has_harpy_majority_trigger = yes } is_city = yes development = 4 }
		set_province_flag = option_harpy_pop_2_@ROOT
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop2
	}
	random_province = {
		limit = { OR = { AND = { owned_by = ROOT is_capital = no } owner = { is_subject_of = ROOT } } NOT = { has_province_flag = harpy_pop_@ROOT has_harpy_majority_trigger = yes } is_city = yes development = 4 }
		set_province_flag = option_harpy_pop_3_@ROOT
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop3
	}
	random_province = {
		limit = { OR = { AND = { owned_by = ROOT is_capital = no } owner = { is_subject_of = ROOT } } NOT = { has_province_flag = harpy_pop_@ROOT has_harpy_majority_trigger = yes } is_city = yes development = 4 }
		set_province_flag = option_harpy_pop_4_@ROOT
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop4
	}
}

harpy_move_pop_to_capital_effect = {
	if = { 
		limit = { has_dwarven_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_dwarven_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_dwarven_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_elven_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_elven_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_elven_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_halfling_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_halfling_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_halfling_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_gnomish_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_gnomish_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_gnomish_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_half_orcish_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_half_orcish_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_half_orcish_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_kobold_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_kobold_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_kobold_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_orcish_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_orcish_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_orcish_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_gnollish_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_gnollish_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_gnollish_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_ruinborn_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_ruinborn_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_ruinborn_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_goblin_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_goblin_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_goblin_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_troll_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_troll_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_troll_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_half_elven_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_half_elven_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_half_elven_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_ogre_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_ogre_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_ogre_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_harimari_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_harimari_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_harimari_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_centaur_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_centaur_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_centaur_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_hobgoblin_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_hobgoblin_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_hobgoblin_minority_size_effect = yes
				}
			}
		}
	}
	else_if = {
		limit = { has_human_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = {
					limit = { has_large_human_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_human_minority_size_effect = yes
				}
			}
		}
	}
	random_list = {
		33 = { add_base_tax = -1 ROOT = { capital_scope = { add_base_tax = 1 } } }
		33 = { add_base_production = -1 ROOT = { capital_scope = { add_base_production = 1 } } }
		33 = { add_base_manpower = -1 ROOT = { capital_scope = { add_base_manpower = 1 } } }
	}
	if = {
		limit = { NOT = { owned_by = ROOT } }
		owner = { add_liberty_desire = 10 }
	}
	add_devastation = 5
}

harpy_define_raid_target = {
	random_owned_province = {
		limit = {
			any_province = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				is_city = yes
				has_discovered = ROOT
			}
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				feudalism = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				renaissance = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				new_world_i = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				printing_press = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				global_trade = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				manufactories = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				enlightenment = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				industrialization = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid1
		}
		event_target:harpy_raid1 = {
			set_province_flag = harpy_raid_@ROOT
		}
	}
	random_owned_province = {
		limit = {
			any_province = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				is_city = yes
				has_discovered = ROOT
			}
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				feudalism = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				renaissance = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				new_world_i = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				printing_press = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				global_trade = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				manufactories = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				enlightenment = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				industrialization = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid2
		}
		event_target:harpy_raid2 = {
			set_province_flag = harpy_raid_@ROOT
		}
	}
	random_owned_province = {
		limit = {
			any_province = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				is_city = yes
				has_discovered = ROOT
			}
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				feudalism = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				renaissance = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				new_world_i = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				printing_press = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				global_trade = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				manufactories = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				enlightenment = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				industrialization = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid3
		}
		event_target:harpy_raid3 = {
			set_province_flag = harpy_raid_@ROOT
		}
	}
	random_owned_province = {
		limit = {
			any_province = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				is_city = yes
				has_discovered = ROOT
			}
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				feudalism = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				renaissance = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				new_world_i = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				printing_press = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				global_trade = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				manufactories = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				enlightenment = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		random_province = {
			limit = {
				NOT = {
					province_distance = {
						who = PREV
						distance = 100
					}
				}
				NOT = {
					has_province_flag = harpy_raid_@ROOT
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
				}
				industrialization = 100
				is_city = yes
				has_discovered = ROOT
			}
			save_event_target_as = harpy_raid4
		}
		event_target:harpy_raid4 = {
			set_province_flag = harpy_raid_@ROOT
		}
	}
}

harpy_raid_effect = {
	if = {
		limit = { development = 50 }
		remove_loot = {
			who = ROOT
			amount = 25
		}
	}
	else_if = {
		limit = { development = 40 }
		remove_loot = {
			who = ROOT
			amount = 20
		}
	}
	else_if = {
		limit = { development = 35 }
		remove_loot = {
			who = ROOT
			amount = 17.5
		}
	}
	else_if = {
		limit = { development = 30 }
		remove_loot = {
			who = ROOT
			amount = 15
		}
	}
	else_if = {
		limit = { development = 25 }
		remove_loot = {
			who = ROOT
			amount = 12.5
		}
	}
	else_if = {
		limit = { development = 20 }
		remove_loot = {
			who = ROOT
			amount = 10
		}
	}
	else_if = {
		limit = { development = 15 }
		remove_loot = {
			who = ROOT
			amount = 7.5
		}
	}
	else_if = {
		limit = { development = 10 }
		remove_loot = {
			who = ROOT
			amount = 5
		}
	}
	else = {
		remove_loot = {
			who = ROOT
			amount = 2.5
		}
	}
	add_devastation = 10
	
	# if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { feudalism = 100 } } } feudalism = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { feudalism = 100 } }
				# add_institution_embracement = { which = feudalism value = 20 }
			# }
		# }
	# }
	if = { 
		limit = { ROOT = { capital_scope = { NOT = { feudalism = 100 } } } feudalism = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = feudalism value = 10 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { renaissance = 100 } } } renaissance = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { renaissance = 100 } }
				# add_institution_embracement = { which = renaissance value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { renaissance = 100 } } } renaissance = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = renaissance value = 10 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { new_world_i = 100 } } } new_world_i = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { new_world_i = 100 } }
				# add_institution_embracement = { which = new_world_i value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { new_world_i = 100 } } } new_world_i = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = new_world_i value = 10 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { printing_press = 100 } } } printing_press = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { printing_press = 100 } }
				# add_institution_embracement = { which = printing_press value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { printing_press = 100 } } } printing_press = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = printing_press value = 10 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { global_trade = 100 } } } global_trade = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { global_trade = 100 } }
				# add_institution_embracement = { which = global_trade value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { global_trade = 100 } } } global_trade = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = global_trade value = 10 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { manufactories = 100 } } } manufactories = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { manufactories = 100 } }
				# add_institution_embracement = { which = manufactories value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { manufactories = 100 } } } manufactories = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = manufactories value = 10 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { enlightenment = 100 } } } enlightenment = 100 }
		# ROOT = {
			# random_owned_province = {
				# limit = { NOT = { enlightenment = 100 } }
				# add_institution_embracement = { which = enlightenment value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { enlightenment = 100 } } } enlightenment = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = enlightenment value = 10 } }
		}
	}
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { industrialization = 100 } } } industrialization = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = industrialization value = 10 } }
		}
	}
	owner = { add_opinion = { who = ROOT modifier = the_hunt_raided_province } }
}

harpy_build_roost_region = {
	random_owned_province = {
		limit = {
			NOT = { region_for_scope_province = { OR = { has_province_flag = harpy_roost_region_@ROOT is_capital_of = ROOT has_province_modifier = harpy_roost } } }
			has_harpy_majority_trigger = yes
			OR = { has_terrain = mountain has_terrain = highlands has_terrain = hills }
			is_city = yes
			fort_level = 1
		}
		set_province_flag = option_harpy_roost_region_1_@ROOT
		set_province_flag = harpy_roost_region_@ROOT
		save_event_target_as = harpy_roost_region1
	}
	random_owned_province = {
		limit = {
			NOT = { region_for_scope_province = { OR = { has_province_flag = harpy_roost_region_@ROOT is_capital_of = ROOT has_province_modifier = harpy_roost } } }
			has_harpy_majority_trigger = yes
			OR = { has_terrain = mountain has_terrain = highlands has_terrain = hills }
			is_city = yes
			fort_level = 1
		}
		set_province_flag = option_harpy_roost_region_2_@ROOT
		set_province_flag = harpy_roost_region_@ROOT
		save_event_target_as = harpy_roost_region2
	}
	random_owned_province = {
		limit = {
			NOT = { region_for_scope_province = { OR = { has_province_flag = harpy_roost_region_@ROOT is_capital_of = ROOT has_province_modifier = harpy_roost } } }
			has_harpy_majority_trigger = yes
			OR = { has_terrain = mountain has_terrain = highlands has_terrain = hills }
			is_city = yes
			fort_level = 1
		}
		set_province_flag = option_harpy_roost_region_3_@ROOT
		set_province_flag = harpy_roost_region_@ROOT
		save_event_target_as = harpy_roost_region3
	}
	random_owned_province = {
		limit = {
			NOT = { region_for_scope_province = { OR = { has_province_flag = harpy_roost_region_@ROOT is_capital_of = ROOT has_province_modifier = harpy_roost } } }
			has_harpy_majority_trigger = yes
			OR = { has_terrain = mountain has_terrain = highlands has_terrain = hills }
			is_city = yes
			fort_level = 1
		}
		set_province_flag = option_harpy_roost_region_4_@ROOT
		set_province_flag = harpy_roost_region_@ROOT
		save_event_target_as = harpy_roost_region4
	}
	random_owned_province = {
		limit = {
			NOT = { region_for_scope_province = { OR = { has_province_flag = harpy_roost_region_@ROOT is_capital_of = ROOT has_province_modifier = harpy_roost } } }
			has_harpy_majority_trigger = yes
			OR = { has_terrain = mountain has_terrain = highlands has_terrain = hills }
			is_city = yes
			fort_level = 1
		}
		set_province_flag = option_harpy_roost_region_5_@ROOT
		set_province_flag = harpy_roost_region_@ROOT
		save_event_target_as = harpy_roost_region5
	}
}

harpy_build_roost_province = {
	random_province = {
		limit = { owned_by = PREV region = ROOT NOT = { has_province_flag = harpy_roost_@FROM } }
		set_province_flag = option_harpy_roost_1_@FROM
		set_province_flag = harpy_roost_@FROM
		save_event_target_as = harpy_roost1
	}
	random_province = {
		limit = { owned_by = PREV region = ROOT NOT = { has_province_flag = harpy_roost_@FROM } }
		set_province_flag = option_harpy_roost_2_@FROM
		set_province_flag = harpy_roost_@FROM
		save_event_target_as = harpy_roost2
	}
	random_province = {
		limit = { owned_by = PREV region = ROOT NOT = { has_province_flag = harpy_roost_@FROM } }
		set_province_flag = option_harpy_roost_3_@FROM
		set_province_flag = harpy_roost_@FROM
		save_event_target_as = harpy_roost3
	}
	random_province = {
		limit = { owned_by = PREV region = ROOT NOT = { has_province_flag = harpy_roost_@FROM } }
		set_province_flag = option_harpy_roost_4_@FROM
		set_province_flag = harpy_roost_@FROM
		save_event_target_as = harpy_roost4
	}
	random_province = {
		limit = { owned_by = PREV region = ROOT NOT = { has_province_flag = harpy_roost_@FROM } }
		set_province_flag = option_harpy_roost_5_@FROM
		set_province_flag = harpy_roost_@FROM
		save_event_target_as = harpy_roost5
	}
}

upgrade_kobold_hoard = {
	hidden_effect = {
		remove_province_modifier = kobold_hoard_1
		remove_province_modifier = kobold_hoard_2
		remove_province_modifier = kobold_hoard_3
		remove_province_modifier = kobold_hoard_4
		remove_province_modifier = kobold_hoard_5
		remove_province_modifier = kobold_hoard_6
		remove_province_modifier = kobold_hoard_7
		remove_province_modifier = kobold_hoard_8
		remove_province_modifier = kobold_hoard_9
		remove_province_modifier = kobold_hoard_10
		remove_province_modifier = kobold_hoard_11
		if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 75000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_11
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 60000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_10
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 50000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_9
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 40000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_8
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 30000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_7
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 20000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_6
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 10000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_5
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 7500 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_4
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 3000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_3
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 1500 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_2
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 0 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_1
				duration = -1
			}
		}
	}
}

adventurer_spawnable_starting_bonus = {
	event_target:spawn_province = {
		add_core = $tag$
	}


	trigger_switch = {
		on_trigger = total_development
		
		1000 = { $tag$ = { add_treasury = 2000 add_manpower = 30 } }
		700 = { $tag$ = { add_treasury = 1600 add_manpower = 23 } }
		600 = { $tag$ = { add_treasury = 1400 add_manpower = 21 } }
		500 = { $tag$ = { add_treasury = 1200 add_manpower = 18 } }
		400 = { $tag$ = { add_treasury = 1000 add_manpower = 15 } }
		350 = { $tag$ = { add_treasury = 700 add_manpower = 9 } }
		300 = { $tag$ = { add_treasury = 550 add_manpower = 7 } }
		250 = { $tag$ = { add_treasury = 450 add_manpower = 5 } }
		200 = { $tag$ = { add_treasury = 350 add_manpower = 4 } }
		150 = { $tag$ = { add_treasury = 250 add_manpower = 3 } }
		100 = { $tag$ = { add_treasury = 150 add_manpower = 2 } }
		50 = { $tag$ = { add_treasury = 50 add_manpower = 1 } }
	}
	
	while = {
		limit = { mil_tech_is_inferior = { tag=$tag$ } }
		$tag$ = { add_mil_tech = 1 }
	}
	
	while = {
		limit = { adm_tech_is_inferior = { tag=$tag$ } }
		$tag$ = { add_adm_tech = 1 }
	}
	
	while = {
		limit = { dip_tech_is_inferior = { tag=$tag$ } }
		$tag$ = { add_dip_tech = 1 }
	}
}

centaur_army_salgae = {
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
	cavalry = $tag$
}

clear_precursor_fragments_search = {
	hidden_effect = {
		clr_country_flag = pf_chain_1
		clr_country_flag = pf_chain_2
		clr_country_flag = pf_chain_3
		clr_country_flag = pf_chain_4
		clr_country_flag = pf_chain_5
		clr_country_flag = pf_chain_flag
		set_variable = { searchPoints = 0 }
	}
	if = { limit = { has_country_modifier = pf_glowing_city } remove_country_modifier = pf_glowing_city  hidden_effect = { set_country_flag = pf_end_glowing_city_flag } }
	else_if = { limit = { has_country_modifier = pf_dragon_house } remove_country_modifier = pf_dragon_house  hidden_effect = { set_country_flag = pf_end_dragon_house_flag } }
	else_if = { limit = { has_country_modifier = pf_elfenbride_manse } remove_country_modifier = pf_elfenbride_manse  hidden_effect = { set_country_flag = pf_end_elfenbride_manse_flag } }
	else_if = { limit = { has_country_modifier = pf_god_fragment_ruin } remove_country_modifier = pf_god_fragment_ruin  hidden_effect = { set_country_flag = pf_end_god_fragment_ruin_flag } }
	else_if = { limit = { has_country_modifier = pf_vault_ruin } remove_country_modifier = pf_vault_ruin  hidden_effect = { set_country_flag = pf_end_vault_flag } }
	else_if = { limit = { has_country_modifier = pf_portal_nexus_ruin } remove_country_modifier = pf_portal_nexus_ruin hidden_effect = { set_country_flag = pf_end_portal_nexus_flag } }
	else_if = { limit = { has_country_modifier = pf_floating_city_crash_site } remove_country_modifier = pf_floating_city_crash_site  hidden_effect = { set_country_flag = pf_end_floating_city_crash_site_flag } }
	# trigger_switch = {
		# on_trigger = has_country_modifier
		
		# pf_glowing_city = { remove_country_modifier = pf_glowing_city  hidden_effect = { set_country_flag = pf_end_glowing_city_flag } }
		# pf_dragon_house = { remove_country_modifier = pf_dragon_house  hidden_effect = { set_country_flag = pf_end_dragon_house_flag } }
		# pf_elfenbride_manse = { remove_country_modifier = pf_elfenbride_manse  hidden_effect = { set_country_flag = pf_end_elfenbride_manse_flag } }
		# pf_god_fragment_ruin = { remove_country_modifier = pf_god_fragment_ruin  hidden_effect = { set_country_flag = pf_end_god_fragment_ruin_flag } }
		# pf_vault_ruin = { remove_country_modifier = pf_vault_ruin  hidden_effect = { set_country_flag = pf_end_vault_flag } }
		# pf_portal_nexus_ruin = { remove_country_modifier = pf_portal_nexus_ruin  hidden_effect = { set_country_flag = pf_end_portal_nexus_flag } }
		# pf_floating_city_crash_site = { remove_country_modifier = pf_floating_city_crash_site  hidden_effect = { set_country_flag = pf_end_floating_city_crash_site_flag } }
	# }
}

destroy_province = {
	hidden_effect = {
		cede_province = ---
		set_province_flag = cant_colonize
		add_colonysize = -1000
		province_event = { id = anb_miscevents.13 days = 35 }
	}
}

decrease_monstrous_10 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_10_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 10 } }
	}
}

decrease_monstrous_5 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_5_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 5 } }
	}
}

decrease_monstrous_3 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_3_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 3 } }
	}
}

decrease_monstrous_2 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_2_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 2 } }
	}
}

decrease_monstrous_1 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_1_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 1 } }
	}
}


increase_monstrous_5 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = increase_monstrous_5_tooltip
		hidden_effect = { change_variable = { monstrousPoints = 5 } }
	}
}

increase_monstrous_3 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = increase_monstrous_3_tooltip
		hidden_effect = { change_variable = { monstrousPoints = 3 } }
	}
}

increase_monstrous_2 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = increase_monstrous_2_tooltip
		hidden_effect = { change_variable = { monstrousPoints = 2 } }
	}
}

increase_monstrous_1 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = increase_monstrous_1_tooltip
		hidden_effect = { change_variable = { monstrousPoints = 1 } }
	}
}

reduce_legitimacy_huge_effect = {
	add_legitimacy = -50
	add_horde_unity = -50
	add_devotion = -50
	add_republican_tradition = -25
}

spawn_vampire_broken_masquerade = {
	if = {
		limit = { total_development = 500 }
		random_owned_province = {
			limit = { 
				is_in_capital_area = yes 
				is_capital = no 
			}
			spawn_rebels = {
				type = vampires_nobles
				size = 3
			}

			#new AW stuff. Adds tier 3 to province, essentially
			hidden_effect = {
				if = {
					limit = {
						OR = {
							has_province_modifier = aw_vampires_1
							has_province_modifier = aw_vampires_2
							has_province_modifier = aw_vampires_3
						}
					}
					remove_province_modifier = aw_vampires_1
					remove_province_modifier = aw_vampires_2
					remove_province_modifier = aw_vampires_3
				}
				add_permanent_province_modifier = {
					name = aw_vampires_3
					duration = -1
				}
			}
		}
	}
	else = {
		random_owned_province = {
			limit = { is_in_capital_area = yes is_capital = no }
			spawn_rebels = {
				type = vampires_nobles
				size = 2
			}
			#new AW stuff. Adds tier 3 to province, essentially
			hidden_effect = {
				if = {
					limit = {
						OR = {
							has_province_modifier = aw_vampires_1
							has_province_modifier = aw_vampires_2
							has_province_modifier = aw_vampires_3
						}
					}
					remove_province_modifier = aw_vampires_1
					remove_province_modifier = aw_vampires_2
					remove_province_modifier = aw_vampires_3
				}
				add_permanent_province_modifier = {
					name = aw_vampires_3
					duration = -1
				}
			}
		}
	}
}

spawn_hideout_vampires = {
	if = {
		limit = { ROOT = { has_disaster = estate_vampires_restore_masquerade_disaster } }
		hidden_effect = { set_province_flag = can_clear_hideout }
		if = {
			limit = { ROOT = { total_development = 500 } }
			spawn_rebels = {
				type = vampires_nobles
				size = 3
				win = yes
			}
		}
		else = {
			spawn_rebels = {
				type = vampires_nobles
				size = 2
				win = yes
			}
		}
	}
	else_if = {
		limit = { ROOT = { has_disaster = estate_vampires_install_thrall_disaster } }
		if = {
			limit = { has_province_flag = hidding_vampire }
			province_event = { id = disaster_vampire_masquerade.19 }
		}
		else = {
			province_event = { id = disaster_vampire_masquerade.20 }
		}
	}
}

clr_vampire_hideout = {
	if = {
		limit = { NOT = { ROOT = { tag = REB } } }
		if = {
			limit = { FROM = { has_province_modifier = vampire_hideout has_province_flag = can_clear_hideout } }
			FROM = { remove_province_modifier = vampire_hideout }
			FROM = { clr_province_flag = can_clear_hideout }
		}
	}
}

clear_vampire_organization = {
	hidden_effect = {
		remove_estate_privilege = estate_vampires_organization_the_blood_court
		remove_estate_privilege = estate_vampires_organization_bloody_aristocracy
		remove_estate_privilege = estate_vampires_organization_vampiric_emigres
		remove_estate_privilege = estate_vampires_organization_vampires_lord
		remove_estate_privilege = estate_vampires_organization_the_covenant
	}
}

clear_vampire_law = {
	hidden_effect = {
		remove_estate_privilege = estate_vampires_law_state_collusion_masquerade
		remove_estate_privilege = estate_vampires_law_traditional_masquerade
		remove_estate_privilege = estate_vampires_law_open_rule
	}
}

set_vampires_hideout_restore_masquerade = {
	hidden_effect = {
		set_variable = { hideout = 3 }
		set_variable = { x = 0 }
		if = {
			limit = {
				NOT = {
					estate_loyalty = {
						estate = estate_vampires
						loyalty = 80
					}
				}
			}
			change_variable = { hideout = 1 }
		}
		if = {
			limit = {
				NOT = {
					estate_loyalty = {
						estate = estate_vampires
						loyalty = 60
					}
				}
			}
			change_variable = { hideout = 1 }
		}
		if = {
			limit = {
				NOT = {
					estate_loyalty = {
						estate = estate_vampires
						loyalty = 40
					}
				}
			}
			change_variable = { hideout = 1 }
		}
		if = {
			limit = {
				NOT = {
					estate_loyalty = {
						estate = estate_vampires
						loyalty = 20
					}
				}
			}
			change_variable = { hideout = 1 }
		}
		if = {
			limit = {
				NOT = {
					estate_loyalty = {
						estate = estate_vampires
						loyalty = 10
					}
				}
			}
			change_variable = { hideout = 1 }
		}
		if = {
			limit = {
				NOT = {
					estate_loyalty = {
						estate = estate_vampires
						loyalty = 5
					}
				}
			}
			change_variable = { hideout = 1 }
		}
		if = {
			limit = {
				has_country_modifier = outed_vampire
			}
			change_variable = { hideout = 2 }
		}
		while = {
			limit = { NOT = { check_variable = { which = hideout value = 0 } } }
			random_owned_province = {
				limit = { is_in_capital_area = yes is_capital = no NOT = { has_province_modifier = vampire_hideout } }
				if = {
					limit = { any_neighbor_province = { fort_level = 2 NOT = { has_province_modifier = vampire_hideout } } } #Don't Spawn next to forts where possible
					random_neighbor_province = {
						limit = { fort_level = 2 NOT = { has_province_modifier = vampire_hideout } }
						add_province_modifier = {
							name = vampire_hideout
							duration = -1
						}
					}
				}
				else = {
					add_province_modifier = {
						name = vampire_hideout
						duration = -1
					}
				}
			}
			subtract_variable = { which = hideout value = 1 }
		}
	}
}

set_vampires_hideout_install_thrall = {
	hidden_effect = {
		set_variable = { x = 0 }
		while = {
			limit = { NOT = { check_variable = { x = 5 } } }
			random_owned_province = {
				limit = { is_in_capital_area = yes is_capital = no NOT = { has_province_modifier = vampire_hideout } }
				add_province_modifier = {
					name = vampire_hideout
					duration = -1
				}
				set_province_flag = hidding_vampire
			}
			change_variable = { x = 1 }
		}
		
		while = {
			limit = { NOT = { check_variable = { x = 10 } } }
			random_owned_province = {
				limit = { is_in_capital_area = yes is_capital = no NOT = { has_province_modifier = vampire_hideout } }
				add_province_modifier = {
					name = vampire_hideout
					duration = -1
				}
			}
			change_variable = { x = 1 }
		}
	}
}

target_vampire_hideout = {
	set_country_flag = hideout_vampire_menu
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target1@ROOT
		save_event_target_as = hideout_1
	}
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target2@ROOT
		save_event_target_as = hideout_2
	}
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target3@ROOT
		save_event_target_as = hideout_3
	}
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target4@ROOT
		save_event_target_as = hideout_4
	}
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target5@ROOT
		save_event_target_as = hideout_5
	}
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target6@ROOT
		save_event_target_as = hideout_6
	}
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target7@ROOT
		save_event_target_as = hideout_7
	}
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target8@ROOT
		save_event_target_as = hideout_8
	}
	random_owned_province = {
		limit = { has_province_modifier = vampire_hideout NOT = { has_province_flag = target@ROOT } }
		set_province_flag = target@ROOT
		set_province_flag = target9@ROOT
		save_event_target_as = hideout_9
	}
}

clr_vampire_hideout_menu = {
	hidden_effect = {
		every_owned_province = {
			limit = { has_province_flag = target@ROOT }
			clr_province_flag = target@ROOT
			clr_province_flag = target1@ROOT
			clr_province_flag = target2@ROOT
			clr_province_flag = target3@ROOT
			clr_province_flag = target4@ROOT
			clr_province_flag = target5@ROOT
			clr_province_flag = target6@ROOT
			clr_province_flag = target7@ROOT
			clr_province_flag = target8@ROOT
			clr_province_flag = target9@ROOT
		}
		clr_country_flag = hideout_vampire_menu
	}
}

vampire_led_pretender_revolt = {
	hidden_effect = {
		ROOT = {
			set_variable = { hideout = 0 }
			every_owned_province = {
				limit = { has_province_modifier = vampire_hideout }
				ROOT = { change_variable = { hideout = 1 } }
			}
		}
	}
	if = {
		limit = { ROOT = { check_variable = { hideout = 9 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 10
			female = yes
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 8 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 9
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 7 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 8
			female = yes
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 6 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 7
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 5 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 6
			female = yes
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 4 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 5
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 3 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 4
			female = yes
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 2 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 3
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 1 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 2
			female = yes
		}
	}
	else_if = {
		limit = { ROOT = { check_variable = { hideout = 0 } } }
		spawn_rebels = {
			type = pretender_rebels
			size = 1
		}
	}
}

#This must be done for all new vampires to ensure their age is tracked correctly
ruler_become_vampire = {
	hidden_effect = {
		save_ruler_stats = yes
		save_ruler_dynasty = yes
		#Reset the timer on how long a vampire has ruled
		if = {
			limit = { OR = { has_country_flag = new_vampire NOT = { has_country_flag = vampire_ruler } } }
			clr_country_flag = new_vampire
			ruler_new_vampire = yes
		}
		set_ruler_flag = is_a_vampire
		if = {
			limit = { is_female = yes }
			clr_country_flag = vampire_ruler_male
			set_country_flag = vampire_ruler_female
		}
		else = {
			clr_country_flag = vampire_ruler_female
			set_country_flag = vampire_ruler_male
		}
		if = {
			limit = { ruler_has_mage_personality = yes }
			set_country_flag = mage_vampire
		}
		else = {
			clr_country_flag = mage_vampire
		}
	}
	if = {
		limit = { NOT = { ruler_has_personality = immortal_personality  } }
		if = {
			limit = { ruler_has_max_personalities = yes }
			clear_ruler_personalities = yes
			# Restore lost Mage personalities
			if = {
				limit = { has_country_flag = mage_vampire }
				add_ruler_personality = mage_personality
			}
		}
		add_ruler_personality = immortal_personality
	}
	tooltip = {
		kill_ruler = yes
	}
	set_ruler_flag = set_immortality
	add_ruler_modifier = { 
		name = vampire_ruler
		duration = -1
	}
}

#Should be used for resetting the "age" of a vampire (ie how long they have been ruling without aging), so the game does not see successive vampires as a single one and the "real" age of a vampire can be tracked, even if they revive
ruler_new_vampire = {
	hidden_effect = {
		#Don't want to count the Vampire Points from Previous ruler vampires
		set_variable = {
			which = suspicionPoints
			value = 0
		}
	}
	clr_country_flag = vampire_ruler
	set_country_flag = vampire_ruler
	clr_country_flag = vampire_ruler_has_coffin
	set_country_flag = vampire_ruler_has_coffin
	if = {
		limit = { has_estate_privilege = estate_vampires_law_open_rule }
		set_country_flag = exposed_vampire_ruler
	}
	else = {
		set_country_flag = hidden_ruler_vampire
	}
}

reset_vampire_age = {
	hidden_effect = {
		clr_country_flag = vampire_ruler
		set_country_flag = vampire_ruler
	}
}

clear_ruler_vampire_flags = {
	clr_country_flag = vampire_ruler
	clr_country_flag = vampire_ruler_has_coffin
	clr_country_flag = vampire_ruler_female
	clr_country_flag = vampire_ruler_male
	clr_country_flag = hidden_ruler_vampire
	clr_country_flag = exposed_vampire_ruler
	clr_country_flag = vampire_heir
	clr_country_flag = mage_vampire
	clr_country_flag = vampire_hunter_1
	clr_country_flag = vampire_hunter_2
	clr_country_flag = vampire_hunter_3
	ruler_clear_saved_spell_schools = yes
}

advance_hunter_hunt = {
	custom_tooltip = advance_vampire_hunter
	if = {
		limit = { has_country_flag = vampire_hunter_2 }
		clr_country_flag = vampire_hunter_2
		clr_country_flag = vampire_being_hunted
		country_event = { id = vampire_ruler.22 days = 60 random = 30 }
	}
	else_if = {
		limit = { has_country_flag = vampire_hunter_1 }
		clr_country_flag = vampire_hunter_1
		set_country_flag = vampire_hunter_2
	}
	else_if = {
		limit = { has_country_flag = vampire_being_hunted }
		set_country_flag = vampire_hunter_1
	}
	else = {
		set_country_flag = vampire_being_hunted
	}
}

end_hunter_hunt = {
	custom_tooltip = end_vampire_hunter
	clr_country_flag = vampire_hunter_1
	clr_country_flag = vampire_hunter_2
	clr_country_flag = vampire_hunter_3
}

kill_vampire_ruler = {
	clear_ruler_vampire_flags = yes
	custom_tooltip = vampire_ruler_die_permanent
	hidden_effect = { kill_ruler = yes }
}

#Vampire Points shit
facade_suspicion_increase_1 = {
	if = {
		limit = { ruler_has_facade = yes }
		custom_tooltip = small_increase_suspicion_points
	}
	hidden_effect = {
		change_variable = {
			which = suspicionPoints
			value = 1
		}
	}
}

facade_suspicion_increase_2 = {
	if = {
		limit = { ruler_has_facade = yes }
		custom_tooltip = medium_increase_suspicion_points
	}
	hidden_effect = {
		change_variable = {
			which = suspicionPoints
			value = 2
		}
	}
}

facade_suspicion_increase_5 = {
	if = {
		limit = { ruler_has_facade = yes }
		custom_tooltip = large_increase_suspicion_points
	}
	hidden_effect = {
		change_variable = {
			which = suspicionPoints
			value = 5
		}
	}
}

facade_suspicion_increase_10 = {
	if = {
		limit = { ruler_has_facade = yes }
		custom_tooltip = huge_increase_suspicion_points
	}
	custom_tooltip = huge_increase_suspicion_points
	hidden_effect = {
		change_variable = {
			which = suspicionPoints
			value = 10
		}
	}
}

facade_suspicion_decrease_1 = {
	if = {
		limit = { ruler_has_facade = yes }
		custom_tooltip = small_decrease_suspicion_points
	}
	hidden_effect = {
		if = { 
			limit = {
				check_variable = {
					which = suspicionPoints
					value = 1
				}
			}
			subtract_variable = {
				which = suspicionPoints
				value = 1
			}
		} 
		else = {
			set_variable = {
				which = suspicionPoints
				value = 0
			}
		}
	}
}

facade_suspicion_decrease_2 = {
	if = {
		limit = { ruler_has_facade = yes }
		custom_tooltip = medium_decrease_suspicion_points
	}
	hidden_effect = {
		if = { 
			limit = {
				check_variable = {
					which = suspicionPoints
					value = 2
				}
			}
			subtract_variable = {
				which = suspicionPoints
				value = 2
			}
		} 
		else = {
			set_variable = {
				which = suspicionPoints
				value = 0
			}
		}
	}
}

facade_suspicion_decrease_5 = {
	if = {
		limit = { ruler_has_facade = yes }
		custom_tooltip = large_decrease_suspicion_points
	}
	hidden_effect = {
		if = { 
			limit = {
				check_variable = {
					which = suspicionPoints
					value = 5
				}
			}
			subtract_variable = {
				which = suspicionPoints
				value = 5
			}
		} 
		else = {
			set_variable = {
				which = suspicionPoints
				value = 0
			}
		}
	}
}

facade_suspicion_decrease_10 = {
	if = {
		limit = { ruler_has_facade = yes }
		custom_tooltip = huge_decrease_suspicion_points
	}
	hidden_effect = {
		if = { 
			limit = {
				check_variable = {
					which = suspicionPoints
					value = 10
				}
			}
			subtract_variable = {
				which = suspicionPoints
				value = 10
			}
		} 
		else = {
			set_variable = {
				which = suspicionPoints
				value = 0
			}
		}
	}
}


target_elector_elder_pact = {
	random_elector = {
		limit = {
			is_emperor = no
			NOT = { truce_with = ROOT }
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = {
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			is_rival = ROOT
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			army_strength = {
				who = ROOT
				value = 0.5
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			is_rival = ROOT
			army_strength = {
				who = ROOT
				value = 0.5
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			army_strength = {
				who = ROOT
				value = 1.0
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			is_rival = ROOT
			army_strength = {
				who = ROOT
				value = 1.0
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			army_strength = {
				who = ROOT
				value = 1.5
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			is_rival = ROOT
			army_strength = {
				who = ROOT
				value = 1.5
			}
		}
		save_event_target_as = elector_target
	}
}

#Can be commented out when PDX fixes "set_emperor = no"
#Use to remove the emperor from the imperial throne without killing them and without a specific new emperor
#Can be used within any scope
abdicate_emperor_no_reelection = {
	emperor = {
		custom_tooltip = abdicate_emperor_no_reelection_tooltip
		hidden_effect = {
			export_to_variable = { #Save emperor's religion so they can be returned to the correct religion at the end
				which = emperor_religion
				value = religion
				who = ROOT
			}
			
			set_country_flag = emperor_religion_change #So changing religion doesn't tank prestige and give conversion zeal modifier, flag referenced in religion file
			if = { #If there is religious peace, then we need to choose a religion to for the new emperor to be from
				limit = { hre_religion_treaty = yes }
				
				1 = {
					set_variable = {
						which = regent_court_electors
						value = 0
					}
					set_variable = {
						which = corinite_electors
						value = 0
					}
					set_variable = {
						which = ravelian_electors
						value = 0
					}
				}
			
				every_elector = {
					set_country_flag = hre_elector #Save electors so they can be remade electors at end
					trigger_switch = {
						on_trigger = religion
						
						regent_court = { 1 = { change_variable = { which = regent_court_electors value = 1 } } }
						corinite = { 1 = { change_variable = { which = corinite_electors value = 1 } } }
						ravelian = { 1 = { change_variable = { which = ravelian_electors value = 1 } } }
					}
				}
				
				#Religion with most electors chooses emperor with tiebreakers: Regent Court > Corinite > Ravelian
				if = {
					limit = {
						1 = {
							check_variable = {
								which = regent_court_electors
								which = corinite_electors
							}
							check_variable = {
								which = regent_court_electors
								which = ravelian_electors
							}
						}
					}
					set_hre_religion = regent_court
					set_hre_religion_locked = yes #Have to lock religion to remove religious peace
					change_religion = cannorian_pantheon #Have to change emperor to dummy religion to remove emperorship
				}
				else_if = {
					limit = {
						1 = {
							check_variable = {
								which = corinite_electors
								which = ravelian_electors
							}
						}
					}
					set_hre_religion = corinite
					set_hre_religion_locked = yes
					change_religion = cannorian_pantheon
				}
				else = {
					set_hre_religion = ravelian
					set_hre_religion_locked = yes
					change_religion = cannorian_pantheon
				}
				
				set_hre_religion_treaty = yes
				
				every_known_country = { #Reapply electorship to electors removed by locking religion
					limit = {
						has_country_flag = hre_elector
					}
					clr_country_flag = hre_elector
					if = {
						limit = { is_elector = no }
						elector = yes
					}
				}
			}
			else = { #If not religious peace, then we just need to change the emperor's religion
				change_religion = cannorian_pantheon
			}
			
			change_religion = variable:emperor_religion
			clr_country_flag = emperor_religion_change
		}
	}
}

#No longer needed with 1.32 due to the new effect "set_emperor = yes"
# #Using make_emperor during a league war will end the war with an unlocked religion. Use another effect to determine the outcome for that
# #Use within scope for new emperor
# make_emperor = { 
	# custom_tooltip = make_emperor_tooltip
	# hidden_effect = {
		# export_to_variable = { #Save future emperor's religion so they can be returned to the correct religion at the end
			# which = future_emperor_religion
			# value = religion
			# who = ROOT
		# }
		# if = { #Save empire's religion if not religious peace and usurper matches religion else will end with religious peace
			# limit = {
				# hre_religion_treaty = no
				# hre_religion = ROOT
			# }
			# set_country_flag = hre_has_religion
			# trigger_switch = {
				# on_trigger = hre_religion
				
				# regent_court = { set_country_flag = regent_court_empire }
				# corinite = { set_country_flag = corinite_empire }
				# ravelian = { set_country_flag = ravelian_empire }
			# }
			# if = {
				# limit = { hre_religion_locked = no }
				# set_country_flag = hre_unlocked_religion
			# }
		# }
		
		# set_country_flag = emperor_religion_change #So changing religion doesn't tank prestige and give conversion zeal modifier
		# every_elector = { #Save electors to remake electors at end
			# set_country_flag = hre_elector
		# }
		
		# set_hre_religion_treaty = yes #Have to set religious peace so empire isn't dismantled during process
		# change_religion = cannorian_pantheon #Change future emperor to dummy religion so they are only option for emperor
		# elector = yes #Need someone to vote you emperor with religious peace
		# set_hre_religion = cannorian_pantheon
		# set_hre_religion_locked = yes
		
		# #No longer needed in 1.31.5 since just changing the hre religion now also changes the emperor. Previous method dismantles empire
		# # emperor = { #Need to change emperor's religion to change emperor
			# # export_to_variable = {
				# # which = emperor_religion
				# # value = religion
				# # who = emperor
			# # }
			# # set_country_flag = emperor_religion_change
			# # if = {
				# # limit = { religion = regent_court }
				# # change_religion = corinite
			# # }
			# # else = {
				# # change_religion = regent_court
			# # }
			# # change_religion = variable:emperor_religion
			# # clr_country_flag = emperor_religion_change
		# # }
		
		# set_hre_religion_treaty = yes #Have to go through religious peace so new emperor stays emperor
		# change_religion = variable:future_emperor_religion
		
		# if = { #Change hre religion back if not religious peace
			# limit = { has_country_flag = hre_has_religion }
			# clr_country_flag = hre_has_religion
			# trigger_switch = {
				# on_trigger = has_country_flag
				
				# regent_court_empire = { set_hre_religion = regent_court set_hre_religion_locked = yes clr_country_flag = regent_court_empire }
				# corinite_empire = { set_hre_religion = corinite set_hre_religion_locked = yes clr_country_flag = corinite_empire }
				# ravelian_empire = { set_hre_religion = ravelian set_hre_religion_locked = yes clr_country_flag = ravelian_empire }
			# }
			# if = {
				# limit = { has_country_flag = hre_unlocked_religion }
				# set_hre_religion_locked = no
				# clr_country_flag = hre_unlocked_religion
			# }
		# }
		
		# elector = no
		# every_known_country = { #Reapply electorship to electors removed by locking religion
			# limit = {
				# has_country_flag = hre_elector
			# }
			# clr_country_flag = hre_elector
			# if = {
				# limit = { is_elector = no }
				# elector = yes
			# }
		# }
		# clr_country_flag = emperor_religion_change
	# }
# }

adventurer_legacy_effect = {
	if = {
		limit = { has_country_flag = adv_guild_integrated }
		add_country_modifier = {
			name = "legacy_of_adventurers_modifier"
			duration = 14600
		}
		add_country_modifier = {
			name = "organized_adventurer_administration"
			duration = 14600
		}
	}
	else = {
		add_country_modifier = {
			name = "legacy_of_adventurers_modifier"
			duration = 14600
		}
	}
	
	country_event = { id = estate_organization.1 days = 35 }		#choose magical organization for mage estate
	country_event = { id = estate_organization.4 days = 35 }		#choose organization for adventurer estate
	country_event = { id = estate_organization.5 days = 35 }		#choose organization for artificer estate
	
	custom_tooltip = lose_reform_progress_tt
	hidden_effect = { change_government_reform_progress = -1000 }
}

create_war_wizard_effect = {
	custom_tooltip = war_wizard_tooltip
	hidden_effect = {
		set_saved_name = {
			key = root_name_male
			type = advisor
			scope = ROOT
		}
		set_saved_name = {
			key = root_name_female
			type = advisor
			female = yes
			scope = ROOT
		}
		if = {
			limit = {
				army_tradition = 0.00
				NOT = { army_tradition = 20 }
			}
			random_list = {
				50 = {
					define_general = {
						shock = 6
						fire = 1
						manuever = 0
						siege = 3
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						shock = 6
						fire = 1
						manuever = 0
						siege = 3
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
		
		if = {
			limit = {
				army_tradition = 20
				NOT = { army_tradition = 40 }
			}
			random_list = {
				50 = {
					define_general = {
						shock = 7
						fire = 2
						manuever = 0
						siege = 4
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						shock = 7
						fire = 2
						manuever = 0
						siege = 4
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
		
		if = {
			limit = {
				army_tradition = 40
				NOT = { army_tradition = 60 }
			}
			random_list = {
				50 = {
					define_general = {
						shock = 8
						fire = 3
						manuever = 0
						siege = 5
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						shock = 8
						fire = 3
						manuever = 0
						siege = 5
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
		
		if = {
			limit = {
				army_tradition = 60
				NOT = { army_tradition = 80 }
			}
			random_list = {
				50 = {
					define_general = {
						shock = 9
						fire = 4
						manuever = 0
						siege = 5
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						shock = 9
						fire = 4
						manuever = 0
						siege = 5
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
		
		if = {
			limit = {
				army_tradition = 80
			}
			random_list = {
				50 = {
					define_general = {
						shock = 9
						fire = 4
						manuever = 0
						siege = 6
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						shock = 9
						fire = 4
						manuever = 0
						siege = 6
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
			
		clear_saved_name = root_name_male
		clear_saved_name = root_name_female
	}
}

clear_ramsteel_fire_shock_buffs_effect = {
	remove_country_modifier = ramsteel_shock_1
	remove_country_modifier = ramsteel_shock_2
	remove_country_modifier = ramsteel_shock_3
	remove_country_modifier = ramsteel_fire_1
	remove_country_modifier = ramsteel_fire_2
	remove_country_modifier = ramsteel_fire_3
}

currency_effect = { #currency (#takeFrom) #addTo #which/value
	hidden_effect = {
[[which]
		set_variable = { which = temp which = $which$ }
]
[[value]
		set_variable = { which = temp value = $value$ }
]
		if = {
			limit = {
				check_variable = { which = temp value = 0 }
			}
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=while val=819.2 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=409.6 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=204.8 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=102.4 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=51.2 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=25.6 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=12.8 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=6.4 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=3.2 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=1.6 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.8 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.4 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.2 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.1 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.05 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.025 }
		}
		else = {
			multiply_variable = { which = temp value = -1 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=while val=819.2 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=409.6 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=204.8 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=102.4 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=51.2 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=25.6 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=12.8 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=6.4 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=3.2 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=1.6 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.8 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.4 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.2 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.1 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.05 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.025 }
		}
		set_variable = { which = temp value = 0 }
	}
}
currency_helper = {
	$type$ = {
		limit = {
			check_variable = { which = temp value = $val$ }
		}
		subtract_variable = { which = temp value = $val$ }
[[addTo]
		$addTo$ = { add_$currency$ = $val$ }
]
[[takeFrom]
		$takeFrom$ = { add_$currency$ = -$val$ }
]
	}
}

jaddempire_move_court = {
	hidden_effect = {
		every_owned_province = { #remove the province modifiers from the previous court
			remove_province_modifier = jaddempire_court_seat
			remove_province_modifier = jaddempire_court_area
		}
	}
	$province_id$ = {
		trigger_switch = {
			on_trigger = province_id
			
			8 = { ROOT = { add_ruler_modifier = { name = jaddempire_anbenncost_capital duration = -1 } jaddempire_change_leaning_west_massive = yes } }
			565 = { ROOT = { add_ruler_modifier = { name = jaddempire_brasan_capital duration = -1 } jaddempire_change_leaning_west_large = yes } }
			601 = { ROOT = { add_ruler_modifier = { name = jaddempire_bulwar_capital duration = -1 } jaddempire_change_leaning_west_medium = yes } }
			625 = { ROOT = { add_ruler_modifier = { name = jaddempire_jaddanzar_capital duration = -1 } jaddempire_change_leaning_west_medium = yes } }
			643 = { ROOT = { add_ruler_modifier = { name = jaddempire_azka_sur_capital duration = -1 } jaddempire_change_leaning_west_small = yes } }
			
			2909 = { ROOT = { add_ruler_modifier =  { name = jaddempire_religious_capital duration = -1 } } } #Neutral
			
			4411 = { ROOT = { add_ruler_modifier = { name = jaddempire_dhenijansar_capital duration = -1 } jaddempire_change_leaning_east_medium = yes } }
			4420 = { ROOT = { add_ruler_modifier = { name = jaddempire_sramaya_capital duration = -1 } jaddempire_change_leaning_east_medium = yes } }
			4500 = { ROOT = { add_ruler_modifier = { name = jaddempire_aizt_ralare_capital duration = -1 } jaddempire_change_leaning_east_large = yes } }
			4871 = { ROOT = { add_ruler_modifier = { name = jaddempire_tianlou_capital duration = -1 } jaddempire_change_leaning_east_massive = yes } }
		}
		add_province_modifier = {
			name = jaddempire_court_seat
			duration = -1
		}
		move_capital_effect = yes
	}
}

jaddempire_change_leaning_west_tiny = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_west_tiny_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = 1 }
		}
	}
}

jaddempire_change_leaning_west_small = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_west_small_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = 2 }
		}
	}
}

jaddempire_change_leaning_west_medium = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_west_medium_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = 3 }
		}
	}
}

jaddempire_change_leaning_west_large = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_west_large_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = 5 }
		}
	}
}

jaddempire_change_leaning_west_massive = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_west_massive_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = 10 }
		}
	}
}

jaddempire_change_leaning_east_tiny = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_east_tiny_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = -1 }
		}
	}
}

jaddempire_change_leaning_east_small = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_east_small_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = -2 }
		}
	}
}

jaddempire_change_leaning_east_medium = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_east_medium_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = -3 }
		}
	}
}

jaddempire_change_leaning_east_large = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_east_large_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = -5 }
		}
	}
}

jaddempire_change_leaning_east_massive = {
	if = {
		limit = { OR = { tag = F46 was_tag = F46 } NOT = { has_country_flag = had_deioderan } }
		custom_tooltip = jaddempire_change_leaning_east_massive_tt
		hidden_effect = {
			change_variable = { which = jaddariLeaning value = -10 }
		}
	}
}

jaddempire_remove_ruler_modifier = {
	hidden_effect = {
		remove_country_modifier = jaddempire_azka_sur_capital
		remove_country_modifier = jaddempire_bulwar_capital
		remove_country_modifier = jaddempire_religious_capital
		remove_country_modifier = jaddempire_brasan_capital
		remove_country_modifier = jaddempire_anbenncost_capital
		remove_country_modifier = jaddempire_dhenijansar_capital
		remove_country_modifier = jaddempire_sramaya_capital
		# remove_country_modifier = jaddempire_sarisung_capital
		remove_country_modifier = jaddempire_tianlou_capital
		remove_country_modifier = jaddempire_jaddanzar_capital
	}
}

jaddari_deioderan_battle_counter_update = {
	if = {
		limit = { tag = F51 FROM = { tag = F99 } }
		change_variable = { which = jaddari_deioderan_battle_counter value = $value$ }
	}
}

jaddari_deioderan_dev_counter_update = {
	if = {
		limit = {
			owner = { tag = F51 has_disaster = jaddari_deioderan }
			OR = {
				AND = { owner = { capital_scope = { continent = asia } } OR = { continent = europe continent = africa } }
				AND = { owner = { capital_scope = { OR = { continent = europe continent = africa } } } continent = asia }
			}
		}
		change_variable = { which = jaddari_deioderan_dev_counter value = 1 }
	}
}

jaddari_close_sway_menu = {
	hidden_effect = {
		clr_country_flag = jaddari_deioderan_sway_menu_open
		if = {
			limit = { tag = F51 }
			F99 = {
				every_owned_province = {
					clr_province_flag = jaddari_sway_target_1
					clr_province_flag = jaddari_sway_target_2
					clr_province_flag = jaddari_sway_target_3
					clr_province_flag = jaddari_sway_target_4
				}
			}
		}
		else = {
			F51 = {
				every_owned_province = {
					clr_province_flag = jaddari_sway_target_1
					clr_province_flag = jaddari_sway_target_2
					clr_province_flag = jaddari_sway_target_3
					clr_province_flag = jaddari_sway_target_4
				}
			}
		}
	}
}

jaddari_attempt_to_sway_province = {
	if = {
		limit = { development = 50 }
		ROOT = { add_dip_power = -120 }
	}
	else_if = {
		limit = { development = 45 }
		ROOT = { add_dip_power = -100 }
	}
	else_if = {
		limit = { development = 40 }
		ROOT = { add_dip_power = -85 }
	}
	else_if = {
		limit = { development = 35 }
		ROOT = { add_dip_power = -75 }
	}
	else_if = {
		limit = { development = 30 }
		ROOT = { add_dip_power = -65 }
	}
	else_if = {
		limit = { development = 25 }
		ROOT = { add_dip_power = -55 }
	}
	else_if = {
		limit = { development = 20 }
		ROOT = { add_dip_power = -50 }
	}
	else_if = {
		limit = { development = 15 }
		ROOT = { add_dip_power = -45 }
	}
	else_if = {
		limit = { development = 10 }
		ROOT = { add_dip_power = -40 }
	}
	else_if = {
		limit = { development = 5 }
		ROOT = { add_dip_power = -35 }
	}
	else = {
		ROOT = { add_dip_power = -30 }
	}
	
	hidden_effect = { province_event = { id = jaddari_missions.301 } }
	custom_tooltip = jaddari_attempt_to_sway_province_chance_tt
}

transfer_units_in_province_from_to = {
	$province$ = {
		while = {
			limit = { infantry_in_province = $from$ }
			kill_units = {
				who = $from$
				type = infantry
				amount = 1
			}
			infantry = $to$
		}
		while = {
			limit = { cavalry_in_province = $from$ }
			kill_units = {
				who = $from$
				type = cavalry
				amount = 1
			}
			cavalry = $to$
		}
		while = {
			limit = { artillery_in_province = $from$ }
			kill_units = {
				who = $from$
				type = artillery
				amount = 1
			}
			artillery = $to$
		}
	}
}

spawn_units_for = {
	hidden_effect = {
		set_variable = {
			which = spawn_unit_count value = $amount$
		}
		while = {
			limit = { check_variable = { which = spawn_unit_count value = 1 } }
			$who$ = { $type$ = PREV }
			change_variable = { which = spawn_unit_count value = -1 }
		}
	}
}

move_high_tolerance_pop_from_to = {
	if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_hobgoblin_pop_trigger = yes
					has_integrated_hobgoblin_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_hobgoblin_minority_size_effect = yes
			if = {
				limit = { OR = { has_hobgoblin_majority_trigger = yes has_large_hobgoblin_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_centaur_pop_trigger = yes
					has_integrated_centaur_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_centaur_minority_size_effect = yes
			if = {
				limit = { OR = { has_centaur_majority_trigger = yes has_large_centaur_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_ogre_pop_trigger = yes
					has_integrated_ogre_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_ogre_minority_size_effect = yes
			if = {
				limit = { OR = { has_ogre_majority_trigger = yes has_large_ogre_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_troll_pop_trigger = yes
					has_integrated_troll_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_troll_minority_size_effect = yes
			if = {
				limit = { OR = { has_troll_majority_trigger = yes has_large_troll_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_harpy_pop_trigger = yes
					has_integrated_harpy_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_harpy_minority_size_effect = yes
			if = {
				limit = { OR = { has_harpy_majority_trigger = yes has_large_harpy_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_goblin_pop_trigger = yes
					has_integrated_goblin_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_goblin_minority_size_effect = yes
			if = {
				limit = { OR = { has_goblin_majority_trigger = yes has_large_goblin_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_orcish_pop_trigger = yes
					has_integrated_orcish_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_orcish_minority_size_effect = yes
			if = {
				limit = { OR = { has_orcish_majority_trigger = yes has_large_orcish_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_gnollish_pop_trigger = yes
					has_integrated_gnollish_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_gnollish_minority_size_effect = yes
			if = {
				limit = { OR = { has_gnollish_majority_trigger = yes has_large_gnollish_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_kobold_pop_trigger = yes
					has_integrated_kobold_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_kobold_minority_size_effect = yes
			if = {
				limit = { OR = { has_kobold_majority_trigger = yes has_large_kobold_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_ruinborn_pop_trigger = yes
					has_integrated_ruinborn_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_ruinborn_minority_size_effect = yes
			if = {
				limit = { OR = { has_ruinborn_majority_trigger = yes has_large_ruinborn_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_half_orcish_pop_trigger = yes
					has_integrated_half_orcish_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_half_orcish_minority_size_effect = yes
			if = {
				limit = { OR = { has_half_orcish_majority_trigger = yes has_large_half_orcish_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_half_elven_pop_trigger = yes
					has_integrated_half_elven_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_half_elven_minority_size_effect = yes
			if = {
				limit = { OR = { has_half_elven_majority_trigger = yes has_large_half_elven_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_harimari_pop_trigger = yes
					has_integrated_harimari_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_harimari_minority_size_effect = yes
			if = {
				limit = { OR = { has_harimari_majority_trigger = yes has_large_harimari_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_halfling_pop_trigger = yes
					has_integrated_halfling_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_halfling_minority_size_effect = yes
			if = {
				limit = { OR = { has_halfling_majority_trigger = yes has_large_halfling_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_gnomish_pop_trigger = yes
					has_integrated_gnomish_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_gnomish_minority_size_effect = yes
			if = {
				limit = { OR = { has_gnomish_majority_trigger = yes has_large_gnomish_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_human_pop_trigger = yes
					has_integrated_human_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_human_minority_size_effect = yes
			if = {
				limit = { OR = { has_human_majority_trigger = yes has_large_human_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_elven_pop_trigger = yes
					has_integrated_elven_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_elven_minority_size_effect = yes
			if = {
				limit = { OR = { has_elven_majority_trigger = yes has_large_elven_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_dwarven_pop_trigger = yes
					has_integrated_dwarven_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_dwarven_minority_size_effect = yes
			if = {
				limit = { OR = { has_dwarven_majority_trigger = yes has_large_dwarven_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	else = {
		add_treasury = 1
	}
}

jaddempire_move_court_minorities_from_to = {
	custom_tooltip = jaddempire_move_court_minorities_from_to_tooltip
	hidden_effect = {
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_hobgoblin_pop_trigger = yes
						has_integrated_hobgoblin_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_hobgoblin_majority_trigger = yes
							has_hobgoblin_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_hobgoblin_minority_size_effect = yes
			}
			$province_id$ = {
				add_hobgoblin_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_centaur_pop_trigger = yes
						has_integrated_centaur_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_centaur_majority_trigger = yes
							has_centaur_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_centaur_minority_size_effect = yes
			}
			$province_id$ = {
				add_centaur_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_ogre_pop_trigger = yes
						has_integrated_ogre_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_ogre_majority_trigger = yes
							has_ogre_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_ogre_minority_size_effect = yes
			}
			$province_id$ = {
				add_ogre_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_troll_pop_trigger = yes
						has_integrated_troll_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_troll_majority_trigger = yes
							has_troll_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_troll_minority_size_effect = yes
			}
			$province_id$ = {
				add_troll_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_harpy_pop_trigger = yes
						has_integrated_harpy_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_harpy_majority_trigger = yes
							has_harpy_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_harpy_minority_size_effect = yes
			}
			$province_id$ = {
				add_harpy_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_goblin_pop_trigger = yes
						has_integrated_goblin_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_goblin_majority_trigger = yes
							has_goblin_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_goblin_minority_size_effect = yes
			}
			$province_id$ = {
				add_goblin_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_orcish_pop_trigger = yes
						has_integrated_orcish_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_orcish_majority_trigger = yes
							has_orcish_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_orcish_minority_size_effect = yes
			}
			$province_id$ = {
				add_orcish_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_gnollish_pop_trigger = yes
						has_integrated_gnollish_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_gnollish_majority_trigger = yes
							has_gnollish_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_gnollish_minority_size_effect = yes
			}
			$province_id$ = {
				add_gnollish_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_kobold_pop_trigger = yes
						has_integrated_kobold_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_kobold_majority_trigger = yes
							has_kobold_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_kobold_minority_size_effect = yes
			}
			$province_id$ = {
				add_kobold_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_ruinborn_pop_trigger = yes
						has_integrated_ruinborn_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_ruinborn_majority_trigger = yes
							has_ruinborn_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_ruinborn_minority_size_effect = yes
			}
			$province_id$ = {
				add_ruinborn_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_half_orcish_pop_trigger = yes
						has_integrated_half_orcish_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_half_orcish_majority_trigger = yes
							has_half_orcish_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_half_orcish_minority_size_effect = yes
			}
			$province_id$ = {
				add_half_orcish_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_half_elven_pop_trigger = yes
						has_integrated_half_elven_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_half_elven_majority_trigger = yes
							has_half_elven_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_half_elven_minority_size_effect = yes
			}
			$province_id$ = {
				add_half_elven_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_harimari_pop_trigger = yes
						has_integrated_harimari_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_harimari_majority_trigger = yes
							has_harimari_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_harimari_minority_size_effect = yes
			}
			$province_id$ = {
				add_harimari_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_halfling_pop_trigger = yes
						has_integrated_halfling_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_halfling_majority_trigger = yes
							has_halfling_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_halfling_minority_size_effect = yes
			}
			$province_id$ = {
				add_halfling_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_gnomish_pop_trigger = yes
						has_integrated_gnomish_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_gnomish_majority_trigger = yes
							has_gnomish_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_gnomish_minority_size_effect = yes
			}
			$province_id$ = {
				add_gnomish_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_human_pop_trigger = yes
						has_integrated_human_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_human_majority_trigger = yes
							has_human_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_human_minority_size_effect = yes
			}
			$province_id$ = {
				add_human_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_elven_pop_trigger = yes
						has_integrated_elven_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_elven_majority_trigger = yes
							has_elven_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_elven_minority_size_effect = yes
			}
			$province_id$ = {
				add_elven_minority_size_effect = yes
			}
		}
		if = {
			limit = {
				$from$ = {
					OR = {
						has_coexisting_dwarven_pop_trigger = yes
						has_integrated_dwarven_pop_trigger = yes
					}
				}
				$province_id$ = {
					NOT = {
						OR = {
							has_dwarven_majority_trigger = yes
							has_dwarven_minority_trigger = yes
						}
					}
				}
			}
			$from$ = {
				remove_dwarven_minority_size_effect = yes
			}
			$province_id$ = {
				add_dwarven_minority_size_effect = yes
			}
		}
	}
}

calc_raj_total_dev = {
	4411 = {
		set_variable = {
			which = raj_total_dev
			value = 0
		}
		owner = {
			every_subject_country = {
				4411 = {
					export_to_variable = {
						which = raj_development_to_add
						value = total_development
						who = PREV
					}
					change_variable = {
						which = raj_total_dev
						which = raj_development_to_add
					}
				}
			}
			4411 = {
				export_to_variable = {
					which = raj_development_to_add
					value = total_development
					who = PREV
				}
				change_variable = {
					which = raj_total_dev
					which = raj_development_to_add
				}
			}
		}
	}
}

raj_cohesion_change = {
	hidden_effect = {
		4411 = {
			#Set amount to change by
			set_variable = {
				which = raj_cohesion_change_amount
				value = $amount$
			}
			multiply_variable = {
				which = raj_cohesion_change_amount
				value = 100.00
			}
			export_to_variable = {
				which = raj_development_to_add
				value = total_development
				who = PREV
			}
			multiply_variable = {
				which = raj_cohesion_change_amount
				which = raj_development_to_add
			}
			divide_variable = {
				which = raj_cohesion_change_amount
				which = raj_total_dev
			}
			
			change_variable = {
				which = raj_cohesion
				which = raj_cohesion_change_amount
			}
			
			if = {
				limit = {
					check_variable = { raj_cohesion = 100 }
				}
				set_variable = {
					which = raj_cohesion
					value = 100
				}
			}
			else_if = {
				limit = {
					NOT = { check_variable = { raj_cohesion = 0 } }
				}
				set_variable = {
					which = raj_cohesion
					value = 0
				}
			}
		}
	}
	if = {
		limit = { 
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = raj_cohesion_change_amount
					value = $amount$
				}
				
				check_variable = { raj_cohesion_change_amount = 0 }
			}
		}
		if = {
			limit = {
				4411 = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = raj_cohesion_change_amount
							value = $amount$
						}
						multiply_variable = {
							which = raj_cohesion_change_amount
							value = 100.00
						}
						export_to_variable = {
							which = raj_development_to_add
							value = total_development
							who = PREV
						}
						multiply_variable = {
							which = raj_cohesion_change_amount
							which = raj_development_to_add
						}
						divide_variable = {
							which = raj_cohesion_change_amount
							which = raj_total_dev
						}
						
						check_variable = { raj_cohesion_change_amount = 3 }
					}
				}
			}
			if = {
				limit = {
					4411 = {
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = raj_cohesion_change_amount
								value = $amount$
							}
							multiply_variable = {
								which = raj_cohesion_change_amount
								value = 100.00
							}
							export_to_variable = {
								which = raj_development_to_add
								value = total_development
								who = PREV
							}
							multiply_variable = {
								which = raj_cohesion_change_amount
								which = raj_development_to_add
							}
							divide_variable = {
								which = raj_cohesion_change_amount
								which = raj_total_dev
							}
							
							check_variable = { raj_cohesion_change_amount = 10 }
						}
					}
				}
				if = {
					limit = {
						4411 = {
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = raj_cohesion_change_amount
									value = $amount$
								}
								multiply_variable = {
									which = raj_cohesion_change_amount
									value = 100.00
								}
								export_to_variable = {
									which = raj_development_to_add
									value = total_development
									who = PREV
								}
								multiply_variable = {
									which = raj_cohesion_change_amount
									which = raj_development_to_add
								}
								divide_variable = {
									which = raj_cohesion_change_amount
									which = raj_total_dev
								}
								
								check_variable = { raj_cohesion_change_amount = 15 }
							}
						}
					}
					custom_tooltip = raj_cohesion_increase_gargantuan_tt
				}
				else = {
					custom_tooltip = raj_cohesion_increase_huge_tt
				}
			}
			else = {
				if = {
					limit = {
						4411 = {
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = raj_cohesion_change_amount
									value = $amount$
								}
								multiply_variable = {
									which = raj_cohesion_change_amount
									value = 100.00
								}
								export_to_variable = {
									which = raj_development_to_add
									value = total_development
									who = PREV
								}
								multiply_variable = {
									which = raj_cohesion_change_amount
									which = raj_development_to_add
								}
								divide_variable = {
									which = raj_cohesion_change_amount
									which = raj_total_dev
								}
								
								check_variable = { raj_cohesion_change_amount = 6 }
							}
						}
					}
					custom_tooltip = raj_cohesion_increase_large_tt
				}
				else = {
					custom_tooltip = raj_cohesion_increase_medium_tt
				}
			}
		}
		else = {
			if = {
				limit = {
					4411 = {
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = raj_cohesion_change_amount
								value = $amount$
							}
							multiply_variable = {
								which = raj_cohesion_change_amount
								value = 100.00
							}
							export_to_variable = {
								which = raj_development_to_add
								value = total_development
								who = PREV
							}
							multiply_variable = {
								which = raj_cohesion_change_amount
								which = raj_development_to_add
							}
							divide_variable = {
								which = raj_cohesion_change_amount
								which = raj_total_dev
							}
							
							check_variable = { raj_cohesion_change_amount = 1 }
						}
					}
				}
				custom_tooltip = raj_cohesion_increase_small_tt
			}
			else = {
				custom_tooltip = raj_cohesion_increase_tiny_tt
			}
		}
	}
	else = { #negative
		if = {
			limit = {
				4411 = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = raj_cohesion_change_amount
							value = $amount$
						}
						multiply_variable = {
							which = raj_cohesion_change_amount
							value = 100.00
						}
						export_to_variable = {
							which = raj_development_to_add
							value = total_development
							who = PREV
						}
						multiply_variable = {
							which = raj_cohesion_change_amount
							which = raj_development_to_add
						}
						divide_variable = {
							which = raj_cohesion_change_amount
							which = raj_total_dev
						}
						
						check_variable = { raj_cohesion_change_amount = -3 }
					}
				}
			}
			if = {
				limit = {
					4411 = {
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = raj_cohesion_change_amount
								value = $amount$
							}
							multiply_variable = {
								which = raj_cohesion_change_amount
								value = 100.00
							}
							export_to_variable = {
								which = raj_development_to_add
								value = total_development
								who = PREV
							}
							multiply_variable = {
								which = raj_cohesion_change_amount
								which = raj_development_to_add
							}
							divide_variable = {
								which = raj_cohesion_change_amount
								which = raj_total_dev
							}
							
							check_variable = { raj_cohesion_change_amount = -1 }
						}
					}
				}
				custom_tooltip = raj_cohesion_decrease_tiny_tt
			}
			else = {
				custom_tooltip = raj_cohesion_decrease_small_tt
			}
		}
		else = {
			if = {
				limit = {
					4411 = {
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = raj_cohesion_change_amount
								value = $amount$
							}
							multiply_variable = {
								which = raj_cohesion_change_amount
								value = 100.00
							}
							export_to_variable = {
								which = raj_development_to_add
								value = total_development
								who = PREV
							}
							multiply_variable = {
								which = raj_cohesion_change_amount
								which = raj_development_to_add
							}
							divide_variable = {
								which = raj_cohesion_change_amount
								which = raj_total_dev
							}
							
							check_variable = { raj_cohesion_change_amount = -10 }
						}
					}
				}
				if = {
					limit = {
						4411 = {
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = raj_cohesion_change_amount
									value = $amount$
								}
								multiply_variable = {
									which = raj_cohesion_change_amount
									value = 100.00
								}
								export_to_variable = {
									which = raj_development_to_add
									value = total_development
									who = PREV
								}
								multiply_variable = {
									which = raj_cohesion_change_amount
									which = raj_development_to_add
								}
								divide_variable = {
									which = raj_cohesion_change_amount
									which = raj_total_dev
								}
								
								check_variable = { raj_cohesion_change_amount = -6 }
							}
						}
					}
					custom_tooltip = raj_cohesion_decrease_medium_tt
				}
				else = {
					custom_tooltip = raj_cohesion_decrease_large_tt
				}
			}
			else = {
				if = {
					limit = {
						4411 = {
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = raj_cohesion_change_amount
									value = $amount$
								}
								multiply_variable = {
									which = raj_cohesion_change_amount
									value = 100.00
								}
								export_to_variable = {
									which = raj_development_to_add
									value = total_development
									who = PREV
								}
								multiply_variable = {
									which = raj_cohesion_change_amount
									which = raj_development_to_add
								}
								divide_variable = {
									which = raj_cohesion_change_amount
									which = raj_total_dev
								}
								
								check_variable = { raj_cohesion_change_amount = -15 }
							}
						}
					}
					custom_tooltip = raj_cohesion_decrease_huge_tt
				}
				else = {
					custom_tooltip = raj_cohesion_decrease_gargantuan_tt
				}
			}
		}
	}
}

raj_cohesion_change_absolute = {
	hidden_effect = {
		4411 = {
			change_variable = {
				which = raj_cohesion
				value = $amount$
			}
			
			if = {
				limit = {
					check_variable = { raj_cohesion = 100 }
				}
				set_variable = {
					which = raj_cohesion
					value = 100
				}
			}
			else_if = {
				limit = {
					NOT = { check_variable = { raj_cohesion = 0 } }
				}
				set_variable = {
					which = raj_cohesion
					value = 0
				}
			}
		}
	}
	if = {
		limit = { 
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = raj_cohesion_change_amount
					value = $amount$
				}
				
				check_variable = { raj_cohesion_change_amount = 0 }
			}
		}
		if = {
			limit = {
				4411 = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = raj_cohesion_change_amount
							value = $amount$
						}
						
						check_variable = { raj_cohesion_change_amount = 3 }
					}
				}
			}
			if = {
				limit = {
					4411 = {
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = raj_cohesion_change_amount
								value = $amount$
							}
							
							check_variable = { raj_cohesion_change_amount = 10 }
						}
					}
				}
				if = {
					limit = {
						4411 = {
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = raj_cohesion_change_amount
									value = $amount$
								}
								
								check_variable = { raj_cohesion_change_amount = 15 }
							}
						}
					}
					custom_tooltip = raj_cohesion_increase_gargantuan_tt
				}
				else = {
					custom_tooltip = raj_cohesion_increase_huge_tt
				}
			}
			else = {
				if = {
					limit = {
						4411 = {
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = raj_cohesion_change_amount
									value = $amount$
								}
								
								check_variable = { raj_cohesion_change_amount = 6 }
							}
						}
					}
					custom_tooltip = raj_cohesion_increase_large_tt
				}
				else = {
					custom_tooltip = raj_cohesion_increase_medium_tt
				}
			}
		}
		else = {
			if = {
				limit = {
					4411 = {
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = raj_cohesion_change_amount
								value = $amount$
							}
							
							check_variable = { raj_cohesion_change_amount = 1 }
						}
					}
				}
				custom_tooltip = raj_cohesion_increase_small_tt
			}
			else = {
				custom_tooltip = raj_cohesion_increase_tiny_tt
			}
		}
	}
	else = { #negative
		if = {
			limit = {
				4411 = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = raj_cohesion_change_amount
							value = $amount$
						}
						
						check_variable = { raj_cohesion_change_amount = -3 }
					}
				}
			}
			if = {
				limit = {
					4411 = {
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = raj_cohesion_change_amount
								value = $amount$
							}
							
							check_variable = { raj_cohesion_change_amount = -1 }
						}
					}
				}
				custom_tooltip = raj_cohesion_decrease_tiny_tt
			}
			else = {
				custom_tooltip = raj_cohesion_decrease_small_tt
			}
		}
		else = {
			if = {
				limit = {
					4411 = {
						variable_arithmetic_trigger = {
							export_to_variable = {
								which = raj_cohesion_change_amount
								value = $amount$
							}
							
							check_variable = { raj_cohesion_change_amount = -10 }
						}
					}
				}
				if = {
					limit = {
						4411 = {
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = raj_cohesion_change_amount
									value = $amount$
								}
								
								check_variable = { raj_cohesion_change_amount = -6 }
							}
						}
					}
					custom_tooltip = raj_cohesion_decrease_medium_tt
				}
				else = {
					custom_tooltip = raj_cohesion_decrease_large_tt
				}
			}
			else = {
				if = {
					limit = {
						4411 = {
							variable_arithmetic_trigger = {
								export_to_variable = {
									which = raj_cohesion_change_amount
									value = $amount$
								}
								
								check_variable = { raj_cohesion_change_amount = -15 }
							}
						}
					}
					custom_tooltip = raj_cohesion_decrease_huge_tt
				}
				else = {
					custom_tooltip = raj_cohesion_decrease_gargantuan_tt
				}
			}
		}
	}
}

remove_raj_mandate = {
	remove_country_modifier = raj_mandate_raja_protection
	remove_country_modifier = raj_mandate_right_to_expansion
	remove_country_modifier = raj_mandate_guaranteed_autonomy
	remove_country_modifier = raj_mandate_mercantile_preference
	remove_country_modifier = raj_mandate_sanctioned_armoury
	remove_country_modifier = raj_mandate_ministry_lectures
	remove_country_modifier = raj_mandate_senapti_primacy
	remove_country_modifier = raj_mandate_extended_prabhi_privileges
	remove_country_modifier = raj_mandate_territorial_limits
}

raj_cohesion_yearly_tick = {
	4411 = {
		owner = {
			every_subject_country = {
				limit = { has_estate = estate_raj_ministries }
				if = {
					limit = {
						estate_influence = {
							estate = estate_raj_ministries
							influence = 60
						}
					}
					raj_cohesion_change = {	amount = 0.02 }
				}
				else_if = {
					limit = {
						estate_influence = {
							estate = estate_raj_ministries
							influence = 40
						}
					}
					raj_cohesion_change = {	amount = 0.01 }
				}
				else_if = {
					limit = {
						NOT = {
							estate_influence = {
								estate = estate_raj_ministries
								influence = 20
							}
						}
					}
					raj_cohesion_change = {	amount = -0.01 }
				}
				
				if = {
					limit = { liberty_desire = 40 }
					raj_cohesion_change = {	amount = -0.01 }
				}
				else_if = {
					limit = { NOT = { liberty_desire = 15 } }
					raj_cohesion_change = {	amount = 0.01 }
				}
			}
		}
	}
}

calc_raj_max_allowed_senaptia = {
		4411 = {
			if = {
				limit = { ROOT = { num_of_subjects = 100 } }
				set_variable = {
					which = raj_max_allowed_senaptia
					value = 14
				}
			}
			else_if = {
				limit = { ROOT = { num_of_subjects = 70 } }
				set_variable = {
					which = raj_max_allowed_senaptia
					value = 12
				}
			}
			else_if = {
				limit = { ROOT = { num_of_subjects = 50 } }
				set_variable = {
					which = raj_max_allowed_senaptia
					value = 10
				}
			}
			else_if = {
				limit = { ROOT = { num_of_subjects = 35 } }
				set_variable = {
					which = raj_max_allowed_senaptia
					value = 8
				}
			}
			else_if = {
				limit = { ROOT = { num_of_subjects = 25 } }
				set_variable = {
					which = raj_max_allowed_senaptia
					value = 6
				}
			}
			else_if = {
				limit = { ROOT = { num_of_subjects = 15 } }
				set_variable = {
					which = raj_max_allowed_senaptia
					value = 4
				}
			}
			else = {
				set_variable = {
					which = raj_max_allowed_senaptia
					value = 2
				}
			}
			
			if = {
				limit = { ROOT = { has_estate_privilege = estate_raj_ministries_expanded_senaptia_ranks } }
				change_variable = {
					which = raj_max_allowed_senaptia
					value = 2
				}
			}
			if = {
				limit = { ROOT = { has_estate_privilege = estate_raj_ministries_reduced_senaptia_ranks } }
				change_variable = {
					which = raj_max_allowed_senaptia
					value = -2
				}
			}
			
			set_variable = {
				which = raj_current_num_of_senaptia
				value = 0
			}
			ROOT = {
				every_subject_country = {
					limit = { is_subject_of_type = great_daimyo_vassal }
					4411 = { change_variable = { raj_current_num_of_senaptia = 1 }
				}
			}
		}
	}
}

return_all_uncored_provinces = { #Make this also release nations that do not exist
	custom_tooltip = return_all_uncored_provinces_tt
	hidden_effect = {
		[[release_nations]
			every_owned_province = {
				limit = {
					NOT = { is_core = ROOT }
					any_core_country = {
						# exists = no
						NOT = { tag = ROOT }
						PREV = { previous_owner = PREV }
					}
				}
				save_event_target_as = province_to_cede
				cede_province = previous_owner
				owner = { change_religion = event_target:province_to_cede }
				if = {
					limit = { ROOT = { overlord = { has_reform = raja_reform } } }
					owner = {
						random_country = {
							limit = { overlord_of = ROOT }
							vassalize = PREV
						}
					}
				}
			}
		]
		every_owned_province = {
			limit = {
				NOT = { is_core = ROOT }
				any_country = {
					NOT = { tag = ROOT }
					PREV = { previous_owner = PREV }
				}
			}
			random_country = {
				limit = {
					NOT = { tag = ROOT }
					PREV = { previous_owner = PREV }
				}
				PREV = { cede_province = PREV }
			}
		}
	}
}


#Adenica
adenicaIncrementChivalryMissionCompleted = {
	hidden_effect = {
		change_variable = { adenicaChivalryMissionsCompleted = 1 }
	}
}

blue_scarves_army_large = {
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { cavalry = PREV }
	Y05 = { cavalry = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
}

blue_scarves_army_mid = {
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { cavalry = PREV }
	Y05 = { cavalry = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
	Y05 = { artillery = PREV }
}

blue_scarves_army_local = {
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
	Y05 = { infantry = PREV }
}

count_gov_as_technocracy = {
	#not needed anymore. Kept not to break shit
}

reset_gov_is_technocracy = {
	#not needed anymore. Kept not to break shit
}


count_gov_as_magocracy = {
	#not needed anymore. Kept not to break shit
}

reset_gov_is_magocracy = {
	#not needed anymore. Kept not to break shit
}

#VerkalSkomdihr

verkalskomdihr_define_hold_that_can_build_gate = {
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_1_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold1
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_2_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold2
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_3_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold3
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_4_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold4
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_5_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold5
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_6_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold6
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_7_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold7
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_8_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold8
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_9_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold9
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_10_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold10
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_11_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold11
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_12_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold12
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_13_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold13
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_14_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold14
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_15_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold15
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_16_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold16
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_17_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold17
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_18_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold18
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_19_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold19
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_20_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold20
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_21_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold21
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_22_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold22
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_23_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold23
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_24_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold24
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_25_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold25
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_26_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold26
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_27_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold27
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_28_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold28
	}
	random_owned_province = {
		limit = { verkalskomdihr_can_build_gate = yes NOT = { has_province_flag = vs_hold_@ROOT } }
		set_province_flag = vs_option_hold_29_@ROOT
		set_province_flag = vs_hold_@ROOT
		save_event_target_as = vs_hold29
	}
}

verkalskomdihr_clr_gate_menu = {
	every_owned_province = {
		limit = { has_province_flag = vs_hold_@ROOT }
		clr_province_flag = vs_option_hold_1_@ROOT
		clr_province_flag = vs_option_hold_2_@ROOT
		clr_province_flag = vs_option_hold_3_@ROOT
		clr_province_flag = vs_option_hold_4_@ROOT
		clr_province_flag = vs_option_hold_5_@ROOT
		clr_province_flag = vs_option_hold_6_@ROOT
		clr_province_flag = vs_option_hold_7_@ROOT
		clr_province_flag = vs_option_hold_8_@ROOT
		clr_province_flag = vs_option_hold_9_@ROOT
		clr_province_flag = vs_option_hold_10_@ROOT
		clr_province_flag = vs_option_hold_11_@ROOT
		clr_province_flag = vs_option_hold_12_@ROOT
		clr_province_flag = vs_option_hold_13_@ROOT
		clr_province_flag = vs_option_hold_14_@ROOT
		clr_province_flag = vs_option_hold_15_@ROOT
		clr_province_flag = vs_option_hold_16_@ROOT
		clr_province_flag = vs_option_hold_17_@ROOT
		clr_province_flag = vs_option_hold_18_@ROOT
		clr_province_flag = vs_option_hold_19_@ROOT
		clr_province_flag = vs_option_hold_20_@ROOT
		clr_province_flag = vs_option_hold_21_@ROOT
		clr_province_flag = vs_option_hold_22_@ROOT
		clr_province_flag = vs_option_hold_23_@ROOT
		clr_province_flag = vs_option_hold_24_@ROOT
		clr_province_flag = vs_option_hold_25_@ROOT
		clr_province_flag = vs_option_hold_26_@ROOT
		clr_province_flag = vs_option_hold_27_@ROOT
		clr_province_flag = vs_option_hold_28_@ROOT
		clr_province_flag = vs_option_hold_29_@ROOT
		clr_province_flag = vs_hold_@ROOT
	}
	clr_country_flag = verkalskomdihr_gate_menu
}

transfer_uncored_province_value_to_overlord = {
	if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 5
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -50
		overlord = { add_treasury = 50 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 10
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -80
		overlord = { add_treasury = 100 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 15
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -100
		overlord = { add_treasury = 100 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 20
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -150
		overlord = { add_treasury = 150 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 25
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -200
		overlord = { add_treasury = 200 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 30
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -250
		overlord = { add_treasury = 250 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 35
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -300
		overlord = { add_treasury = 300 }
	}
	else_if = {
		limit = {
			development_in_provinces = {
				value = 35
				NOT = { is_core = ROOT }
			}
			NOT = {
				development_in_provinces = {
					value = 40
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -350
		overlord = { add_treasury = 350 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 45
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -400
		overlord = { add_treasury = 400 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 50
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -450
		overlord = { add_treasury = 450 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 55
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -500
		overlord = { add_treasury = 500 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 60
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -550
		overlord = { add_treasury = 550 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 65
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -600
		overlord = { add_treasury = 600 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 70
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -650
		overlord = { add_treasury = 650 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 75
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -700
		overlord = { add_treasury = 700 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 80
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -750
		overlord = { add_treasury = 750 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 85
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -800
		overlord = { add_treasury = 800 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 90
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -850
		overlord = { add_treasury = 850 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 95
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -900
		overlord = { add_treasury = 900 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 100
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -950
		overlord = { add_treasury = 950 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 105
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1000
		overlord = { add_treasury = 1000 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 110
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1050
		overlord = { add_treasury = 1050 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 115
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1100
		overlord = { add_treasury = 1100 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 120
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1150
		overlord = { add_treasury = 1150 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 125
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1200
		overlord = { add_treasury = 1200 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 130
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1250
		overlord = { add_treasury = 1250 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 135
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1300
		overlord = { add_treasury = 1300 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 140
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1350
		overlord = { add_treasury = 1350 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 145
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1400
		overlord = { add_treasury = 1400 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 150
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1450
		overlord = { add_treasury = 1450 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 155
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1500
		overlord = { add_treasury = 1500 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 80
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1550
		overlord = { add_treasury = 1550 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 165
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1600
		overlord = { add_treasury = 1600 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 170
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1650
		overlord = { add_treasury = 1650 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 175
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1700
		overlord = { add_treasury = 1700 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 180
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1750
		overlord = { add_treasury = 1750 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 185
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1800
		overlord = { add_treasury = 1800 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 190
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1850
		overlord = { add_treasury = 1850 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 195
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1900
		overlord = { add_treasury = 1900 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 200
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1950
		overlord = { add_treasury = 1950 }
	}
	else = {
		add_treasury = -2000
		overlord = { add_treasury = 2000 }
	}
}

upgrade_wineport_wines = {
	# 1 is at the bottom
	if = {
		limit = { has_country_modifier = wineport_wines_1 }
		remove_country_modifier = wineport_wines_1
		add_country_modifier = {
			name = wineport_wines_2
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_2 }
		remove_country_modifier = wineport_wines_2
		add_country_modifier = {
			name = wineport_wines_3
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_3	}
		remove_country_modifier = wineport_wines_3
		add_country_modifier = {
			name = wineport_wines_4
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_4	}
		remove_country_modifier = wineport_wines_4
		add_country_modifier = {
			name = wineport_wines_5
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_5	}
		remove_country_modifier = wineport_wines_5
		add_country_modifier = {
			name = wineport_wines_6
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_6	}
		remove_country_modifier = wineport_wines_6
		add_country_modifier = {
			name = wineport_wines_7
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_7	}
		remove_country_modifier = wineport_wines_7
		add_country_modifier = {
			name = wineport_wines_8
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_8	}
		remove_country_modifier = wineport_wines_8
		add_country_modifier = {
			name = wineport_wines_9
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_9	}
		remove_country_modifier = wineport_wines_9
		add_country_modifier = {
			name = wineport_wines_10
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_10	}
		remove_country_modifier = wineport_wines_10
		add_country_modifier = {
			name = wineport_wines_11
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_11	}
		remove_country_modifier = wineport_wines_11
		add_country_modifier = {
			name = wineport_wines_12
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_12	}
		remove_country_modifier = wineport_wines_12
		add_country_modifier = {
			name = wineport_wines_13
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_13	}
		remove_country_modifier = wineport_wines_13
		add_country_modifier = {
			name = wineport_wines_14
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_14	}
		remove_country_modifier = wineport_wines_14
		add_country_modifier = {
			name = wineport_wines_15
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_15	}
		remove_country_modifier = wineport_wines_15
		add_country_modifier = {
			name = wineport_wines_16
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_16	}
		remove_country_modifier = wineport_wines_16
		add_country_modifier = {
			name = wineport_wines_17
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_17	}
		remove_country_modifier = wineport_wines_17
		add_country_modifier = {
			name = wineport_wines_18
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_18	}
		remove_country_modifier = wineport_wines_18
		add_country_modifier = {
			name = wineport_wines_19
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = wineport_wines_19	}
		remove_country_modifier = wineport_wines_19
		add_country_modifier = {
			name = wineport_wines_20
			duration = -1
		}
	}
	else = {
		add_country_modifier = {
			name = wineport_wines_1
			duration = -1
		}
	}
}

save_ruler_stats = {
	hidden_effect = {
		export_to_variable = {
			variable_name = ruler_adm
			value = ADM
		}
		export_to_variable = {
			variable_name = ruler_dip
			value = DIP
		}
		export_to_variable = {
			variable_name = ruler_mil
			value = MIL
		}
	}	
}

restore_ruler_stats = {
	custom_tooltip = restore_reviver_stats
	
	hidden_effect {
		set_variable = {
			which = ruler_adm_temp 
			which = ruler_adm 
		}
		set_variable = {
			which = ruler_dip_temp 
			which = ruler_dip
		}
		set_variable = {
			which = ruler_mil_temp 
			which = ruler_mil 
		}
		change_adm = -6
		change_dip = -6
		change_mil = -6
	}
	
	while = {
		limit = {
			check_variable = {
				which = ruler_adm_temp
				value = 1
			}
		}
		change_adm = 1
		subtract_variable = {
			which = ruler_adm_temp
			value = 1
		}
	}

	while = {
		limit = {
			check_variable = {
				which = ruler_dip_temp
				value = 1
			}
		}
		change_dip = 1
		subtract_variable = {
			which = ruler_dip_temp
			value = 1
		}
	}
	
	while = {
		limit = {
			check_variable = {
				which = ruler_mil_temp
				value = 1
			}
		}
		change_mil = 1
		subtract_variable = {
			which = ruler_mil_temp
			value = 1
		}
	}
}

revival_stat_loss = {
	if = {
		limit = { 
			has_country_flag = b38_entef_ruler
			has_country_flag = b38_entef_sarcophagus
		}
		random_list = {
			25 = { }
			25 = { change_adm = -1 }
			25 = { change_dip = -1 }
			25 = { change_mil = -1 }
		}
	}
	else = {
		random_list = {
			40 = { change_adm = -1 change_dip = -1 change_mil = -1 }
			20 = { change_adm = -1 }
			20 = { change_dip = -1 }
			20 = { change_mil = -1 }
		}
	}
}

save_ruler_dynasty = {
	hidden_effect = {
		exile_heir_as = temp_exile_@ROOT
		define_heir = {
			dynasty = ROOT
			age = 16
			adm = 6
			dip = 6
			mil = 6
		}
		add_heir_personality = immortal_personality
		add_ruler_personality = immortal_personality
		exile_ruler_as = temp_exile_ruler_@ROOT
		add_stability = 1
		define_heir = {
			dynasty = ROOT
			age = 16
			adm = 0
			dip = 0
			mil = 0
		}
		exile_ruler_as = dynastic_heir_@ROOT
		add_stability = 1
		set_ruler = temp_exile_ruler_@ROOT
		set_heir = temp_exile_@ROOT
	}
}

aelnar_happy_sicrheior = {
	if = {
		limit = { NOT = { has_country_flag = sicrheior_revolted } }
		custom_tooltip = sicrheior_happy_tooltip
		hidden_effect = {
			subtract_variable = { sicrheior_value = 20 }
		}
	}
}

aelnar_angry_sicrheior = {
	if = {
		limit = { NOT = { has_country_flag = sicrheior_revolted } }
		custom_tooltip = sicrheior_angry_tooltip
		hidden_effect = {
			change_variable = { sicrheior_value = 20 }
		}
	}
}

aelnar_happy_kayd = {
	if = {
		limit = { NOT = { has_country_flag = kayd_revolted } }
		custom_tooltip = kayd_happy_tooltip
		hidden_effect = {
			subtract_variable = { kayd_value = 20 }
		}
	}
}

aelnar_angry_kayd = {
	if = {
		limit = { NOT = { has_country_flag = kayd_revolted } }
		custom_tooltip = kayd_angry_tooltip
		hidden_effect = {
			change_variable = { kayd_value = 20 }
		}
	}
}

aelnar_happy_dahvar = {
	if = {
		limit = { NOT = { has_country_flag = dahvar_revolted } }
		custom_tooltip = dahvar_happy_tooltip
		hidden_effect = {
			subtract_variable = { dahvar_value = 20 }
		}
	}
}

aelnar_angry_dahvar = {
	if = {
		limit = { NOT = { has_country_flag = dahvar_revolted } }
		custom_tooltip = dahvar_angry_tooltip
		hidden_effect = {
			change_variable = { dahvar_value = 20 }
		}
	}
}

aelnar_happy_aelthanas = {
	if = {
		limit = { NOT = { has_country_flag = aelthanas_revolted } }
		custom_tooltip = aelthanas_happy_tooltip
		hidden_effect = {
			subtract_variable = { aelthanas_value = 20 }
		}
	}
}

aelnar_angry_aelthanas = {
	if = {
		limit = { NOT = { has_country_flag = aelthanas_revolted } }
		custom_tooltip = aelthanas_angry_tooltip
		hidden_effect = {
			change_variable = { aelthanas_value = 20 }
		}
	}
}

aelnar_little_happy_sicrheior = {
	if = {
		limit = { NOT = { has_country_flag = sicrheior_revolted } }
		custom_tooltip = sicrheior_happy_little_tooltip
		hidden_effect = {
			subtract_variable = { sicrheior_value = 7 }
		
		}
	}
}

aelnar_little_angry_sicrheior = {
	if = {
		limit = { NOT = { has_country_flag = sicrheior_revolted } }
		custom_tooltip = sicrheior_angry_little_tooltip
		hidden_effect = {
			change_variable = { sicrheior_value = 7 }
		}
	}
}

aelnar_little_happy_kayd = {
	if = {
		limit = { NOT = { has_country_flag = kayd_revolted } }
		custom_tooltip = kayd_happy_little_tooltip
		hidden_effect = {
			subtract_variable = { kayd_value = 7 }
		}
	}
}

aelnar_little_angry_kayd = {
	if = {
		limit = { NOT = { has_country_flag = kayd_revolted } }
		custom_tooltip = kayd_angry_little_tooltip
		hidden_effect = {
			change_variable = { kayd_value = 7 }
		}
	}
}

aelnar_little_happy_dahvar = {
	if = {
		limit = { NOT = { has_country_flag = dahvar_revolted } }
		custom_tooltip = dahvar_happy_little_tooltip
		hidden_effect = {
			subtract_variable = { dahvar_value = 7 }
		}
	}
}

aelnar_little_angry_dahvar = {
	if = {
		limit = { NOT = { has_country_flag = dahvar_revolted } }
		custom_tooltip = dahvar_angry_little_tooltip
		hidden_effect = {
			change_variable = { dahvar_value = 7 }
		}
	}
}

aelnar_little_happy_aelthanas = {
	if = {
		limit = { NOT = { has_country_flag = aelthanas_revolted } }
		custom_tooltip = aelthanas_happy_little_tooltip
		hidden_effect = {
			subtract_variable = { aelthanas_value = 7 }
		}
	}
}

aelnar_little_angry_aelthanas = {
	if = {
		limit = { NOT = { has_country_flag = aelthanas_revolted } }
		custom_tooltip = aelthanas_angry_little_tooltip
		hidden_effect = {
			change_variable = { aelthanas_value = 7 }
		}
	}
}

rianvisa_declare_war = {
	declare_war_with_cb = {
		who = Z43
		casus_belli = cb_rianvisa
	}
	if = {
		limit = { NOT = { tag = Z69 } Z69 = { exists = yes } }
		declare_war_with_cb = {
			who = Z69
			casus_belli = cb_rianvisa
		}
	}
	if = {
		limit = { NOT = { tag = Z70 } Z70 = { exists = yes } }
		declare_war_with_cb = {
			who = Z70
			casus_belli = cb_rianvisa
		}
	}
	if = {
		limit = { NOT = { tag = Z71 } Z71 = { exists = yes } }
		declare_war_with_cb = {
			who = Z71
			casus_belli = cb_rianvisa
		}
	}
	if = {
		limit = { NOT = { tag = Z72 } Z72 = { exists = yes } }
		declare_war_with_cb = {
			who = Z72
			casus_belli = cb_rianvisa
		}
	}
	if = {
		limit = { NOT = { tag = Z73 } Z73 = { exists = yes } }
		declare_war_with_cb = {
			who = Z73
			casus_belli = cb_rianvisa
		}
	}
}

rianvisa_starting_army = {
	add_manpower = 30
	add_treasury = 1250
	add_stability = 1
	add_prestige = 120
	capital_scope = {
		build_to_forcelimit = {
			infantry = 0.6
			cavalry = 0.1
			artillery = 0.3
		}
	}
	random_owned_province = {
		limit = { has_port = yes }
		build_to_forcelimit = {
			heavy_ship = 0.2
			light_ship = 0.3
			transport = 0.5
		}
	}
}

malacnar_battleking_rankup = {
	if = {
		limit = {
			has_ruler_modifier = g32_untested_battleking
		}
		remove_country_modifier = g32_untested_battleking
		add_ruler_modifier = {
			name = g32_tested_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_cowardly_battleking
		}
		remove_country_modifier = g32_cowardly_battleking
		add_ruler_modifier = {
			name = g32_untested_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_tested_battleking
		}
		remove_country_modifier = g32_tested_battleking
		add_ruler_modifier = {
			name = g32_bloodied_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_bloodied_battleking
		}
		remove_country_modifier = g32_bloodied_battleking
		add_ruler_modifier = {
			name = g32_veteran_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_veteran_battleking
		}
		remove_country_modifier = g32_veteran_battleking
		add_ruler_modifier = {
			name = g32_legendary_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_legendary_battleking
		}
		add_mil_power = 100
		add_prestige = 20
	}
}

malacnar_battleking_rankdown = {
	if = {
		limit = {
			has_ruler_modifier = g32_untested_battleking
		}
		remove_country_modifier = g32_untested_battleking
		add_ruler_modifier = {
			name = g32_cowardly_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_cowardly_battleking
		}
		add_stability = -1
		random_province = {
			limit = { area = malacnar_area }
			
			spawn_rebels = {
				type = pretender_rebels
				size = 2
			}
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_tested_battleking
		}
		remove_country_modifier = g32_tested_battleking
		add_ruler_modifier = {
			name = g32_untested_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_bloodied_battleking
		}
		remove_country_modifier = g32_bloodied_battleking
		add_ruler_modifier = {
			name = g32_tested_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_veteran_battleking
		}
		remove_country_modifier = g32_veteran_battleking
		add_ruler_modifier = {
			name = g32_bloodied_battleking
		}
	}
	else_if = {
		limit = {
			has_ruler_modifier = g32_legendary_battleking
		}
		remove_country_modifier = g32_legendary_battleking
		add_ruler_modifier = {
			name = g32_veteran_battleking
		}
	}
}

aelnar_aia_recruitment = {
	every_owned_province = {
		if = {
			limit = { area_for_scope_province = { has_state_edict = aia_recruitement_edict } }
			if = { limit = { base_manpower =  10 }
				if = { limit = { base_manpower =  15 } 
					if = { limit = { base_manpower =  17 } 
						if = { limit = { base_manpower =  18 } 
							if = { limit = { base_manpower =  19 } 
								ROOT = { change_variable = { aia_agents = 19 } }
							}
							if = { limit = { NOT = { base_manpower =  19 } } 
								ROOT = { change_variable = { aia_agents = 18 } }
							}
						}
						if = { limit = { NOT = { base_manpower =  18 } } 
							ROOT = { change_variable = { aia_agents = 17 } }
						}
					}
					if = { limit = { NOT = { base_manpower =  17 } } 
						if = { limit = { base_manpower =  16 } 
							ROOT = { change_variable = { aia_agents = 16 } }
						}
						if = { limit = { NOT = { base_manpower =  16 } } 
							ROOT = { change_variable = { aia_agents = 15 } }
						}
					}
				}
				if = { limit = { NOT = { base_manpower =  15 } } 
					if = { limit = { base_manpower =  12 } 
						if = { limit = { base_manpower =  13 } 
							if = { limit = { base_manpower =  14 } 
								ROOT = { change_variable = { aia_agents = 14 } }
							}
							if = { limit = { NOT = { base_manpower =  14 } } 
								ROOT = { change_variable = { aia_agents = 13 } }
							}
						}
						if = { limit = { NOT = { base_manpower =  13 } } 
							ROOT = { change_variable = { aia_agents = 12 } }
						}
					}
					if = { limit = { NOT = { base_manpower =  12 } } 
						if = { limit = { base_manpower =  11 } 
							ROOT = { change_variable = { aia_agents = 11 } }
						}
						if = { limit = { NOT = { base_manpower =  11 } } 
							ROOT = { change_variable = { aia_agents = 10 } }
						}
					}
				}
			}
			if = { limit = { NOT = { base_manpower =  10 } } 
				if = { limit = { base_manpower =  5 } 
					if = { limit = { base_manpower =  7 } 
						if = { limit = { base_manpower =  8 } 
							if = { limit = { base_manpower =  9 } 
								ROOT = { change_variable = { aia_agents = 9 } }
							}
							if = { limit = { NOT = { base_manpower =  9 } } 
								ROOT = { change_variable = { aia_agents = 8 } }
							}
						}
						if = { limit = { NOT = { base_manpower =  8 } } 
							ROOT = { change_variable = { aia_agents = 7 } }
						}
					}
					if = { limit = { NOT = { base_manpower =  7 } } 
						if = { limit = { base_manpower =  6 } 
							ROOT = { change_variable = { aia_agents = 6 } }
						}
						if = { limit = { NOT = { base_manpower =  6 } } 
							ROOT = { change_variable = { aia_agents = 5 } }
						}
					}
				}
				if = { limit = { NOT = { base_manpower =  5 } } 
					if = { limit = { base_manpower =  2 } 
						if = { limit = { base_manpower =  3 } 
							if = { limit = { base_manpower =  4 } 
								ROOT = { change_variable = { aia_agents = 4 } }
							}
							if = { limit = { NOT = { base_manpower =  4 } } 
								ROOT = { change_variable = { aia_agents = 3 } }
							}
						}
						if = { limit = { NOT = { base_manpower =  3 } } 
							ROOT = { change_variable = { aia_agents = 2 } }
						}
					}
					if = { limit = { NOT = { base_manpower =  2 } }
						if = { limit = { base_manpower =  1 } 
							ROOT = { change_variable = { aia_agents = 1 } }
						}
						if = { limit = { NOT = { base_manpower =  1 } } 
							ROOT = { change_variable = { aia_agents = 1 } }
						}
					}
				}
			}
		}
	}
}

aelnar_the_covenant_influence = {
	every_owned_province = {
		limit = {
			has_state_edict = covenant_influence_edict
			NOT = {
				area_for_scope_province = {
					has_province_flag = temp
				}
			}
		}
		set_province_flag = temp
		PREV = { change_variable = { covenant_influence = 1 } }
	}
	every_owned_province = {
		clr_province_flag = temp
	}
}

aelnar_battle_count_lost = {
	if = {
		limit = { tag = Z43 has_ruler_flag = sicrheior_son }
		change_variable = { nbChargeLose = 1 }
		change_variable = { totalBattle = 1 }
		set_variable = {
			which = battleWinRate
			which = nbCharge
		}
		divide_variable = {
			which = battleWinRate
			which = totalBattle
		}
		multiply_variable = {
			which = battleWinRate
			value = 100
		}
	}
}

ibevar_reformation_menu = {
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar1
	}
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar2
	}
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar3
	}
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar4
	}
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar5
	}
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar6
	}
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar7
	}
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar8
	}
	random_owned_province = {
		limit = { has_province_modifier = ibevar_old_tradition NOT = { has_province_flag = ibevar_@ROOT } check_variable = { ibReform = 0 } NOT = { has_province_flag = ibevar_reformation_work_flag } }
		set_province_flag = ibevar_@ROOT
		save_event_target_as = ibevar9
	}
}

ibevar_province_flag = {
	if = {
		limit = { has_province_flag = ibe_2 }
		set_province_flag = ibe_3
	}
	else_if = {
		limit = { has_province_flag = ibe_1 }
		set_province_flag = ibe_2
	}
	else = {
		set_province_flag = ibe_1
	}
}

ibevar_reduce_ibReform = {
	trigger_switch = {
		on_trigger = has_province_flag
		
		ibe_3 = {
			custom_tooltip = ibe_3_tooltip
			hidden_effect = {
				random_list = {
					50 = { subtract_variable = { ibReform = 50 } }
					35 = { subtract_variable = { ibReform = 75 } }
					15 = { subtract_variable = { ibReform = 100 } }
				}
			}
		}
		
		ibe_2 = {
			custom_tooltip = ibe_2_tooltip
			hidden_effect = {
				random_list = {
					50 = { subtract_variable = { ibReform = 35 } }
					35 = { subtract_variable = { ibReform = 50 } }
					15 = { subtract_variable = { ibReform = 75 } }
				}
			}
		}
		
		ibe_1 = {
			custom_tooltip = ibe_1_tooltip
			hidden_effect = {
				random_list = {
					50 = { subtract_variable = { ibReform = 15 } }
					35 = { subtract_variable = { ibReform = 35 } }
					15 = { subtract_variable = { ibReform = 50 } }
				}
			}
		}
	}
	
	hidden_effect = {
		clr_province_flag = ibe_1
		clr_province_flag = ibe_2
		clr_province_flag = ibe_3
		clr_province_flag = ibe_option_1
		clr_province_flag = ibe_option_2
		clr_province_flag = ibe_option_3
	}
}

# Verkal Dromak
verkal_dromak_kill_mages = {
	# 1 is at the bottom
	if = {
		limit = { has_country_modifier = I25_kill_mages_1 }
		remove_country_modifier = I25_kill_mages_1
		add_country_modifier = {
			name = I25_kill_mages_2
			duration = 730
		}
	}
	else_if = {
		limit = { has_country_modifier = I25_kill_mages_2 }
		remove_country_modifier = I25_kill_mages_2
		add_country_modifier = {
			name = I25_kill_mages_3
			duration = 730
		}
	}
	else_if = {
		limit = { has_country_modifier = I25_kill_mages_3	}
		remove_country_modifier = I25_kill_mages_3
		add_country_modifier = {
			name = I25_kill_mages_4
			duration = 730
		}
	}
	else_if = {
		limit = { has_country_modifier = I25_kill_mages_4	}
		remove_country_modifier = I25_kill_mages_4
		add_country_modifier = {
			name = I25_kill_mages_5
			duration = 730
		}
	}
	else_if = {
		limit = { has_country_modifier = I25_kill_mages_5	}
		remove_country_modifier = I25_kill_mages_5
		add_country_modifier = {
			name = I25_kill_mages_6
			duration = 730
		}
	}
	else_if = {
		limit = { has_country_modifier = I25_kill_mages_6	}
		remove_country_modifier = I25_kill_mages_6
		add_country_modifier = {
			name = I25_kill_mages_7
			duration = 730
		}
	}
	else_if = {
		limit = { has_country_modifier = I25_kill_mages_7	}
		remove_country_modifier = I25_kill_mages_7
		add_country_modifier = {
			name = I25_kill_mages_8
			duration = 730
		}
	}
	else_if = {
		limit = { has_country_modifier = I25_kill_mages_8	}
		remove_country_modifier = I25_kill_mages_8
		add_country_modifier = {
			name = I25_kill_mages_9
			duration = 730
		}
	}
	else_if = {
		limit = { has_country_modifier = I25_kill_mages_9	}
		remove_country_modifier = I25_kill_mages_9
		add_country_modifier = {
			name = I25_kill_mages_10
			duration = 730
		}
	}
	else = {
		add_country_modifier = {
			name = I25_kill_mages_1
			duration = 730
		}
	}
}

teleport_units_in_province1_to_province2_from_for_cost = {
	$province1$ = {
		while = {
			limit = { infantry_in_province = ROOT } 
			kill_units = {
				who = owner
				type = infantry
				amount = 1
			}
			$province2$ = {spawn_units_for = { type = infantry who = ROOT amount = 1 }}
			$from$ = {
				add_treasury = $cost$
			}
		}
		while = {
			limit = { cavalry_in_province = ROOT } 
			kill_units = {
				who = owner
				type = cavalry
				amount = 1
			}
			$province2$ = {spawn_units_for = { type = cavalry who = ROOT amount = 1 }}
			$from$ = {
				add_treasury = $cost$
			}
		}
		while = {
			limit = { artillery_in_province = ROOT } 
			kill_units = {
				who = owner
				type = artillery
				amount = 1
			}
			$province2$ = {spawn_units_for = { type = artillery who = ROOT amount = 1 }}
			$from$ = {
				add_treasury = $cost$
			}
		}
	}
}

rianvisa_end_modifier = {
	if = {
		limit = { NOT = { has_country_flag = aelthanas_revolted } }
		add_country_modifier = {
			name = rianvisa_aelthanas_appeased
			duration = -1
		}
	}
	if = {
		limit = { NOT = { has_country_flag = dahvar_revolted } }
		add_country_modifier = {
			name = rianvisa_dahvar_appeased
			duration = -1
		}
	}
	if = {
		limit = { NOT = { has_country_flag = sicrheior_revolted } }
		add_country_modifier = {
			name = rianvisa_sicrheior_appeased
			duration = -1
		}
	}
	if = {
		limit = { NOT = { has_country_flag = kayd_revolted } }
		add_country_modifier = {
			name = rianvisa_kayd_appeased
			duration = -1
		}
	}
}


add_prestige_excess_to_splendour_effect = {
	if = { limit = { has_dlc = "Mandate of Heaven" }
		tooltip = { add_prestige = $VAL$ }
		custom_tooltip = add_prestige_excess_to_splendour_effect_tt
		hidden_effect = {
			change_variable = {
				which = left_to_convert
				value = $VAL$
			}
			while = {
				limit = {
					check_variable = {
						which = left_to_convert
						value = 1
					}
				}
	
				if = {
					limit = { prestige = 100 }
					add_splendor = 10
				}
				else = { add_prestige = 1 }
	
				subtract_variable = {
					which = left_to_convert
					value = 1
				}
			}
		}
	}
	else = {
		add_prestige = $VAL$
	}
}
castanor_succession_war_update_legitimacy_modifiers = {
	if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 8
				}
			}
		}
		B32 = {
			add_disaster_modifier = {
				name = castanor_succession_war_most_favored
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
		}
		B61 = {
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_most_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { TAG = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				add_province_modifier = {
					name = castanor_fortress_castonath_solid
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else_if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 6
				}
			}
		}
		B32 = {
			add_disaster_modifier = {
				name = castanor_succession_war_favored
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_even
		}
		B61 = {
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { TAG = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_sturdy
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else_if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 5
				}
			}
		}
		B32 = {
			add_disaster_modifier = {
				name = castanor_succession_war_even
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
		}
		B61 = {
			add_disaster_modifier = {
				name = castanor_succession_war_even
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_most_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { TAG = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_sturdy
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else_if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 4
				}
			}
		}
		B32 = {
			add_disaster_modifier = {
				name = castanor_succession_war_even
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
		}
		B61 = {
			add_disaster_modifier = {
				name = castanor_succession_war_even
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_even
		}
		castonath_area = {
			if = {
				limit = { controller = { TAG = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_impenetrable
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else_if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 2
				}
			}
		}
		B32 = {
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
		}
		B61 = {
			add_disaster_modifier = {
				name = castanor_succession_war_favored
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_most_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { TAG = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_impenetrable
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else = {
		B32 = {
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
		}
		B61 = {
			add_disaster_modifier = {
				name = castanor_succession_war_most_favored
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { TAG = B61 } }
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_indestructible
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
}
castanor_succession_war_shift_momentum_siege = {
	if = {
		limit = {
			ROOT = { TAG = B61 }
			FROM = { owner = { TAG = B32 } }
		}
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = -0.2
			}
		}
		add_treasury = 10
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_increase_castan_legitimacy_small = {
	custom_tooltip = increaseCastanLegitimacySmall
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = 0.5
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_increase_castan_legitimacy_moderate = {
	custom_tooltip = increaseCastanLegitimacyModerate
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = 1
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_increase_castan_legitimacy_massive = {
	custom_tooltip = increaseCastanLegitimacyMassive
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = 3
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_decrease_castan_legitimacy_small = {
	custom_tooltip = decreaseCastanLegitimacySmall
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = -0.5
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_decrease_castan_legitimacy_moderate = {
	custom_tooltip = decreaseCastanLegitimacyModerate
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = -1
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_decrease_castan_legitimacy_massive = {
	custom_tooltip = decreaseCastanLegitimacyMassive
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = -3
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_build_legionway_with_hired_legion = {
	if = {
		limit = {
			event_target:$event_target$ = {
				location = {
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					NOT = { province_group = golden_highway_bulwar_proper }
					NOT = { province_group = golden_highway_far_bulwar }
					NOT = { province_group = golden_highway_dhujat }
					NOT = { province_group = golden_highway_far_salahad }
					NOT = { province_group = golden_highway_lower_yanshen }
					NOT = { province_group = golden_highway_rahen_coast }
					NOT = { province_group = golden_highway_upper_yanshen }
					NOT = { province_group = golden_highway_xianjie }
					NOT = { province_group = triunic_road }
					NOT = { province_group = road_province }
				}
			}
		}
		custom_tooltip = not_has_legionway_tt
	}
	else = { custom_tooltip = has_legionway_tt }
	if = {
		limit = {
			event_target:$event_target$ = {
				location = {
					any_neighbor_province = {
						OR = {
							has_province_modifier = castanor_legionway
							has_province_modifier = castanor_building_legionway_survey
							has_province_modifier = castanor_building_legionway_construction
							AND = {
								OR = {
									has_province_modifier = federation_triunic_road
									has_province_modifier = golden_highway
								}
								any_neighbor_province = { has_province_modifier = castanor_legionway }
							}
						}
					}
				}
			}
		}
		custom_tooltip = neighbor_has_legionway_tt
	}
	else = { custom_tooltip = not_neighbor_has_legionway_tt }
	if = {
		limit = {
			event_target:$event_target$ = {
				location = { country_or_non_sovereign_subject_holds = ROOT }
			}
		}
		custom_tooltip = owned_by_us_tt
	}
	else = { custom_tooltip = not_owned_by_us_tt }
}


chess_tournament_get_participants = {
	set_country_flag = chess_tournament_participant
	set_country_flag = chess_tournament_original_participant
	set_country_flag = chess_tournament_got_invitation

	set_variable = {
		which = tmp_var
		value = 15
	}
	while = {
		limit = { 
			check_variable = {
				which = tmp_var
				value = 1
			}
		}

		change_variable = {
			which = tmp_var
			value = -1
		}

		random_known_country = {
			limit = {
				capital_scope = { continent = europe }
				NOT = {
					has_country_flag = chess_tournament_got_invitation
				}
				NOT = { has_country_modifier = monstrous_nation }
			}
			# ask for participation
			set_country_flag = chess_tournament_got_invitation
			country_event = {
				id = flavor_toarnen.29
				days = 1
			}
		}
	}
}

chess_tournament_create_pairs = {

	set_variable = {
		which = tmp_var
		value = 16
	}

	# random_country doesn't include ROOT?
	if = {
		limit = {
			has_country_flag = chess_tournament_participant
		}

		change_variable = {
			which = tmp_var
			value = -1
		}

		set_country_flag = chess_tournament_assigned
		set_country_flag = chess_tournament_pair_1
	}


	while = {
		limit = { 
			check_variable = {
				which = tmp_var
				value = 0
			}
		}

		change_variable = {
			which = tmp_var
			value = -1
		}

		random_country = {
			limit = {
				has_country_flag = chess_tournament_participant
				NOT = {
					has_country_flag = chess_tournament_assigned
				}
			}
			set_country_flag = chess_tournament_assigned
			if = {
				limit = {
					ROOT = {
						check_variable = {
							which = tmp_var
							value = 14
						}
					}
				}
				set_country_flag = chess_tournament_pair_1
			}
			else_if = {
				limit = {
					ROOT = {
						check_variable = {
							which = tmp_var
							value = 12
						}
					}
				}
				set_country_flag = chess_tournament_pair_2
			}
			else_if = {
				limit = {
					ROOT = {
						check_variable = {
							which = tmp_var
							value = 10
						}
					}
				}
				set_country_flag = chess_tournament_pair_3
			}
			else_if = {
				limit = {
					ROOT = {
						check_variable = {
							which = tmp_var
							value = 8
						}
					}
				}
				set_country_flag = chess_tournament_pair_4
			}
			else_if = {
				limit = {
					ROOT = {
						check_variable = {
							which = tmp_var
							value = 6
						}
					}
				}
				set_country_flag = chess_tournament_pair_5
			}
			else_if = {
				limit = {
					ROOT = {
						check_variable = {
							which = tmp_var
							value = 4
						}
					}
				}
				set_country_flag = chess_tournament_pair_6
			}
			else_if = {
				limit = {
					ROOT = {
						check_variable = {
							which = tmp_var
							value = 2
						}
					}
				}
				set_country_flag = chess_tournament_pair_7
			}
			else_if = {
				limit = {
					ROOT = {
						check_variable = {
							which = tmp_var
							value = 0
						}
					}
				}
				set_country_flag = chess_tournament_pair_8
			}
		}
	}
}

chess_tournament_get_your_pair = {
	if = {
		limit = {
			has_country_flag = chess_tournament_pair_1
		}
		random_country = {
			limit = {
				NOT = {
					tag = ROOT
				}
				has_country_flag = chess_tournament_pair_1
			}
			save_event_target_as = tournament_pair
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_pair_2
		}
		random_country = {
			limit = {
				NOT = {
					tag = ROOT
				}
				has_country_flag = chess_tournament_pair_2
			}
			save_event_target_as = tournament_pair
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_pair_3
		}
		random_country = {
			limit = {
				NOT = {
					tag = ROOT
				}
				has_country_flag = chess_tournament_pair_3
			}
			save_event_target_as = tournament_pair
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_pair_4
		}
		random_country = {
			limit = {
				NOT = {
					tag = ROOT
				}
				has_country_flag = chess_tournament_pair_4
			}
			save_event_target_as = tournament_pair
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_pair_5
		}
		random_country = {
			limit = {
				NOT = {
					tag = ROOT
				}
				has_country_flag = chess_tournament_pair_5
			}
			save_event_target_as = tournament_pair
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_pair_6
		}
		random_country = {
			limit = {
				NOT = {
					tag = ROOT
				}
				has_country_flag = chess_tournament_pair_6
			}
			save_event_target_as = tournament_pair
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_pair_7
		}
		random_country = {
			limit = {
				NOT = {
					tag = ROOT
				}
				has_country_flag = chess_tournament_pair_7
			}
			save_event_target_as = tournament_pair
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_pair_8
		}
		random_country = {
			limit = {
				NOT = {
					tag = ROOT
				}
				has_country_flag = chess_tournament_pair_8
			}
			save_event_target_as = tournament_pair
		}
	}
}


chess_tournament_get_winner = {
	if = {
		limit = {
			has_country_flag = chess_tournament_adm_move
		}
		export_to_variable = {
			which = chess_tournament_points 
			value = ADM
			who = ROOT
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_dip_move
		}
		export_to_variable = {
			which = chess_tournament_points 
			value = DIP
			who = ROOT
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_mil_move
		}
		export_to_variable = {
			which = chess_tournament_points 
			value = MIL
			who = ROOT
		}
	}
	event_target:tournament_pair = {
		if = {
			limit = {
				has_country_flag = chess_tournament_adm_move
			}
			ROOT = {
				export_to_variable = {
					which = chess_tournament_points_op 
					value = ADM
					who = event_target:tournament_pair
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = chess_tournament_dip_move
			}
			ROOT = {
				export_to_variable = {
					which = chess_tournament_points_op 
					value = DIP
					who = event_target:tournament_pair
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = chess_tournament_mil_move
			}
			ROOT = {
				export_to_variable = {
					which = chess_tournament_points_op 
					value = MIL
					who = event_target:tournament_pair
				}
			}
		}
	}

	subtract_variable = {
		which = chess_tournament_points
		which = chess_tournament_points_op
	}

	if = {
		limit = {
			has_country_flag = chess_tournament_adm_move
		}
		if = {
			limit = {
				event_target:tournament_pair = {
					has_country_flag = chess_tournament_dip_move
				}
			}
			change_variable = {
				which = chess_tournament_points
				value = -2
			}
		}
		if = {
			limit = {
				event_target:tournament_pair = {
					has_country_flag = chess_tournament_mil_move
				}
			}
			change_variable = {
				which = chess_tournament_points
				value = 2
			}
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_dip_move
		}
		if = {
			limit = {
				event_target:tournament_pair = {
					has_country_flag = chess_tournament_mil_move
				}
			}
			change_variable = {
				which = chess_tournament_points
				value = -2
			}
		}
		if = {
			limit = {
				event_target:tournament_pair = {
					has_country_flag = chess_tournament_adm_move
				}
			}
			change_variable = {
				which = chess_tournament_points
				value = 2
			}
		}
	}
	else_if = {
		limit = {
			has_country_flag = chess_tournament_mil_move
		}
		if = {
			limit = {
				event_target:tournament_pair = {
					has_country_flag = chess_tournament_adm_move
				}
			}
			change_variable = {
				which = chess_tournament_points
				value = -2
			}
		}
		if = {
			limit = {
				event_target:tournament_pair = {
					has_country_flag = chess_tournament_dip_move
				}
			}
			change_variable = {
				which = chess_tournament_points
				value = 2
			}
		}
	}
	random_list = {
		50 = {
			set_country_flag = draw_winner
			event_target:tournament_pair = {
				set_country_flag = draw_loser
			}
		}
		50 = {
			set_country_flag = draw_loser
			event_target:tournament_pair = {
				set_country_flag = draw_winner
			}
		}
	}
	if = {
		limit = {
			OR = {
				check_variable = {
					which = chess_tournament_points
					value = 1
				}
				AND = {
					check_variable = {
						which = chess_tournament_points
						value = 0
					}
					has_country_flag = draw_winner
				}
			}
		}
		set_country_flag = chess_tournament_round_winner
		event_target:tournament_pair = {
			set_country_flag = chess_tournament_round_loser
		}
	}
	else = {
		set_country_flag = chess_tournament_round_loser
		event_target:tournament_pair = {
			set_country_flag = chess_tournament_round_winner
		}
	}
}

chess_tournament_clear_flags = {
	clr_country_flag = chess_tournament_participant
	clr_country_flag = chess_tournament_round_loser
	clr_country_flag = chess_tournament_adm_move
	clr_country_flag = chess_tournament_dip_move
	clr_country_flag = chess_tournament_mil_move
	clr_country_flag = chess_tournament_assigned
	clr_country_flag = chess_tournament_pair_1
	clr_country_flag = chess_tournament_pair_2
	clr_country_flag = chess_tournament_pair_3
	clr_country_flag = chess_tournament_pair_4
	clr_country_flag = chess_tournament_pair_5
	clr_country_flag = chess_tournament_pair_6
	clr_country_flag = chess_tournament_pair_7
	clr_country_flag = chess_tournament_pair_8
}

venerator_province_triggers = {
	custom_tooltip = venerator_province_triggers_added
	if = {
		limit = {
			owner = { NOT = { any_owned_province = { has_province_modifier = venerator_purging_greens } } }
		}
		add_province_triggered_modifier = venerator_purging_greens
	}
	if = {
		limit = {
			owner = { NOT = { any_owned_province = { has_province_modifier = venerator_crusade } } }
		}
		add_province_triggered_modifier = venerator_crusade
	}
	if = {
		limit = {
			owner = { NOT = { any_owned_province = { has_province_modifier = venerator_blessed } } }
		}
		add_province_triggered_modifier = venerator_blessed
	}
	if = {
		limit = {
			owner = { NOT = { any_owned_province = { has_province_modifier = venerator_greenless } } }
		}
		add_province_triggered_modifier = venerator_greenless
	}
	if = {
		limit = {
			owner = {
				tag = I05
				NOT = { any_owned_province = { has_province_modifier = venerator_mithradhum_dishonorable } } 
			}
		}
		custom_tooltip = venerator_hold_oaths
		add_province_triggered_modifier = venerator_mithradhum_dishonorable
	}
}

clear_strongholds = {
	remove_province_modifier = crown_stronghold
	remove_province_modifier = magnate_stronghold
}

add_crown_stronghold = {
	add_province_modifier = {
		name = crown_stronghold
		duration = -1
	}
	if = { 
		limit = { NOT = { fort_level = 1 } }
		add_fort_ut_to_16th = yes
		add_province_modifier = {
			name = temporary_fortifications
			duration = -1
		}
	}
	spawn_rebels = {
		type = noble_rebels
		size = 2
		win = yes
	}
}

add_magnate_stronghold = {
	add_province_modifier = {
		name = magnate_stronghold
		duration = -1
	}
	if = { 
		limit = { NOT = { fort_level = 1 } }
		add_fort_ut_to_16th = yes
		add_province_modifier = {
			name = temporary_fortifications
			duration = -1
		}
	}
	spawn_rebels = {
		type = magnate_rebels
		size = 2
		win = yes
	}
}

add_hostile_stronghold = {
	if = {
		limit = { owner = { has_country_flag = chose_crown } }
		add_magnate_stronghold = yes
	}
	else_if = {
		limit = { owner = { has_country_flag = chose_magnates } }
		add_crown_stronghold = yes
	}
}

setup_magnates_magnate_side = {
	custom_tooltip = magnate_uprising_magnates_setup_tt
	hidden_effect = {
		every_owned_province = {
			random_list = {
				85 = {}
				13 = { 
					# From Estate Influence
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 40
							}
						}
						factor = 0.95 #14.25
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 50
							}
						}
						factor = 0.95 #13.53
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 60
							}
						}
						factor = 0.95 #12.8
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 70
							}
						}
						factor = 0.95 #12.2
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 80
							}
						}
						factor = 0.95 #11.6
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 90
							}
						}
						factor = 0.95 #11.0
					}
					modifier = {
						# AI is very bad at dealing with these in a timely manner
						owner = {
							ai = yes
						}
						factor = 0.5
					}
					# None in the capital thanks
					modifier = {
						is_capital = yes
						factor = 0
					}
					# None overseas
					modifier = {
						NOT = { is_in_capital_area = yes }
						factor = 0
					}
					add_crown_stronghold = yes
				}
			}
		}
		# Get at least 3
		random_owned_province = {
			limit = { NOT = { has_hostile_stronghold = yes } }
			add_crown_stronghold = yes
		}
		random_owned_province = {
			limit = { NOT = { has_hostile_stronghold = yes } }
			add_crown_stronghold = yes
		}
		random_owned_province = {
			limit = { NOT = { has_hostile_stronghold = yes } }
			add_crown_stronghold = yes
		}
	}
}

setup_magnates_crown_side = {
	custom_tooltip = magnate_uprising_crown_setup_tt
	hidden_effect = {
		every_owned_province = {
			random_list = {
				88 = {}
				11 = { 
					# From Estate Influence
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 40
							}
						}
						factor = 1.04 #12.48
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 50
							}
						}
						factor = 1.04 #12.97
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 60
							}
						}
						factor = 1.04 #13.49
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 70
							}
						}
						factor = 1.04 #14.03
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 80
							}
						}
						factor = 1.04 #14.59
					}
					modifier = {
						owner = {
							estate_influence = {
								who = estate_burghers
								value = 90
							}
						}
						factor = 1.04 #15.18
					}
					modifier = {
						# AI is very bad at dealing with these in a timely manner
						owner = {
							ai = yes
						}
						factor = 0.75
					}
					# None in the capital thanks
					modifier = {
						is_capital = yes
						factor = 0
					}
					# None overseas
					modifier = {
						NOT = { is_in_capital_area = yes }
						factor = 0
					}
					add_magnate_stronghold = yes
				}
			}
		}
		# Get at least 3
		random_owned_province = {
			limit = { NOT = { has_hostile_stronghold = yes } }
			add_magnate_stronghold = yes
		}
		random_owned_province = {
			limit = { NOT = { has_hostile_stronghold = yes } }
			add_magnate_stronghold = yes
		}
		random_owned_province = {
			limit = { NOT = { has_hostile_stronghold = yes } }
			add_magnate_stronghold = yes
		}
	}
}

spawn_magnate_uprising_rebels_small = {
	if = {
		limit = { owner = { has_country_flag = chose_crown } }
		spawn_rebels = {
			type = magnate_rebels
			size = 1
		}
	}
	else_if = {
		limit = { owner = { has_country_flag = chose_magnates } }
		spawn_rebels = {
			type = noble_rebels
			size = 1
		}
	}
}

spawn_magnate_uprising_rebels_medium = {
	if = {
		limit = { owner = { has_country_flag = chose_crown } }
		spawn_rebels = {
			type = magnate_rebels
			size = 2
		}
	}
	else_if = {
		limit = { owner = { has_country_flag = chose_magnates } }
		spawn_rebels = {
			type = noble_rebels
			size = 2
		}
	}
}

magnate_uprising_siege_won_effects = {
	clear_strongholds = yes
	if = {
		limit = { has_province_modifier = temporary_fortifications }
		remove_fortifications = yes
		remove_province_modifier = temporary_fortifications
	}
}

add_fort_ut_to_16th = {
	if = {
		limit = { owner = { mil_tech = 14 } }
		add_building = fort_16th
	}
	else = {
		add_building = fort_15th
	}
}

remove_fortifications = {
	remove_building = fort_15th
	remove_building = fort_16th
	remove_building = fort_17th
	remove_building = fort_18th
}

xhazobkult_define_sanguine_ritual_pool = {
	random_owned_province = {
		limit = { is_city = yes NOT = { religion = xhazobkult } development = 4 NOT = { has_province_modifier = xhazobkult_sanguine_ritual_pool } NOT = { has_province_flag = sanguine_ritual_@ROOT } }
		set_province_flag = sanguine_ritual_@ROOT
		save_event_target_as = sanguine_ritual1
	}
	random_owned_province = {
		limit = { is_city = yes NOT = { religion = xhazobkult } development = 4 NOT = { has_province_modifier = xhazobkult_sanguine_ritual_pool } NOT = { has_province_flag = sanguine_ritual_@ROOT } }
		set_province_flag = sanguine_ritual_@ROOT
		save_event_target_as = sanguine_ritual2
	}
	random_owned_province = {
		limit = { is_city = yes NOT = { religion = xhazobkult } development = 4 NOT = { has_province_modifier = xhazobkult_sanguine_ritual_pool } NOT = { has_province_flag = sanguine_ritual_@ROOT } }
		set_province_flag = sanguine_ritual_@ROOT
		save_event_target_as = sanguine_ritual3
	}
	random_owned_province = {
		limit = { is_city = yes NOT = { religion = xhazobkult } development = 4 NOT = { has_province_modifier = xhazobkult_sanguine_ritual_pool } NOT = { has_province_flag = sanguine_ritual_@ROOT } }
		set_province_flag = sanguine_ritual_@ROOT
		save_event_target_as = sanguine_ritual4
	}
}

xhazobkult_sanguine_ritual_sacrifice = {
	custom_tooltip = xhazobkult_sanguine_ritual_sacrifice_tt
	hidden_effect = {
		set_variable = {
			which = xhazobkult_sanguine_ritual_counter
			value = 10
		}
		every_owned_province = {
			limit = { has_state_patriach = yes }
			ROOT = {
				change_variable = {
					which = xhazobkult_sanguine_ritual_counter
					value = 0.2
				}
			}
		}
		while = {
			limit = {
				any_owned_province = { has_province_modifier = xhazobkult_sanguine_ritual_pool development = 4 }
				check_variable = {
					which = xhazobkult_sanguine_ritual_counter
					value = 1
				}
			}
			random_owned_province = {
				limit = { has_province_modifier = xhazobkult_sanguine_ritual_pool development = 4 }
				random_list = {
					1 = {
						trigger = { base_tax = 2 }
						add_base_tax = -1
					}
					1 = {
						trigger = { base_production = 2 }
						add_base_production = -1
					}
					1 = {
						trigger = { base_manpower = 2 }
						add_base_manpower = -1
					}
				}
				add_devastation = 10
			}
			add_patriarch_authority = 0.01
			change_variable = {
				which = xhazobkult_sanguine_ritual_counter
				value = -1
			}
		}
	}
}

xhazobkult_set_appropriate_modifier = {
	if = { 
		limit = { owner = { religion = xhazobkult } }
		if = {
			limit = { culture_group = gnollish }
			add_province_modifier = {
				name = xhazobkult_gnollish_province
				duration = -1
			}
		}
		if = {
			limit = { NOT = { culture_group = gnollish } }
			add_province_modifier = {
				name = xhazobkult_non_gnollish_province
				duration = -1
			}
			if = {
				limit = { owner = { has_country_flag = xhazobkult_privilege_the_weak_serve_the_strong_flag } }
				if = {
					limit = { NOT = { religion = xhazobkult } }
					add_province_modifier = {
						name = xhazobkult_slave_estate
						duration = -1
					}
				}
			}
		}
	}
}

xhazobkult_calc_tributary_proportion = {
	if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 1
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_10
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.9
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_9
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.8
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_8
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.7
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_7
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.6
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_6
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.5
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_5
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.4
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_4
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.3
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_3
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.2
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_2
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { #total development of every tributary subject / current subject => 1
			check_variable = {
				which = tributary_dev_proportion
				value = 0.1
			}
		}
		add_country_modifier = {
			name = xhazobkult_tributaries_1
			duration = -1
			hidden = yes
		}
	}
}

xhazobkult_privilege_the_weak_serve_the_strong_effect = {
	remove_country_modifier = xhazobkult_tolerance_adjustment_05
	remove_country_modifier = xhazobkult_tolerance_adjustment_10
	remove_country_modifier = xhazobkult_tolerance_adjustment_15
	remove_country_modifier = xhazobkult_tolerance_adjustment_20
	remove_country_modifier = xhazobkult_tolerance_adjustment_25
	remove_country_modifier = xhazobkult_tolerance_adjustment_30
	remove_country_modifier = xhazobkult_tolerance_adjustment_35
	remove_country_modifier = xhazobkult_tolerance_adjustment_40
	remove_country_modifier = xhazobkult_tolerance_adjustment_45
	remove_country_modifier = xhazobkult_tolerance_adjustment_50
	remove_country_modifier = xhazobkult_tolerance_adjustment_55
	remove_country_modifier = xhazobkult_tolerance_adjustment_60
	remove_country_modifier = xhazobkult_tolerance_adjustment_65
	remove_country_modifier = xhazobkult_tolerance_adjustment_70
	remove_country_modifier = xhazobkult_tolerance_adjustment_75
	remove_country_modifier = xhazobkult_tolerance_adjustment_80
	remove_country_modifier = xhazobkult_tolerance_adjustment_85
	remove_country_modifier = xhazobkult_tolerance_adjustment_90
	remove_country_modifier = xhazobkult_tolerance_adjustment_95
	remove_country_modifier = xhazobkult_tolerance_adjustment_00
	if = {
		limit = { has_country_flag = xhazobkult_privilege_the_weak_serve_the_strong_flag }
		if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 7 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_00 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 6.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_95 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 6 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_90 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 5.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_85 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_80 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 4.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_75 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 4 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_70 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 3.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_65 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 3 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_60 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 2.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_55 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 2 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_50 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 1.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_45 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 1 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_40 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 0.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_35 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = 0 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_30 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = -0.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_25 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = -1 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_20 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = -1.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_15 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = -2 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_10 duration = -1 }
		}
		else_if = {
			limit = { has_global_modifier_value = { which = tolerance_heathen value = -2.5 } }
			add_country_modifier = { name = xhazobkult_tolerance_adjustment_05 duration = -1 }
		}
	}
}


#Roadwarrior upgrades -- If Prices are changed here make sure to also update them in Scripted Effects
# Effects shared between all upgrades
roadwarrior_upgrade_effect = {
	# if = {
	# 	limit = { 
	# 		capital_scope = {
	# 			OR = {
	# 				has_terrain = dwarven_hold
	# 				has_terrain = dwarven_hold_surface
	# 			}
	# 		}
	# 	}
	add_country_modifier = {
		name = roadwarrior_upgrading
		duration = -1
	}
	country_event = { id = roadwarrior.5 days = 180 }
	# }
	# else = {
	# 	add_country_modifier = {
	# 		name = roadwarrior_upgrading
	# 		duration = 365
	# 	}
	# 	hidden_effect = { country_event = { id = roadwarrior.5 days = 365 } }
	# }
}

roadwarrior_upgrade_main = {
	set_country_flag = roadwarrior_upgrading_main
	if = {
		limit = {
			has_country_modifier = roadwarrior_main_1
		}
		add_treasury = -250
		add_adm_power = -100
		add_dip_power = -100
		add_mil_power = -100
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_main_2
		}
		add_treasury = -500
		add_adm_power = -200
		add_dip_power = -200
		add_mil_power = -200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_main_3
		}
		add_treasury = -1000
		add_adm_power = -300
		add_dip_power = -300
		add_mil_power = -300
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_fighter = {
	set_country_flag = roadwarrior_upgrading_fighter
	if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_1
		}
		add_treasury = -50
		add_mil_power = -50
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_2
		}
		add_treasury = -100
		add_mil_power = -100
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_3
		}
		add_treasury = -200
		add_mil_power = -200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_4
		}
		add_treasury = -500
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_5
		}
		add_treasury = -1000
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_6
		}
		add_treasury = -1500
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_7
		}
		add_treasury = -2000
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_8
		}
		add_treasury = -3000
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_9
		}
		add_treasury = -5000
		add_mil_power = -300
	}
	else = {
		add_treasury = -50
		add_mil_power = -10
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_looter = {
	set_country_flag = roadwarrior_upgrading_looter
	if = {
		limit = { has_country_modifier = roadwarrior_tax_1 }
		add_treasury = -100
		add_dip_power = -50
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_2 }
		add_treasury = -200
		add_dip_power = -100
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_3 }
		add_treasury = -500
		add_dip_power = -200
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_4 }
		add_treasury = -1000
		add_dip_power = -300
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_5 }
		add_treasury = -2000
		add_dip_power = -400
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_6 }
		add_treasury = -5000
		add_dip_power = -500
	}
	else = {
		add_treasury = -50
		add_dip_power = -10
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_builder = {
	set_country_flag = roadwarrior_upgrading_builder
	if = {
		limit = { has_country_modifier = roadwarrior_builder_1 }
		add_treasury = -100
		add_adm_power = -50
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_2 }
		add_treasury = -200
		add_adm_power = -100
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_3 }
		add_treasury = -500
		add_adm_power = -200
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_4 }
		add_treasury = -1000
		add_adm_power = -300
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_5 }
		add_treasury = -2000
		add_adm_power = -400
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_6 }
		add_treasury = -5000
		add_adm_power = -500
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_7 }
		add_treasury = -10000
		add_adm_power = -500
	}
	else = {
		add_treasury = -50
		add_adm_power = -10
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_living = {
	set_country_flag = roadwarrior_upgrading_living
	if = {
		limit = {
			has_country_modifier = roadwarrior_living_1
		}
		add_treasury = -50
		add_mil_power = -50
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_2
		}
		add_treasury = -100
		add_mil_power = -100
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_3
		}
		add_treasury = -200
		add_mil_power = -200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_4
		}
		add_treasury = -500
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_5
		}
		add_treasury = -1000
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_6
		}
		add_treasury = -1500
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_7
		}
		add_treasury = -2000
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_8
		}
		add_treasury = -5000
		add_mil_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_9
		}
		add_treasury = -10000
		add_mil_power = -300
	}
	else = {
		add_treasury = -50
		add_mil_power = -10
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_training = {
	set_country_flag = roadwarrior_upgrading_training
	if = {
		limit = {
			has_country_modifier = roadwarrior_training_1
		}
		add_treasury = -500
		add_adm_power = -200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_2
		}
		add_treasury = -1000
		add_adm_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_3
		}
		add_treasury = -2000
		add_adm_power = -400
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_4
		}
		add_treasury = -5000
		add_adm_power = -500
	}
	else = {
		add_treasury = -100
		add_adm_power = -100
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_portable_arena = {
	set_country_flag = roadwarrior_upgrading_portable_arena
	if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_1
		}
		add_treasury = -500
		add_dip_power = -200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_2
		}
		add_treasury = -1000
		add_dip_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_3
		}
		add_treasury = -2000
		add_dip_power = -400
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_4
		}
		add_treasury = -5000
		add_dip_power = -500
	}
	else = {
		add_treasury = -100
		add_dip_power = -100
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_smashers = {
	set_country_flag = roadwarrior_upgrading_smashers
	if = {
		limit = { has_country_modifier = roadwarrior_breaker_1 }
		add_treasury = -100
		add_adm_power = -50
		add_mil_power = -50
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_2 }
		add_treasury = -200
		add_adm_power = -100
		add_mil_power = -100
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_3 }
		add_treasury = -500
		add_adm_power = -200
		add_mil_power = -200
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_4 }
		add_treasury = -1000
		add_adm_power = -300
		add_mil_power = -300
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_5 }
		add_treasury = -2000
		add_adm_power = -400
		add_mil_power = -400
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_6 }
		add_treasury = -5000
		add_adm_power = -500
		add_mil_power = -500
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_7 }
		add_treasury = -10000
		add_adm_power = -500
		add_mil_power = -500
	}
	else = {
		add_treasury = -50
		add_adm_power = -10
		add_mil_power = -10
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_thinkers = {
	set_country_flag = roadwarrior_upgrading_thinkers
	if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_1
		}
		add_treasury = -100
		add_dip_power = -200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_2
		}
		add_treasury = -500
		add_dip_power = -300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_3
		}
		add_treasury = -1000
		add_dip_power = -400
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_4
		}
		add_treasury = -2000
		add_dip_power = -500
	}
	else = {
		add_treasury = -50
		add_dip_power = -100
	}
	roadwarrior_upgrade_effect = yes
}

roadwarrior_upgrade_main_done = {
	clr_country_flag = roadwarrior_upgrading_main
	if = {
		limit = {
			has_country_modifier = roadwarrior_main_1
		}
		add_country_modifier = {
			name = roadwarrior_main_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_main_1 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_main_2
		}
		add_country_modifier = {
			name = roadwarrior_main_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_main_2 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_main_3
		}
		add_country_modifier = {
			name = roadwarrior_main_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_main_3 }
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_upgrade_fighter_done = {
	clr_country_flag = roadwarrior_upgrading_fighter
	if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_1
		}
		add_country_modifier = {
			name = roadwarrior_fighter_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_1 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_2
		}
		add_country_modifier = {
			name = roadwarrior_fighter_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_2 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_3
		}
		add_country_modifier = {
			name = roadwarrior_fighter_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_3 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_4
		}
		add_country_modifier = {
			name = roadwarrior_fighter_5
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_4 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_5
		}
		add_country_modifier = {
			name = roadwarrior_fighter_6
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_5 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_6
		}
		add_country_modifier = {
			name = roadwarrior_fighter_7
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_6 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_7
		}
		add_country_modifier = {
			name = roadwarrior_fighter_8
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_7 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_8
		}
		add_country_modifier = {
			name = roadwarrior_fighter_9
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_8 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_9
		}
		add_country_modifier = {
			name = roadwarrior_fighter_10
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_fighter_9 }
	}
	else = {
		add_country_modifier = {
			name = roadwarrior_fighter_1
			duration = -1
		}
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_upgrade_looter_done = {
	clr_country_flag = roadwarrior_upgrading_looter
	if = {
		limit = { has_country_modifier = roadwarrior_tax_1 }
		add_country_modifier = {
			name = roadwarrior_tax_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_tax_1 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_2 }
		add_country_modifier = {
			name = roadwarrior_tax_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_tax_2 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_3 }
		add_country_modifier = {
			name = roadwarrior_tax_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_tax_3 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_4 }
		add_country_modifier = {
			name = roadwarrior_tax_5
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_tax_4 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_5 }
		add_country_modifier = {
			name = roadwarrior_tax_6
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_tax_5 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_6 }
		add_country_modifier = {
			name = roadwarrior_tax_7
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_tax_6 }
	}
	else = {
		add_country_modifier = {
			name = roadwarrior_tax_1
			duration = -1
		}
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_upgrade_builder_done = {
	clr_country_flag = roadwarrior_upgrading_builder
	if = {
		limit = { has_country_modifier = roadwarrior_builder_1 }
		add_country_modifier = {
			name = roadwarrior_builder_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_builder_1 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_2 }
		add_country_modifier = {
			name = roadwarrior_builder_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_builder_2 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_3 }
		add_country_modifier = {
			name = roadwarrior_builder_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_builder_3 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_4 }
		add_country_modifier = {
			name = roadwarrior_builder_5
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_builder_4 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_5 }
		add_country_modifier = {
			name = roadwarrior_builder_6
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_builder_5 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_6 }
		add_country_modifier = {
			name = roadwarrior_builder_7
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_builder_6 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_7 }
		add_country_modifier = {
			name = roadwarrior_builder_8
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_builder_7 }
	}
	else = {
		add_country_modifier = {
			name = roadwarrior_builder_1
			duration = -1
		}
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_upgrade_living_done = {
	clr_country_flag = roadwarrior_upgrading_living
	if = {
		limit = {
			has_country_modifier = roadwarrior_living_1
		}
		add_country_modifier = {
			name = roadwarrior_living_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_1 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_2
		}
		add_country_modifier = {
			name = roadwarrior_living_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_2 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_3
		}
		add_country_modifier = {
			name = roadwarrior_living_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_3 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_4
		}
		add_country_modifier = {
			name = roadwarrior_living_5
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_4 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_5
		}
		add_country_modifier = {
			name = roadwarrior_living_6
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_5 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_6
		}
		add_country_modifier = {
			name = roadwarrior_living_7
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_6 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_7
		}
		add_country_modifier = {
			name = roadwarrior_living_8
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_7 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_8
		}
		add_country_modifier = {
			name = roadwarrior_living_9
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_8 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_9
		}
		add_country_modifier = {
			name = roadwarrior_living_10
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_living_9 }
	}
	else = {
		add_country_modifier = {
			name = roadwarrior_living_1
			duration = -1
		}
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_upgrade_training_done = {
	clr_country_flag = roadwarrior_upgrading_training
	if = {
		limit = {
			has_country_modifier = roadwarrior_training_1
		}
		add_country_modifier = {
			name = roadwarrior_training_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_training_1 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_2
		}
		add_country_modifier = {
			name = roadwarrior_training_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_training_2 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_3
		}
		add_country_modifier = {
			name = roadwarrior_training_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_training_3 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_4
		}
		add_country_modifier = {
			name = roadwarrior_training_5
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_training_4 }
	}
	else = {
		add_country_modifier = {
			name = roadwarrior_training_1
			duration = -1
		}
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_upgrade_portable_arena_done = {
	clr_country_flag = roadwarrior_upgrading_portable_arena
	if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_1
		}
		add_country_modifier = {
			name = roadwarrior_portable_arena_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_portable_arena_1 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_2
		}
		add_country_modifier = {
			name = roadwarrior_portable_arena_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_portable_arena_2 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_3
		}
		add_country_modifier = {
			name = roadwarrior_portable_arena_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_portable_arena_3 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_4
		}
		add_country_modifier = {
			name = roadwarrior_portable_arena_5
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_portable_arena_4 }
	}
	else = {
		add_country_modifier = {
			name = roadwarrior_portable_arena_1
			duration = -1
		}
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_upgrade_smashers_done = {
	clr_country_flag = roadwarrior_upgrading_smashers
	if = {
		limit = { has_country_modifier = roadwarrior_breaker_1 }
		add_country_modifier = {
			name = roadwarrior_breaker_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_breaker_1 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_2 }
		add_country_modifier = {
			name = roadwarrior_breaker_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_breaker_2 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_3 }
		add_country_modifier = {
			name = roadwarrior_breaker_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_breaker_3 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_4 }
		add_country_modifier = {
			name = roadwarrior_breaker_5
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_breaker_4 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_5 }
		add_country_modifier = {
			name = roadwarrior_breaker_6
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_breaker_5 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_6 }
		add_country_modifier = {
			name = roadwarrior_breaker_7
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_breaker_6 }
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_7 }
		add_country_modifier = {
			name = roadwarrior_breaker_8
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_breaker_7 }
	}
	else = {
		add_country_modifier = {
			name = roadwarrior_breaker_1
			duration = -1
		}
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_upgrade_thinkers_done = {
	clr_country_flag = roadwarrior_upgrading_thinkers
	if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_1
		}
		add_country_modifier = {
			name = roadwarrior_thinking_2
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_thinking_1 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_2
		}
		add_country_modifier = {
			name = roadwarrior_thinking_3
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_thinking_2 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_3
		}
		add_country_modifier = {
			name = roadwarrior_thinking_4
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_thinking_3 }
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_4
		}
		add_country_modifier = {
			name = roadwarrior_thinking_5
			duration = -1
		}
		hidden_effect = { remove_country_modifier = roadwarrior_thinking_4 }
	}
	else = {
		add_country_modifier = {
			name = roadwarrior_thinking_1
			duration = -1
		}
	}
	remove_country_modifier = roadwarrior_upgrading
}

roadwarrior_finish_effects = {
	if = {
		limit = { has_country_flag = roadwarrior_upgrading_main }
		roadwarrior_upgrade_main_done = yes
	}
	else_if = {
		limit = { has_country_flag = roadwarrior_upgrading_fighter }
		roadwarrior_upgrade_fighter_done = yes
	}
	else_if = {
		limit = { has_country_flag = roadwarrior_upgrading_looter }
		roadwarrior_upgrade_looter_done = yes
	}
	else_if = {
		limit = { has_country_flag = roadwarrior_upgrading_builder }
		roadwarrior_upgrade_builder_done = yes
	}
	else_if = {
		limit = { has_country_flag = roadwarrior_upgrading_living }
		roadwarrior_upgrade_living_done = yes
	}
	else_if = {
		limit = { has_country_flag = roadwarrior_upgrading_training }
		roadwarrior_upgrade_training_done = yes
	}
	else_if = {
		limit = { has_country_flag = roadwarrior_upgrading_portable_arena }
		roadwarrior_upgrade_portable_arena_done = yes
	}
	else_if = {
		limit = { has_country_flag = roadwarrior_upgrading_smashers }
		roadwarrior_upgrade_smashers_done = yes
	}
	else_if = {
		limit = { has_country_flag = roadwarrior_upgrading_thinkers }
		roadwarrior_upgrade_thinkers_done = yes
	}
	else = {
		custom_tooltip = you_found_a_bug_tt
		tooltip = { add_treasury = 1 }
	}
}

# Run on province scope
roadwarrior_conquest_effects = {
	remove_loot = {
		who = H91
		amount = 500
	}
	if = {
		limit = { NOT = { has_construction = siberian } }
		if = {
			limit = { H91 = { has_country_modifier = roadwarrior_main_1 } }
			while = {
				limit = { base_tax = 2 }
				H91 = { add_adm_power = 1 }
				add_base_tax = -1
			}
			while = {
				limit = { base_production = 2 }
				H91 = { add_dip_power = 1 }
				add_base_production = -1
			}
			while = {
				limit = { base_manpower = 2 }
				H91 = { add_mil_power = 1 }
				add_base_manpower = -1
			}
			# Cause it might be a 1/1/1
			H91 = {
				add_adm_power = 1
				add_dip_power = 1
				add_mil_power = 1
			}
			add_permanent_province_modifier = {
				name = roadwarrior_decolonized
				duration = 3650
			}
		}
		else_if = {
			limit = { H91 = { has_country_modifier = roadwarrior_main_2 } }
			while = {
				limit = { base_tax = 2 }
				H91 = { add_adm_power = 2 }
				add_base_tax = -1
			}
			while = {
				limit = { base_production = 2 }
				H91 = { add_dip_power = 2 }
				add_base_production = -1
			}
			while = {
				limit = { base_manpower = 2 }
				H91 = { add_mil_power = 2 }
				add_base_manpower = -1
			}
			# Cause it might be a 1/1/1
			H91 = {
				add_adm_power = 2
				add_dip_power = 2
				add_mil_power = 2
			}
			add_permanent_province_modifier = {
				name = roadwarrior_decolonized
				duration = 7300
			}
		}
		else_if = {
			limit = { H91 = { has_country_modifier = roadwarrior_main_3 } }
			while = {
				limit = { base_tax = 2 }
				H91 = { add_adm_power = 5 }
				add_base_tax = -1
			}
			while = {
				limit = { base_production = 2 }
				H91 = { add_dip_power = 5 }
				add_base_production = -1
			}
			while = {
				limit = { base_manpower = 2 }
				H91 = { add_mil_power = 5 }
				add_base_manpower = -1
			}
			# Cause it might be a 1/1/1
			H91 = {
				add_adm_power = 5
				add_dip_power = 5
				add_mil_power = 5
			}
			add_permanent_province_modifier = {
				name = roadwarrior_decolonized
				duration = 18250
			}
		}
		else_if = {
			limit = { H91 = { has_country_modifier = roadwarrior_main_4 } }
			while = {
				limit = { base_tax = 2 }
				H91 = { add_adm_power = 10 }
				add_base_tax = -1
			}
			while = {
				limit = { base_production = 2 }
				H91 = { add_dip_power = 10 }
				add_base_production = -1
			}
			while = {
				limit = { base_manpower = 2 }
				H91 = { add_mil_power = 10 }
				add_base_manpower = -1
			}
			# Cause it might be a 1/1/1
			H91 = {
				add_adm_power = 10
				add_dip_power = 10
				add_mil_power = 10
			}
			add_permanent_province_modifier = {
				name = roadwarrior_decolonized
				duration = 36500
			}
		}
	}
	remove_core = H91
	add_devastation = 50
}

roadwarrior_migration_effects = {
	# Move Tax
	if = {
		limit = { owner = { has_country_modifier = roadwarrior_tax_1 } }
		add_province_modifier = {
			name = roadwarrior_tax_1_province
			duration = -1
			hidden = yes
		}

	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_tax_2 } }
		add_province_modifier = {
			name = roadwarrior_tax_2_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_tax_3 } }
		add_province_modifier = {
			name = roadwarrior_tax_3_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_tax_4 } }
		add_province_modifier = {
			name = roadwarrior_tax_4_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_tax_5 } }
		add_province_modifier = {
			name = roadwarrior_tax_5_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_tax_6 } }
		add_province_modifier = {
			name = roadwarrior_tax_6_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_tax_7 } }
		add_province_modifier = {
			name = roadwarrior_tax_7_province
			duration = -1
			hidden = yes
		}
	}

	# Move Builder
	if = {
		limit = { owner = { has_country_modifier = roadwarrior_builder_1 } }
		add_province_modifier = {
			name = roadwarrior_builder_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_builder_2 } }
		add_province_modifier = {
			name = roadwarrior_builder_2_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_builder_3 } }
		add_province_modifier = {
			name = roadwarrior_builder_3_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_builder_4 } }
		add_province_modifier = {
			name = roadwarrior_builder_4_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_builder_5 } }
		add_province_modifier = {
			name = roadwarrior_builder_5_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_builder_6 } }
		add_province_modifier = {
			name = roadwarrior_builder_6_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_builder_7 } }
		add_province_modifier = {
			name = roadwarrior_builder_7_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_builder_8 } }
		add_province_modifier = {
			name = roadwarrior_builder_8_province
			duration = -1
			hidden = yes
		}
	}

	# Move Thinker
	if = {
		limit = { owner = { has_country_modifier = roadwarrior_thinking_1 } }
		add_province_modifier = {
			name = roadwarrior_thinking_1
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_thinking_2 } }
		add_province_modifier = {
			name = roadwarrior_thinking_2
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_thinking_3 } }
		add_province_modifier = {
			name = roadwarrior_thinking_3
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_thinking_4 } }
		add_province_modifier = {
			name = roadwarrior_thinking_4
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_thinking_5 } }
		add_province_modifier = {
			name = roadwarrior_thinking_5
			duration = -1
			hidden = yes
		}
	}

	# Move Living
	if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_1 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_2 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_3 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_4 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_5 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_6 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_7 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_8 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_9 } }
		add_province_modifier = {
			name = roadwarrior_living_1_province
			duration = -1
			hidden = yes
		}
	}
	else_if = {
		limit = { owner = { has_country_modifier = roadwarrior_living_10 } }
		add_province_modifier = {
			name = roadwarrior_living_10_province
			duration = -1
			hidden = yes
		}
	}
}

roadwarrior_overdrive_effect = {
	hidden_effect = {
		add_core = ROOT
		change_culture = ROOT
		change_religion = ROOT
		cede_province = ROOT
		remove_building = fort_15th
		remove_building = fort_16th
		remove_building = fort_17th
		remove_building = fort_18th
		if = {
			limit = {
				ROOT = {
					capital_scope = {
						has_building = fort_15th
					}
				}
			}
			add_building = fort_15th
		}
		else_if = {
			limit = {
				ROOT = {
					capital_scope = {
						has_building = fort_16th
					}
				}
			}
			add_building = fort_16th
		}
		else_if = {
			limit = {
				ROOT = {
					capital_scope = {
						has_building = fort_17th
					}
				}
			}
			add_building = fort_17th
		}
		else_if = {
			limit = {
				ROOT = {
					capital_scope = {
						has_building = fort_18th
					}
				}
			}
			add_building = fort_18th
		}
	}
	move_capital_effect = yes
	ROOT = { 
		add_treasury = -100
	}
}

clear_roadwarrior_modifiers = {
	clr_country_flag = roadwarrior_upgrading_fighter
	remove_country_modifier = roadwarrior_main_1
	remove_country_modifier = roadwarrior_main_2
	remove_country_modifier = roadwarrior_main_3
	clr_country_flag = roadwarrior_upgrading_fighter
	remove_country_modifier = roadwarrior_fighter_1
	remove_country_modifier = roadwarrior_fighter_2
	remove_country_modifier = roadwarrior_fighter_3
	remove_country_modifier = roadwarrior_fighter_4
	remove_country_modifier = roadwarrior_fighter_5
	remove_country_modifier = roadwarrior_fighter_6
	remove_country_modifier = roadwarrior_fighter_7
	remove_country_modifier = roadwarrior_fighter_8
	remove_country_modifier = roadwarrior_fighter_9
	clr_country_flag = roadwarrior_upgrading_looter
	remove_country_modifier = roadwarrior_tax_1
	remove_country_modifier = roadwarrior_tax_2
	remove_country_modifier = roadwarrior_tax_3
	remove_country_modifier = roadwarrior_tax_4
	remove_country_modifier = roadwarrior_tax_5
	remove_country_modifier = roadwarrior_tax_6
	clr_country_flag = roadwarrior_upgrading_builder
	remove_country_modifier = roadwarrior_builder_1
	remove_country_modifier = roadwarrior_builder_2
	remove_country_modifier = roadwarrior_builder_3
	remove_country_modifier = roadwarrior_builder_4
	remove_country_modifier = roadwarrior_builder_5
	remove_country_modifier = roadwarrior_builder_6
	remove_country_modifier = roadwarrior_builder_7
	clr_country_flag = roadwarrior_upgrading_living
	remove_country_modifier = roadwarrior_living_1
	remove_country_modifier = roadwarrior_living_2
	remove_country_modifier = roadwarrior_living_3
	remove_country_modifier = roadwarrior_living_4
	remove_country_modifier = roadwarrior_living_5
	remove_country_modifier = roadwarrior_living_6
	remove_country_modifier = roadwarrior_living_7
	remove_country_modifier = roadwarrior_living_8
	remove_country_modifier = roadwarrior_living_9
	clr_country_flag = roadwarrior_upgrading_training
	remove_country_modifier = roadwarrior_training_1
	remove_country_modifier = roadwarrior_training_2
	remove_country_modifier = roadwarrior_training_3
	remove_country_modifier = roadwarrior_training_4
	clr_country_flag = roadwarrior_upgrading_portable_arena
	remove_country_modifier = roadwarrior_portable_arena_1
	remove_country_modifier = roadwarrior_portable_arena_2
	remove_country_modifier = roadwarrior_portable_arena_3
	remove_country_modifier = roadwarrior_portable_arena_4
	clr_country_flag = roadwarrior_upgrading_smashers
	remove_country_modifier = roadwarrior_breaker_1
	remove_country_modifier = roadwarrior_breaker_2
	remove_country_modifier = roadwarrior_breaker_3
	remove_country_modifier = roadwarrior_breaker_4
	remove_country_modifier = roadwarrior_breaker_5
	remove_country_modifier = roadwarrior_breaker_6
	remove_country_modifier = roadwarrior_breaker_7
	clr_country_flag = roadwarrior_upgrading_thinkers
	remove_country_modifier = roadwarrior_thinking_1
	remove_country_modifier = roadwarrior_thinking_2
	remove_country_modifier = roadwarrior_thinking_3
	remove_country_modifier = roadwarrior_thinking_4 
	remove_country_modifier = roadwarrior_upgrading
	every_owned_province = {
		remove_province_modifier = roadwarrior_tax_1_province
		remove_province_modifier = roadwarrior_tax_2_province
		remove_province_modifier = roadwarrior_tax_3_province
		remove_province_modifier = roadwarrior_tax_4_province
		remove_province_modifier = roadwarrior_tax_5_province
		remove_province_modifier = roadwarrior_tax_6_province
		remove_province_modifier = roadwarrior_builder_1_province
		remove_province_modifier = roadwarrior_builder_2_province
		remove_province_modifier = roadwarrior_builder_3_province
		remove_province_modifier = roadwarrior_builder_4_province
		remove_province_modifier = roadwarrior_builder_5_province
		remove_province_modifier = roadwarrior_builder_6_province
		remove_province_modifier = roadwarrior_builder_7_province
		remove_province_modifier = roadwarrior_thinking_1_province
		remove_province_modifier = roadwarrior_thinking_2_province
		remove_province_modifier = roadwarrior_thinking_3_province
		remove_province_modifier = roadwarrior_thinking_4_province
		remove_province_modifier = roadwarrior_thinking_5_province
	}
}

roadwarrior_update_capital = {
	remove_province_modifier = roadwarrior_tax_1_province
	remove_province_modifier = roadwarrior_tax_2_province
	remove_province_modifier = roadwarrior_tax_3_province
	remove_province_modifier = roadwarrior_tax_4_province
	remove_province_modifier = roadwarrior_tax_5_province
	remove_province_modifier = roadwarrior_tax_6_province
	remove_province_modifier = roadwarrior_builder_1_province
	remove_province_modifier = roadwarrior_builder_2_province
	remove_province_modifier = roadwarrior_builder_3_province
	remove_province_modifier = roadwarrior_builder_4_province
	remove_province_modifier = roadwarrior_builder_5_province
	remove_province_modifier = roadwarrior_builder_6_province
	remove_province_modifier = roadwarrior_builder_7_province
	remove_province_modifier = roadwarrior_thinking_1_province
	remove_province_modifier = roadwarrior_thinking_2_province
	remove_province_modifier = roadwarrior_thinking_3_province
	remove_province_modifier = roadwarrior_thinking_4_province
	remove_province_modifier = roadwarrior_thinking_5_province
	roadwarrior_migration_effects = yes
}
xhazobkult_gather_slaves_po_effect = {
	FROM = {
		if = {
			limit = { development_in_provinces = { value = 400 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 40
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 390 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 39
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 380 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 38
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 370 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 37
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 360 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 36
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 350 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 35
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 340 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 34
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 330 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 33
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 320 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 32
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 330 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 31
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 300 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 30
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 290 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 29
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 280 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 28
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 270 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 27
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 260 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 26
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 250 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 25
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 240 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 24
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 230 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 23
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 220 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 22
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 220 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 21
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 200 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 20
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 190 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 19
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 180 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 18
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 170 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 17
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 160 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 16
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 150 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 15
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 140 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 14
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 130 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 13
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 120 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 12
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 110 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 11
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 100 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 10
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 90 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 9
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 80 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 8
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 70 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 7
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 60 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 6
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 50 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 5
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 40 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 4
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 30 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 3
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 20 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 2
				}
			}
			
		}
		else_if = {
			limit = { development_in_provinces = { value = 10 area = capital } }
			PREV = {
				change_variable = {
					which = total_gathered_sacrifices
					value = 1
				}
			}
			
		}
		
		capital_scope = {
			area = {
				limit = {
					owned_by = FROM
				}
				add_devastation = 100
			}
		}
	}
}

calc_tributary_dev_proportion = {
	set_variable = {
		which = own_dev
		value = 0
	}
	set_variable = {
		which = tributary_dev_proportion
		value = 0
	}
	every_subject_country = {
		limit = { is_subject_of_type = tributary_state }
		ROOT = {
			export_to_variable = {
				which = tributary_dev_to_add
				value = total_development
				who = PREV
			}
			change_variable = {
				which = tributary_dev_proportion
				which = tributary_dev_to_add
			}
		}
	}
	export_to_variable = {
		which = own_dev
		value = total_development
	}
	divide_variable = {
		which = tributary_dev_proportion
		which = own_dev
	}
}


trollsbay_cultures = {
	if = {
		limit = { culture = vernman }
		change_culture = valorman
	}
	else_if = {
		limit = { culture = visfoot_halfling }
		change_culture = towerfoot_halfling
	}
	else_if = {
		limit = { culture = roilsardi }
		change_culture = isobeliner
	}
	else_if = {
		limit = { culture = bahari }
		change_culture = zanlibi
	}
	else_if = {
		limit = { culture = arannese }
		change_culture = marlliander
	}
	else_if = {
		limit = { culture = east_damerian }
		change_culture = cestirmarker
	}
}

ynn_cultures = {
	if = {
		limit = { culture = low_lorentish }
		change_culture = ebenmasser
	}
	else_if = {
		limit = { culture = castellyrian }
		change_culture = corinsfielder
	}
	else_if = {
		limit = { culture = crownsman }
		change_culture = beggastonic
	}
	else_if = {
		limit = { culture = vernman }
		change_culture = tiru_moiner
	}
	else_if = {
		limit = { culture = esmari }
		change_culture = new_havoralic
	}
	else_if = {
		limit = { culture = arannese }
		change_culture = tellumtiri
	}
	else_if = {
		limit = { culture = east_damerian }
		if = {
			limit = {
				OR = {
					region = rzenta_region
					region = broken_isles_region
					superregion = eordand_superregion
					region = forest_of_the_cursed_ones_region
					is_core = H46 #Istralorian Crusaders
					is_core = H47 #Istranar
				}
			}
			change_culture = istranari
		}
		else_if = {
			limit = {
				OR = {
					region = epednan_expanse_region
					province_group = west_ynn_bank
					is_core = H60
					is_core = H61
				}
			}
			change_culture = plumsteader
		}
	}
	else_if = {
		limit = { culture = redfoot_halfling }
		change_culture = pipefoot_halfling
	}
	else_if = {
		limit = { culture = stone_dwarf }
		change_culture = steel_dwarf
	}
	else_if = {
		limit = {
			culture = half_orc
			OR = {	#East bank are Freemarchers by default
				region = epednan_expanse_region
				province_group = west_ynn_bank
				is_core = H58 #Chipped Tooth Company
				is_core = H59 #Chippengard
			}
		}
		change_culture = chippengarder_half_orc
	}
}

#Black Demesne
increase_acolyte_influence_01 = {
	custom_tooltip = increase_acolyte_influence_01_tt
	hidden_effect = {
		change_variable = { aInfluence = 0.1 }
		REB = { change_variable = { aInfluence = 0.1 } }
	}
}

increase_acolyte_influence_05 = {
	custom_tooltip = increase_acolyte_influence_05_tt
	hidden_effect = {
		change_variable = { aInfluence = 0.5 }
		REB = { change_variable = { aInfluence = 0.5 } }
	}
}

increase_acolyte_influence_1 = {
	custom_tooltip = increase_acolyte_influence_1_tt
	hidden_effect = {
		change_variable = { aInfluence = 1 }
		REB = { change_variable = { aInfluence = 1 } }
	}
}

increase_acolyte_influence_2 = {
	custom_tooltip = increase_acolyte_influence_2_tt
	hidden_effect = {
		change_variable = { aInfluence = 2 }
		REB = { change_variable = { aInfluence = 2 } }
	}
}

increase_acolyte_influence_5 = {
	custom_tooltip = increase_acolyte_influence_5_tt
	hidden_effect = {
		change_variable = { aInfluence = 5 }
		REB = { change_variable = { aInfluence = 5 } }
	}
}

increase_acolyte_influence_10 = {
	custom_tooltip = increase_acolyte_influence_1_tt
	hidden_effect = {
		change_variable = { aInfluence = 10 }
		REB = { change_variable = { aInfluence = 10 } }
	}
}

increase_acolyte_influence_15 = {
	custom_tooltip = increase_acolyte_influence_15_tt
	hidden_effect = {
		change_variable = { aInfluence = 15 }
		REB = { change_variable = { aInfluence = 15 } }
	}
}

increase_acolyte_influence_20 = {
	custom_tooltip = increase_acolyte_influence_20_tt
	hidden_effect = {
		change_variable = { aInfluence = 20 }
		REB = { change_variable = { aInfluence = 20 } }
	}
}

decrease_acolyte_influence_01 = {
	custom_tooltip = decrease_acolyte_influence_01_tt
	hidden_effect = {
		subtract_variable = { aInfluence = 0.1 }
		REB = { subtract_variable = { aInfluence = 0.1 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

decrease_acolyte_influence_05 = {
	custom_tooltip = decrease_acolyte_influence_05_tt
	hidden_effect = {
		subtract_variable = { aInfluence = 0.5 }
		REB = { subtract_variable = { aInfluence = 0.5 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

decrease_acolyte_influence_1 = {
	custom_tooltip = decrease_acolyte_influence_1_tt
	hidden_effect = {
		subtract_variable = { aInfluence = 1 }
		REB = { subtract_variable = { aInfluence = 1 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

decrease_acolyte_influence_2 = {
	custom_tooltip = decrease_acolyte_influence_2_tt
	hidden_effect = {
		subtract_variable = { aInfluence = 2 }
		REB = { subtract_variable = { aInfluence = 2 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

decrease_acolyte_influence_5 = {
	custom_tooltip = decrease_acolyte_influence_5_tt
	hidden_effect = {
		subtract_variable = { aInfluence = 5 }
		REB = { subtract_variable = { aInfluence = 5 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

decrease_acolyte_influence_10 = {
	custom_tooltip = decrease_acolyte_influence_1_tt
	hidden_effect = {
		subtract_variable = { aInfluence = 10 }
		REB = { subtract_variable = { aInfluence = 10 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

decrease_acolyte_influence_15 = {
	custom_tooltip = decrease_acolyte_influence_15_tt
	hidden_effect = {
		subtract_variable = { aInfluence = 15 }
		REB = { subtract_variable = { aInfluence = 15 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

decrease_acolyte_influence_20 = {
	custom_tooltip = decrease_acolyte_influence_20_tt
	hidden_effect = {
		subtract_variable = { aInfluence = 20 }
		REB = { subtract_variable = { aInfluence = 20 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

acolytes_land_distribution_effect = {
	if = {
		limit = { Z75 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 } }
		REB = {
			Z75 = {
				set_variable = { which = nbProvBlack which = PREV } #It's in REB scope so i can use PREV because which = REB doesn't work because you know why
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z75
							remove_loot = { who = Z75 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z76 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 } }
		REB = {
			Z76 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z76
							remove_loot = { who = Z76 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z77 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 } }
		REB = {
			Z77 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z77
							remove_loot = { who = Z77 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z78 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 } }
		REB = {
			Z78 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z78
							remove_loot = { who = Z78 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z79 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 } }
		REB = {
			Z79 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z79
							remove_loot = { who = Z79 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z80 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 } }
		REB = {
			Z80 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z80
							remove_loot = { who = Z80 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z81 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 } }
		REB = {
			Z81 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z81
							remove_loot = { who = Z81 amount = 100 }
						}
					}
				}
			}
		}
	}
}

acolytes_land_distribution_with_core_effect = {
	if = {
		limit = { Z75 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 event_target:country = { NOT = { tag = PREV } } } }
		REB = {
			Z75 = {
				set_variable = { which = nbProvBlack which = PREV } #It's in REB scope so i can use PREV because which = REB doesn't work because you know why
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z75
							add_core = Z75
							remove_loot = { who = Z75 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z76 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 event_target:country = { NOT = { tag = PREV } } } }
		REB = {
			Z76 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z76
							add_core = Z76
							remove_loot = { who = Z76 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z77 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 event_target:country = { NOT = { tag = PREV } } } }
		REB = {
			Z77 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z77
							add_core = Z77
							remove_loot = { who = Z77 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z78 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 event_target:country = { NOT = { tag = PREV } } } }
		REB = {
			Z78 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z78
							add_core = Z78
							remove_loot = { who = Z78 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z79 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 event_target:country = { NOT = { tag = PREV } } } }
		REB = {
			Z79 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z79
							add_core = Z79
							remove_loot = { who = Z79 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z80 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 event_target:country = { NOT = { tag = PREV } } } }
		REB = {
			Z80 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z80
							add_core = Z80
							remove_loot = { who = Z80 amount = 100 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = { Z81 = { exists = yes is_subject_of_type = acolyte_dominion is_subject_of = Z99 event_target:country = { NOT = { tag = PREV } } } }
		REB = {
			Z81 = {
				set_variable = { which = nbProvBlack which = PREV }
				set_variable = { which = temp which = percInfluence }
				divide_variable = { temp = 100 }
				multiply_variable = { which = nbProvBlack which = temp }
				while = {
					limit = { check_variable = { nbProvBlack = 0 } }
					subtract_variable = { nbProvBlack = 1 }
					event_target:country = {
						random_owned_province = {
							cede_province = Z81
							add_core = Z81
							remove_loot = { who = Z81 amount = 100 }
						}
					}
				}
			}
		}
	}
}

new_acolyte_after_conquest_effect = {
	if = {
		limit = { Z75 = { exists = no } }
		event_target:country = {
			random_owned_province = {
				set_in_empire = no
				add_core = Z75
				cede_province = ROOT
			}
			every_owned_province = {
				add_core = Z75
				cede_province = ROOT
			}
		}
		release = Z75
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z75
		}
		Z75 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z76 = { exists = no } }
		event_target:country = {
			random_owned_province = {
				set_in_empire = no
				add_core = Z76
				cede_province = ROOT
			}
			every_owned_province = {
				add_core = Z76
				cede_province = ROOT
			}
		}
		release = Z76
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z76
		}
		Z76 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z77 = { exists = no } }
		event_target:country = {
			random_owned_province = {
				set_in_empire = no
				add_core = Z77
				cede_province = ROOT
			}
			every_owned_province = {
				add_core = Z77
				cede_province = ROOT
			}
		}
		release = Z77
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z77
		}
		Z77 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z78 = { exists = no } }
		event_target:country = {
			random_owned_province = {
				set_in_empire = no
				add_core = Z78
				cede_province = ROOT
			}
			every_owned_province = {
				add_core = Z78
				cede_province = ROOT
			}
		}
		release = Z78
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z78
		}
		Z78 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z79 = { exists = no } }
		event_target:country = {
			random_owned_province = {
				set_in_empire = no
				add_core = Z79
				cede_province = ROOT
			}
			every_owned_province = {
				add_core = Z79
				cede_province = ROOT
			}
		}
		release = Z79
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z79
		}
		Z79 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z80 = { exists = no } }
		event_target:country = {
			random_owned_province = {
				set_in_empire = no
				add_core = Z80
				cede_province = ROOT
			}
			every_owned_province = {
				add_core = Z80
				cede_province = ROOT
			}
		}
		release = Z80
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z80
		}
		Z80 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z81 = { exists = no } }
		event_target:country = {
			random_owned_province = {
				set_in_empire = no
				add_core = Z81
				cede_province = ROOT
			}
			every_owned_province = {
				add_core = Z81
				cede_province = ROOT
			}
		}
		release = Z81
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z81
		}
		Z81 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
}

new_acolyte_mtth_effect = {
	if = {
		limit = { Z75 = { exists = no } }
		every_owned_province = {
			limit = { has_state_edict = acolyte_territory_edict }
			add_core = Z75
		}
		release = Z75
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z75
		}
		Z75 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z76 = { exists = no } }
		every_owned_province = {
			limit = { has_state_edict = acolyte_territory_edict }
			add_core = Z76
		}
		release = Z76
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z76
		}
		Z76 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z77 = { exists = no } }
		every_owned_province = {
			limit = { has_state_edict = acolyte_territory_edict }
			add_core = Z77
		}
		release = Z77
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z77
		}
		Z77 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z78 = { exists = no } }
		every_owned_province = {
			limit = { has_state_edict = acolyte_territory_edict }
			add_core = Z78
		}
		release = Z78
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z78
		}
		Z78 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z79 = { exists = no } }
		every_owned_province = {
			limit = { has_state_edict = acolyte_territory_edict }
			add_core = Z79
		}
		release = Z79
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z79
		}
		Z79 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z80 = { exists = no } }
		every_owned_province = {
			limit = { has_state_edict = acolyte_territory_edict }
			add_core = Z80
		}
		release = Z80
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z80
		}
		Z80 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
	else_if = {
		limit = { Z81 = { exists = no } }
		every_owned_province = {
			limit = { has_state_edict = acolyte_territory_edict }
			add_core = Z81
		}
		release = Z81
		create_subject = {
			subject_type = acolyte_dominion
			subject = Z81
		}
		Z81 = {
			every_owned_province = {
				PREV = { change_variable = { aInfluence = 0.5 } }
				PREV = { add_manpower = 1.2 }
				PREV = { add_treasury = 25 }
			}
			change_government = theocracy
			add_government_reform = black_acolyte_reform
			change_technology_group = tech_cannorian
			change_unit_type = tech_cannorian
			add_devotion = 50
			add_stability = 2
			add_prestige = 100
			add_manpower = 20
			add_treasury = 1000
			change_primary_culture = black_demesner
			change_religion = ROOT
			set_country_flag = newly_formed_dominion
			kill_ruler = yes
		}
	}
}

goblinic_shamanism_event = {
	if = {
		limit = {
			religion_group = cannorian
			ROOT = {  NOT = { has_unlocked_cult = cannorian_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.2 }
		}
	}
	if = {
		limit = {
			religion = the_thought
			ROOT = {  NOT = { has_unlocked_cult = gnomish_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.3 }
		}
	}
	if = {
		limit = {
			religion_group = dwarven
			ROOT = {  NOT = { has_unlocked_cult = ancestor_worship_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.4 }
		}
	}
	if = {
		limit = {
			religion = godlost
			ROOT = {  NOT = { has_unlocked_cult = godlost_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.401 }
		}
	}
	if = {
		limit = {
			religion_group = kheteratan
			ROOT = {  NOT = { has_unlocked_cult = kheteratan_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.402 }
		}
	}
	if = {
		limit = {
			religion_group = gnollish
			ROOT = {  NOT = { has_unlocked_cult = gnollish_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.403 }
		}
	}
	if = {
		limit = {
			religion_group = elven
			ROOT = {  NOT = { has_unlocked_cult = elven_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.404 }
		}
	}
	if = {
		limit = {
			religion_group = bulwari
			ROOT = {  NOT = { has_unlocked_cult = bulwari_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.405 }
		}
	}
	if = {
		limit = {
			religion_group = gerudian
			ROOT = {  NOT = { has_unlocked_cult = gerudian_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.406 }
		}
	}
	if = {
		limit = {
			religion_group = orcish
			ROOT = {  NOT = { has_unlocked_cult = orcish_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.407 }
		}
	}
	if = {
		limit = {
			religion_group = harpy
			ROOT = {  NOT = { has_unlocked_cult = harpy_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.408 }
		}
	}
	if = {
		limit = {
			religion_group = fey
			ROOT = {  NOT = { has_unlocked_cult = fey_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.409 }
		}
	}
	if = {
		limit = {
			religion_group = raheni
			ROOT = {  NOT = { has_unlocked_cult = raheni_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.410 }
		}
	}
	if = {
		limit = {
			religion_group = giantkin
			ROOT = {  NOT = { has_unlocked_cult = giantkin_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.411 }
		}
	}
	if = {
		limit = {
			religion_group = centaur
			ROOT = {  NOT = { has_unlocked_cult = centaur_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.412 }
		}
	}
	if = {
		limit = {
			religion_group = dragon_cult
			ROOT = {  NOT = { has_unlocked_cult = kobold_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.413 }
		}
	}
}

elikhand_divine_war = {
	if = {
		limit = { has_country_modifier = elikhand_divine_4 }
		remove_country_modifier = elikhand_divine_4
	}
	if = {
		limit = { has_country_modifier = elikhand_divine_3 }
		remove_country_modifier = elikhand_divine_3
		add_country_modifier = {
			name = elikhand_divine_4
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = elikhand_divine_2 }
		remove_country_modifier = elikhand_divine_2
		add_country_modifier = {
			name = elikhand_divine_3
			duration = -1
		}
		custom_tooltip = elikhand_divine
	}
	else_if = {
		limit = { has_country_modifier = elikhand_divine_1 }
		remove_country_modifier = elikhand_divine_1
		add_country_modifier = {
			name = elikhand_divine_2
			duration = -1
		}
		custom_tooltip = elikhand_divine
	}
	else = {
		add_country_modifier = {
			name = elikhand_divine_1
			duration = -1
		}
		custom_tooltip = elikhand_divine
	}
}
#krakdhumvror
krak_pick_holds_effect = {
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_1
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_2
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_3
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_4
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_5
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_6
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_7
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_8
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_9
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_modifier = krak_ice_hold_modifier }
			NOT = { province_id = 4208 }
			NOT = { province_id = 4122 }
			NOT = { province_id = 4128 }
			NOT = { province_id = 4149 }
			province_group = hold_province
			NOT = { has_province_flag = icehold_candidate } 
		}
		set_province_flag = icehold_candidate
		save_event_target_as = candidate_10
	}
}
krak_icehold_cost = {
	if = {
		limit = { 
			estate_influence = {
				estate = estate_mages
				influence = 66
			}
		}
		add_adm_power = -100
		if = {
			limit = { check_variable = { which = krak_discount_spell value = 1 } } 
			change_variable = { which = krak_discount_spell value = -1 }
		}
		else = { add_years_of_income = -1.25 }
	}
	else_if = {
		limit = { 
			estate_influence = {
				estate = estate_mages
				influence = 33
			}
		}
		add_adm_power = -200
		if = {
			limit = { check_variable = { which = krak_discount_spell value = 1 } } 
			change_variable = { which = krak_discount_spell value = -1 }
		}
		else = { add_years_of_income = -2.5 }
	}
	else = {
		add_adm_power = -300
		if = {
			limit = { check_variable = { which = krak_discount_spell value = 1 } } 
			change_variable = { which = krak_discount_spell value = -1 }
		}
		else = { add_years_of_income = -3.75 }
	}
}
krak_icehold_effect = {
	add_permanent_province_modifier = { name = krak_ice_hold_modifier duration = -1 } 
	if = {
		limit = { has_dlc = "Mandate of Heaven" }
		add_province_triggered_modifier = krak_ice_hold_triggered_modifier
	}
	else = {
		add_base_tax = 3
		add_base_production = 3
		add_base_manpower = 3
	}
}
krak_add_monarchy_support = {
	custom_tooltip = krakdhumvror_crisis_monarchy_tooltip
	hidden_effect = { 
		random_list = {
			40 = { change_variable = { which = krak_disaster_monarchy value = 1 } }
			40 = { change_variable = { which = krak_disaster_monarchy value = 2 } }
			20 = { change_variable = { which = krak_disaster_monarchy value = 3 } }
		}
	}
}
krak_add_clan_monarchy_support = {
	custom_tooltip = krakdhumvror_crisis_monarchy_tooltip2
	hidden_effect = { 
		random_list = {
			40 = { change_variable = { which = krak_disaster_monarchy value = 4 } }
			40 = { change_variable = { which = krak_disaster_monarchy value = 5 } }
			20 = { change_variable = { which = krak_disaster_monarchy value = 6 } }
		}
	}
}
krak_add_republic_support = {
	custom_tooltip = krakdhumvror_crisis_republic_tooltip
	hidden_effect = { 
		random_list = {
			40 = { change_variable = { which = krak_disaster_republic value = 1 } }
			40 = { change_variable = { which = krak_disaster_republic value = 2 } }
			20 = { change_variable = { which = krak_disaster_republic value = 3 } }
		}
	}
}
krak_add_clan_republic_support = {
	custom_tooltip = krakdhumvror_crisis_republic_tooltip2
	hidden_effect = {
		random_list = {
			40 = { change_variable = { which = krak_disaster_republic value = 4 } }
			40 = { change_variable = { which = krak_disaster_republic value = 5 } }
			20 = { change_variable = { which = krak_disaster_republic value = 6 } }
		}
	}
}

#avamezan horse race
set_horse_race_rankings = {
	random_list = {
		10 = { 616 = { save_event_target_as = jockey_origin_1 } } #Akelses - second (good choice)
		10 = { 633 = { save_event_target_as = jockey_origin_1 } } #Anzarim Avamezan - third (good choice)
		10 = { 591 = { save_event_target_as = jockey_origin_1 } } #Kumarkand - fourth (meh choice)
		10 = { 2909 = { save_event_target_as = jockey_origin_1 } } #Ebbusubtu - best choice
		10 = { 598 = { save_event_target_as = jockey_origin_1 } } #Surib - fifth (bad choice
		10 = { 526 = { save_event_target_as = jockey_origin_1 } } #Ovdal Tungr - sixth (dumb choice)
	}
	event_target:jockey_origin_1 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_2 } }
	}
	event_target:jockey_origin_2 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_3 } }
	}
	event_target:jockey_origin_3 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_4 } }
	}
	event_target:jockey_origin_4 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_5 } }
	}
	event_target:jockey_origin_5 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_6 } }
	}
	
	event_target:jockey_origin_1 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_2 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_3 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_4 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_5 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_6 = { set_variable = { which = horseRaceRank value = 1 } }
	set_variable = { which = tempHorseRaceRank value = 1 }
	
	while = { limit = { NOT = { check_variable = { which = tempHorseRaceRank value = 6 } } }
		change_variable = { which = tempHorseRaceRank value = 1 }
		
		random_list = {		#number on the random list is the horse odds, number in the factors in the jockey odds
			30 = {
				trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_1 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_1 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_1 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_1 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_1 = { province_id = 526 } }
				event_target:jockey_origin_1 = { set_province_flag = bulwar_race_ranked }
			}
			70 = {
				trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_2 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_2 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_2 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_2 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_2 = { province_id = 526 } }
				event_target:jockey_origin_2 = { set_province_flag = bulwar_race_ranked }
			}
			5 = {
				trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_3 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_3 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_3 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_3 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_3 = { province_id = 526 } }
				event_target:jockey_origin_3 = { set_province_flag = bulwar_race_ranked }
			}
			80 = {
				trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_4 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_4 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_4 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_4 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_4 = { province_id = 526 } }
				event_target:jockey_origin_4 = { set_province_flag = bulwar_race_ranked }
			}
			100 = {
				trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_5 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_5 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_5 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_5 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_5 = { province_id = 526 } }
				event_target:jockey_origin_5 = { set_province_flag = bulwar_race_ranked }
			}
			50 = {
				trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_6 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_6 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_6 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_6 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_6 = { province_id = 526 } }
				event_target:jockey_origin_6 = { set_province_flag = bulwar_race_ranked }
			}
		}
		
		event_target:jockey_origin_1 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_2 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_3 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_4 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_5 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_6 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
	}
	
	random_list = {
		10 = { event_target:jockey_origin_1 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_2 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_3 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_4 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_5 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_6 = { save_event_target_as = blue_origin } }
	}
	event_target:blue_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = teal_origin } }
	}
	event_target:teal_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = green_origin } }
	}
	event_target:green_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = yellow_origin } }
	}
	event_target:yellow_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = orange_origin } }
	}
	event_target:orange_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = red_origin } }
	}	
	
	event_target:jockey_origin_1 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_2 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_3 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_4 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_5 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_6 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
}



# increase_ruler_stat = { dip=yes amount=1 }
# increase_ruler_stat = { dip=yes adm=yes amount=2 }
increase_ruler_stat = {
	hidden_effect = { 
		set_variable = { temp_stat = $amount$ }
	}
	[[dip]
	tooltip = { change_dip = $amount$ }
	hidden_effect = {
		while = {
			limit = { check_variable = { temp_stat = 1 } }
			subtract_variable = { temp_stat }
			if = {
				limit = { NOT = { dip = 6 } }
				change_dip = 1
			}
			else = {
				add_dip_power = 100
			}
		}
	}
	]
	[[adm]
	tooltip = { change_adm = $amount$ }
	hidden_effect = {
		while = {
			limit = { check_variable = { temp_stat = 1 } }
			subtract_variable = { temp_stat }
			if = {
				limit = { NOT = { adm = 6 } }
				change_adm = 1
			}
			else = {
				add_adm_power = 100
			}
		}
	}
	]
	[[mil]
	tooltip = { change_mil = $amount$ }
	hidden_effect = {
		while = {
			limit = { check_variable = { temp_stat = 1 } }
			subtract_variable = { temp_stat }
			if = {
				limit = { NOT = { mil = 6 } }
				change_mil = 1
			}
			else = {
				add_mil_power = 100
			}
		}
	}
	]
	custom_tooltip = excess_stats_in_power_tooltip
}

decrease_ruler_stat = {
	set_variable = { temp_stat = $amount$ }
	[[dip]
	while = {
		limit = { check_variable = { temp_stat = 1 } }
		subtract_variable = { temp_stat }
		custom_tooltip = low_stats_in_power_tooltip
		if = {
			limit = { dip = 1 }
			change_dip = -1
		}
		else = {
			add_dip_power = -100
		}
	}
	]
	[[adm]
	while = {
		limit = { check_variable = { temp_stat = 1 } }
		subtract_variable = { temp_stat }
		custom_tooltip = low_stats_in_power_tooltip
		if = {
			limit = { adm = 1 }
			change_adm = -1
		}
		else = {
			add_adm_power = -100
		}
	}
	]
	[[mil]
	while = {
		limit = { check_variable = { temp_stat = 1 } }
		subtract_variable = { temp_stat }
		custom_tooltip = low_stats_in_power_tooltip
		if = {
			limit = { mil = 1 }
			change_mil = -1
		}
		else = {
			add_mil_power = -100
		}
	}
	]
}


jorg_damage_setup = {
	if = {
		limit = { has_ruler_flag = abjuration_1 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = abjuration_2 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = abjuration_3 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = conjuration_1 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = conjuration_2 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = conjuration_3 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = illusion_1 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = illusion_2 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = illusion_3 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = necromancy_1 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = necromancy_2 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = necromancy_3 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = transmutation_1 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = transmutation_2 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = transmutation_3 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = evocation_1 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = evocation_2 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = evocation_3 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = divination_1 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = divination_2 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = divination_3 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = transmutation_1 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = transmutation_2 }
		change_variable = { jorg_damage = 1 }
	}
	if = {
		limit = { has_ruler_flag = transmutation_3 }
		change_variable = { jorg_damage = 1 }
	}
}

initialize_blackpurgis = {
	hidden_effect = {
		if = {
			limit = { NOT = { has_country_flag = blackpurgis_initialized } }
			set_variable = { maxBlack = 0 }
			set_variable = { currentBlack = 0 }
			set_variable = { winBlack = 0 }
			set_variable = { drawBlack = 0 }
			set_variable = { loseBlack = 0 }
			every_subject_country = {
				limit = { is_subject_of_type = acolyte_dominion }
				set_variable = { maxBlack = 0 }
				set_variable = { currentBlack = 0 }
				set_variable = { winBlack = 0 }
				set_variable = { drawBlack = 0 }
				set_variable = { loseBlack = 0 }
			}
			if = {
				limit = { has_country_flag = long_blackpurgis }
				every_subject_country = {
					limit = { is_subject_of_type = acolyte_dominion }
					ROOT = { change_variable = { maxBlack = 2 } }
				}
				every_subject_country = {
					set_variable = {
						which = maxBlack
						which = PREV
					}
				}
			}
			else = {
				every_subject_country = {
					limit = { is_subject_of_type = acolyte_dominion }
					ROOT = { change_variable = { maxBlack = 1 } }
				}
				every_subject_country = {
					set_variable = {
						which = maxBlack
						which = PREV
					}
				}
			}
			set_country_flag = blackpurgis_initialized
		}
	}
}

update_blackpurgis = {
	hidden_effect = {
		Z99 = {
			set_variable = { maxBlack = 0 }
			if = {
				limit = { has_country_flag = long_blackpurgis }
				every_subject_country = {
					limit = { is_subject_of_type = acolyte_dominion }
					Z99 = { change_variable = { maxBlack = 2 } }
				}
				every_subject_country = {
					set_variable = {
						which = maxBlack
						which = PREV
					}
				}
			}
			else = {
				every_subject_country = {
					limit = { is_subject_of_type = acolyte_dominion }
					Z99 = { change_variable = { maxBlack = 1 } }
				}
				every_subject_country = {
					set_variable = {
						which = maxBlack
						which = PREV
					}
				}
			}
		}
	}
}

# Can handle experience = 50, 100, 200 or 500. If you want to add more then you need to create new tooltips for them.
increase_study_experience = {
	[[experience]
		custom_tooltip = magic_study_experience_$experience$_tt 								# Loc only exists for 50, 100, 200 and 500 currently
		
		update_magic_study_experience_modifier = {}
		hidden_effect = { set_variable = { experienceGain = $experience$ } }
		# If the modifier is positive or negative
		if = {
			limit = { 
				NOT = { is_variable_equal = { which = experienceModifier value = 0 } } # XP modifier not 0
			}
			custom_tooltip = magic_study_experience_modifier_tt			
			hidden_effect = {
				set_variable = { which = expFoo which = experienceModifier }
				divide_variable = { expFoo = 100 }
				change_variable = { expFoo = 1 }
				multiply_variable = { which = experienceGain which = expFoo }
			}
		}

		hidden_effect = {
			change_variable = {
				which = ruler_study_experience 
				which = experienceGain
			}
		}
	]
	hidden_effect = {
		country_event = { id = magic_study.100 days = 1 }
	}
}

# Tooltip to increase: add_magic_study_modifier_1_tt		Handle 1,2,5,7,10,12,15,17,20,25,33,50,100
# Tooltip to decrease : remove_magic_study_modifier_1_tt	Handle 1,2,5,7,10,12,15,17,20,25,33,50,100

#Note that 2 actually display 2.5%, 7 7.5%, 12 12.5% and 17 17.5%. Add accordingly, add_magic_study_modifier_7_tt value = 7.5
update_magic_study_experience_modifier = {
	hidden_effect = {
		if = {
			limit = { NOT = { has_country_flag = study_modifier_set } }
			set_country_flag = study_modifier_set
			set_variable = { experienceModifier = 0 }
		}
		[[value]
			change_variable = { experienceModifier = $value$ } 							# This handle negative. Value must be whole, so +10% = 10
		]
		if = {
			limit = { NOT = { check_variable = { experienceModifier = -100 } } }		# We never go under -100%
			set_variable = { experienceModifier = -100 }
		}
	}
}

# Fires the correct event for magical study completing
# finished_study_effect = {
	# trigger_switch = {
		# on_trigger = has_ruler_flag
	
		# ruler_studying_abjuration = { country_event = { id = magic_study.2 days = 7 } }
		# ruler_studying_conjuration = { country_event = { id = magic_study.5 days = 7 } }
		# ruler_studying_divination = { country_event = { id = magic_study.8 days = 7 } }
		# ruler_studying_enchantment = { country_event = { id = magic_study.11 days = 7 } }
		# ruler_studying_evocation = { country_event = { id = magic_study.14 days = 7 } }
		# ruler_studying_illusion = { country_event = { id = magic_study.17 days = 7 } }
		# ruler_studying_necromancy = { country_event = { id = magic_study.20 days = 7 } }
		# ruler_studying_transmutation = { country_event = { id = magic_study.23 days = 7 } }
	# }
	# country_event = { id = magic_study.100 }
# }

dalcabba_surge = {
	custom_tooltip = dalcabba_surgett
	hidden_effect = {
		every_country = {
			limit = {
				NOT = { tag = B38 }
				ai = yes
				religion = dalcabba
			}
			every_owned_province = {
				random = {
					chance = 30
					change_religion = dalcabba
				}
			}
		}
	}
}

# Corintar
corintar_refresh_reconstruction = {
	if = {
		limit = { has_country_modifier = corintar_reconstruction_permanent }
		# pass
	}
	else_if = {
		limit = {
			OR = {
				has_country_modifier = corintar_reconstruction
				has_country_modifier = corintar_reconstruction_improved
			}
		}
		custom_tooltip = corintar_extend_restoration_tt
	}
	else = {
		custom_tooltip = corintar_restart_restoration_tt
	}
	hidden_effect = {
		remove_country_modifier = corintar_reconstruction
		remove_country_modifier = corintar_reconstruction_improved
		if = {
			limit = { has_country_modifier = corintar_reconstruction_permanent }
			# pass
		}
		else_if = {
			limit = {
				mission_completed = corintar_lumber_shortage
			}
			add_country_modifier = {
				name = corintar_reconstruction_improved
				duration = 5475
			}
		}
		else = {
			add_country_modifier = {
				name = corintar_reconstruction
				duration = 5475
			}
		}
	}
}

corintar_establish_chapter_effect = {
	if = {
		limit = {
			exists = $tag$
		}
		$tag$ = {
			add_country_modifier = {
				name = $chapter$
				duration = -1
			}
			hidden_effect = {
				#country_event = { id = $lore$ }
				set_country_flag = corintar_chapter
			}
		}
		add_country_modifier = {
			name = $modifier$
			duration = 7300
		}
		hidden_effect = {
			#country_event = { id = $lore$ }
		}
	}
	else_if = {
		limit = {
			NOT = { owns = $capital$ }
		}
		$capital$ = {
			owner = {
				add_country_modifier = {
					name = $chapter$
					duration = -1
				}
				hidden_effect = {
					set_country_flag = corintar_chapter
					#country_event = { id = $lore$ }
				}
			}
		}
		add_country_modifier = {
			name = $modifier$
			duration = 7300
		}
		hidden_effect = {
			#country_event = { id = $lore$ }
		}
	}
}

corintar_fort_manpower = {
	random_owned_province = {
		limit = {
			fort_level = 1
			NOT = { has_province_flag = corintar_flag }
		}
		set_province_flag = corintar_flag
		add_base_manpower = 1
	}
}

corintar_orc_production = {
	random_owned_province = {
		limit = {
			has_integrated_orcish_minority_trigger = yes
			NOT = { has_province_flag = corintar_flag }
		}
		set_province_flag = corintar_flag
		add_base_production = 1
	}
}

corintar_deforestation = {
	random_owned_province = {
		limit = {
			OR = {
				has_terrain = woods
				has_terrain = forest
			}
			superregion = escann_superregion
			base_production = 2
			NOT = { has_province_flag = corintar_flag }
		}
		set_province_flag = corintar_flag
		add_base_production = -1
	}
}

corintar_violent_conversion = {
	random_owned_province = {
		limit = { religion = regent_court }
		change_religion = corinite
		add_province_modifier = {
			name = forced_conversion
			duration = 730
		}
	}
}

for = {
	set_variable = {
		which = ForLoopCounter
		value = $amount$
	}
	
	while = {
		limit = {
			check_variable = {
				which = ForLoopCounter
				value = 1
			}
		}
		$effect$
		subtract_variable = {
			which = ForLoopCounter
			value = 1
		}
	}
}

add_prestige_or_monarch_power = {
	tooltip = {
		add_prestige = $VAL$
	}
	custom_tooltip = add_prestige_or_monarch_power_tt
	hidden_effect = {
		for = {
			amount = $VAL$
			effect = "
				if = {
					limit = {
						NOT = { prestige = 100 }
					}
					add_prestige = 1
				}
				else = {
					random_list = {
						1 = { add_adm_power = 2 }
						1 = { add_dip_power = 2 }
						1 = { add_mil_power = 2 }
					}
				}
			"
		}
	}
}

add_army_tradition_or_mil_power = {
	tooltip = {
		add_army_tradition = $VAL$
	}
	custom_tooltip = add_army_tradition_or_mil_power_tt
	hidden_effect = {
		for = {
			amount = $VAL$
			effect = "
				if = {
					limit = {
						NOT = { army_tradition = 99.9 }
					}
					add_army_tradition = 1
				}
				else = {
					add_mil_power = 3
				}
			"
		}
	}
}

spawn_black_demesne_overseer_army = {
	custom_tooltip = black_amphibious_invasion
	hidden_effect = {
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		infantry = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
		artillery = ROOT
	}
}