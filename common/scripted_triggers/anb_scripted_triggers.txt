
has_underground_terrain = {
	OR = {
		has_terrain = dwarven_hold
		has_terrain = dwarven_hold_surface
		has_terrain = dwarven_road
		has_terrain = cavern
	}
}

religion_has_burials = {
	OR = {
		religion_group = bulwari
		#religion_group = gerudian
		religion = ynn_river_worship
		religion = feast_of_the_gods
		religion = xhazobkult
	}
}

has_native_migration_government = {
	OR = {
		has_reform = adventurer_reform
		has_reform = greentide_horde
		government = native
	}
}

has_native_migration_government_except_adventurer = {
	OR = {
		has_reform = greentide_horde
		government = native
	}
}

is_adventurer = {
	OR = {
	
		#Greentide
		tag = B02
		tag = B03
		tag = B04
		tag = B05
		tag = B06
		tag = B07
		tag = B08
		tag = B09
		tag = B10
		tag = B11
		tag = B12
		tag = B13
		tag = B14
		tag = B15
		tag = B16
		tag = B17
		tag = B18
		tag = B19
		tag = B20
		
		#Aelantir
		tag = H42
		tag = H40
		tag = H50
		tag = H48
		tag = H46
		tag = H52
		tag = H44
		tag = H56
		tag = H54
		tag = H60
		tag = H58
		tag = H64
		tag = H62
		tag = H66
		
		#Dwarovar
		tag = H69
		tag = H70
		tag = H71
		tag = H96
		tag = H97
		tag = H98
		tag = H68
		tag = H95

	}
}

is_aelantiri_colonial_spawnable = {
	tag = H30
	tag = H31
	tag = H32
	tag = H33
	tag = H34
	tag = H35
	tag = H36
	tag = H37
	tag = H38
	tag = H39
	tag = G90
	tag = G91
	tag = G92
	tag = G93
	tag = G94
	tag = G95
	tag = G96
	tag = G97
	tag = G98
	tag = G99
}

is_greentide_horde = {
	OR = {
		tag = B23
		tag = B43
		tag = B41
		tag = B44
		tag = B46
		tag = B22
		tag = B45
		tag = B27
		tag = B26
		tag = B30
		tag = B29
		tag = B42
		tag = B21
		tag = B24
		tag = B28
		tag = B25
	}
}

is_temple = {
	OR = {
		#Cannor
		tag = A10 #Minaran Temple
		tag = A41 #Damish Temple
		tag = A43 #Ryalan Temple
		tag = A53 #Aramari Temple
	}
}

has_no_ward_province_modifiers = {
	NOT = { has_province_modifier = magic_realm_abjuration_empowered_ward}
	NOT = { has_province_modifier = magic_realm_abjuration_ward}
	NOT = { has_province_modifier = magic_estate_ward_1 }
	NOT = { has_province_modifier = magic_estate_ward_2 }
	NOT = { has_province_modifier = magic_estate_ward_3 }
}

enhance_ability_cost_adm_trigger = {
	if = {
		limit = { adm = 5 }
		adm_power = 500
	}
	else_if = {
		limit = { adm = 4 }
		adm_power = 400
	}
	else_if = {
		limit = { adm = 3 }
		adm_power = 300
	}
	else_if = {
		limit = { adm = 2 }
		adm_power = 200
	}
	else = {
		adm_power = 100
	}
}

enhance_ability_cost_dip_trigger = {
	if = {
		limit = { dip = 5 }
		dip_power = 500
	}
	else_if = {
		limit = { dip = 4 }
		dip_power = 400
	}
	else_if = {
		limit = { dip = 3 }
		dip_power = 300
	}
	else_if = {
		limit = { dip = 2 }
		dip_power = 200
	}
	else = {
		dip_power = 100
	}
}

enhance_ability_cost_mil_trigger = {
	if = {
		limit = { mil = 5 }
		mil_power = 500
	}
	else_if = {
		limit = { mil = 4 }
		mil_power = 400
	}
	else_if = {
		limit = { mil = 3 }
		mil_power = 300
	}
	else_if = {
		limit = { mil = 2 }
		mil_power = 200
	}
	else = {
		mil_power = 100
	}
}



province_with_farm_goods = {
	OR = {
		trade_goods = grain
		trade_goods = livestock
		trade_goods = wine
		trade_goods = spices
		trade_goods = tea
		trade_goods = coffee
		trade_goods = cocoa
		trade_goods = cotton
		trade_goods = sugar
		trade_goods = tobacco
		trade_goods = silk
	}
}


province_with_mineable_goods = {
	OR = {
		trade_goods = gold
		trade_goods = copper
		trade_goods = iron
		trade_goods = mithril
		trade_goods = gems
		trade_goods = salt
	}
}

province_with_urban_goods = {
	OR = {
		trade_goods = glass
		trade_goods = paper
		trade_goods = cloth
		trade_goods = chinaware
	}
}

is_abjuration_0 = {
	custom_trigger_tooltip = {
		tooltip = is_abjuration_0_tt
		
		NOT = { has_ruler_flag = abjuration_1 }
		NOT = { has_ruler_flag = abjuration_2 }
		NOT = { has_ruler_flag = abjuration_3 }
	}
}

is_abjuration_1 = {
	custom_trigger_tooltip = {
		tooltip = is_abjuration_1_tt
		
		has_ruler_flag = abjuration_1
		NOT = { has_ruler_flag = abjuration_2 }
		NOT = { has_ruler_flag = abjuration_3 }
	}
}

is_abjuration_2 = {
	custom_trigger_tooltip = {
		tooltip = is_abjuration_2_tt
		has_ruler_flag = abjuration_2
		NOT = { has_ruler_flag = abjuration_3 }
	}
}

is_abjuration_3 = {
	custom_trigger_tooltip = {
		tooltip = is_abjuration_3_tt
		has_ruler_flag = abjuration_3
	}
}

is_conjuration_0 = {
	custom_trigger_tooltip = {
		tooltip = is_conjuration_0_tt
		
		NOT = { has_ruler_flag = conjuration_1 }
		NOT = { has_ruler_flag = conjuration_2 }
		NOT = { has_ruler_flag = conjuration_3 }
	}
}

is_conjuration_1 = {
	custom_trigger_tooltip = {
		tooltip = is_conjuration_1_tt
		
		has_ruler_flag = conjuration_1
		NOT = { has_ruler_flag = conjuration_2 }
		NOT = { has_ruler_flag = conjuration_3 }
	}
}

is_conjuration_2 = {
	custom_trigger_tooltip = {
		tooltip = is_conjuration_2_tt
		has_ruler_flag = conjuration_2
		NOT = { has_ruler_flag = conjuration_3 }
	}
}

is_conjuration_3 = {
	custom_trigger_tooltip = {
		tooltip = is_conjuration_3_tt
		has_ruler_flag = conjuration_3
	}
}

is_divination_0 = {
	custom_trigger_tooltip = {
		tooltip = is_divination_0_tt
		
		NOT = { has_ruler_flag = divination_1 }
		NOT = { has_ruler_flag = divination_2 }
		NOT = { has_ruler_flag = divination_3 }
	}
}

is_divination_1 = {
	custom_trigger_tooltip = {
		tooltip = is_divination_1_tt
		
		has_ruler_flag = divination_1
		NOT = { has_ruler_flag = divination_2 }
		NOT = { has_ruler_flag = divination_3 }
	}
}

is_divination_2 = {
	custom_trigger_tooltip = {
		tooltip = is_divination_2_tt
		has_ruler_flag = divination_2
		NOT = { has_ruler_flag = divination_3 }
	}
}

is_divination_3 = {
	custom_trigger_tooltip = {
		tooltip = is_divination_3_tt
		has_ruler_flag = divination_3
	}
}

is_enchantment_0 = {
	custom_trigger_tooltip = {
		tooltip = is_enchantment_0_tt
		
		NOT = { has_ruler_flag = enchantment_1 }
		NOT = { has_ruler_flag = enchantment_2 }
		NOT = { has_ruler_flag = enchantment_3 }
	}
}

is_enchantment_1 = {
	custom_trigger_tooltip = {
		tooltip = is_enchantment_1_tt
		
		has_ruler_flag = enchantment_1
		NOT = { has_ruler_flag = enchantment_2 }
		NOT = { has_ruler_flag = enchantment_3 }
	}
}

is_enchantment_2 = {
	custom_trigger_tooltip = {
		tooltip = is_enchantment_2_tt
		has_ruler_flag = enchantment_2
		NOT = { has_ruler_flag = enchantment_3 }
	}
}

is_enchantment_3 = {
	custom_trigger_tooltip = {
		tooltip = is_enchantment_3_tt
		has_ruler_flag = enchantment_3
	}
}

is_evocation_0 = {
	custom_trigger_tooltip = {
		tooltip = is_evocation_0_tt
		
		NOT = { has_ruler_flag = evocation_1 }
		NOT = { has_ruler_flag = evocation_2 }
		NOT = { has_ruler_flag = evocation_3 }
	}
}

is_evocation_1 = {
	custom_trigger_tooltip = {
		tooltip = is_evocation_1_tt
		
		has_ruler_flag = evocation_1
		NOT = { has_ruler_flag = evocation_2 }
		NOT = { has_ruler_flag = evocation_3 }
	}
}

is_evocation_2 = {
	custom_trigger_tooltip = {
		tooltip = is_evocation_2_tt
		has_ruler_flag = evocation_2
		NOT = { has_ruler_flag = evocation_3 }
	}
}

is_evocation_3 = {
	custom_trigger_tooltip = {
		tooltip = is_evocation_3_tt
		has_ruler_flag = evocation_3
	}
}

is_illusion_0 = {
	custom_trigger_tooltip = {
		tooltip = is_illusion_0_tt
		
		NOT = { has_ruler_flag = illusion_1 }
		NOT = { has_ruler_flag = illusion_2 }
		NOT = { has_ruler_flag = illusion_3 }
	}
}

is_illusion_1 = {
	custom_trigger_tooltip = {
		tooltip = is_illusion_1_tt
		
		has_ruler_flag = illusion_1
		NOT = { has_ruler_flag = illusion_2 }
		NOT = { has_ruler_flag = illusion_3 }
	}
}

is_illusion_2 = {
	custom_trigger_tooltip = {
		tooltip = is_illusion_2_tt
		has_ruler_flag = illusion_2
		NOT = { has_ruler_flag = illusion_3 }
	}
}

is_illusion_3 = {
	custom_trigger_tooltip = {
		tooltip = is_illusion_3_tt
		has_ruler_flag = illusion_3
	}
}

is_necromancy_0 = {
	custom_trigger_tooltip = {
		tooltip = is_necromancy_0_tt
		
		NOT = { has_ruler_flag = necromancy_1 }
		NOT = { has_ruler_flag = necromancy_2 }
		NOT = { has_ruler_flag = necromancy_3 }
	}
}

is_necromancy_1 = {
	custom_trigger_tooltip = {
		tooltip = is_necromancy_1_tt
		
		has_ruler_flag = necromancy_1
		NOT = { has_ruler_flag = necromancy_2 }
		NOT = { has_ruler_flag = necromancy_3 }
	}
}

is_necromancy_2 = {
	custom_trigger_tooltip = {
		tooltip = is_necromancy_2_tt
		has_ruler_flag = necromancy_2
		NOT = { has_ruler_flag = necromancy_3 }
	}
}

is_necromancy_3 = {
	custom_trigger_tooltip = {
		tooltip = is_necromancy_3_tt
		has_ruler_flag = necromancy_3
	}
}

is_transmutation_0 = {
	custom_trigger_tooltip = {
		tooltip = is_transmutation_0_tt
		
		NOT = { has_ruler_flag = transmutation_1 }
		NOT = { has_ruler_flag = transmutation_2 }
		NOT = { has_ruler_flag = transmutation_3 }
	}
}

is_transmutation_1 = {
	custom_trigger_tooltip = {
		tooltip = is_transmutation_1_tt
		
		has_ruler_flag = transmutation_1
		NOT = { has_ruler_flag = transmutation_2 }
		NOT = { has_ruler_flag = transmutation_3 }
	}
}

is_transmutation_2 = {
	custom_trigger_tooltip = {
		tooltip = is_transmutation_2_tt
		has_ruler_flag = transmutation_2
		NOT = { has_ruler_flag = transmutation_3 }
	}
}

is_transmutation_3 = {
	custom_trigger_tooltip = {
		tooltip = is_transmutation_3_tt
		has_ruler_flag = transmutation_3
	}
}


precursor_relics_can_spawn = {
	NOT = { has_global_flag = max_precursor_relics }
	OR = {
		AND = {
			OR = {
				is_year = 1560
				has_global_flag = castellos_is_dead
			}
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 10
					}
				}
			}
		}
		
		AND = {
			is_year = 1580
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 20
					}
				}
			}
		}
		
		AND = {
			is_year = 1600
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 30
					}
				}
			}
		}
		
		AND = {
			is_year = 1620
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 40
					}
				}
			}
		}
		
		AND = {
			is_year = 1650
			REB = {
				NOT = {
					check_variable = {
						which = num_precursor_relics
						value = 55
					}
				}
			}
		}
	}
	NOT = {
		trade_goods = precursor_relics
		trade_goods = damestear
		trade_goods = gold
		trade_goods = gems
		trade_goods = mithril
		trade_goods = coal
		has_province_flag = relics_no_spawn
		has_terrain = dwarven_hold
		has_terrain = dwarven_hold_surface
		continent = serpentspine
	}
	is_city = yes
}

damestear_can_spawn = {
	OR = {
		AND = {
			is_year = 1450
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 8
					}
				}
			}
		}
		
		AND = {
			is_year = 1520
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 22
					}
				}
			}
		}
		
		AND = {
			is_year = 1590
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 30
					}
				}
			}
		}
		AND = {
			is_year = 1650
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 40
					}
				}
			}
		}
		
		AND = {
			is_year = 1700
			REB = {
				NOT = {
					check_variable = {
						which = num_damestear
						value = 50
					}
				}
			}
		}
	}
	any_owned_province = {
		is_city = yes
		NOT = {
			trade_goods = precursor_relics
			trade_goods = damestear
			trade_goods = gold
			trade_goods = gems
			trade_goods = mithril
			has_province_flag = damestear_no_spawn
			has_province_flag = has_damestear
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
		}
	}
}

relics_great_ruin = {
	NOT = {
		REB = {
			check_variable = {
				which = num_great_relic
				value = 5
			}
		}
	}
}

ruler_has_max_personalities = {
	calc_true_if = {
		ROOT = {
				ruler_has_personality = just_personality
				ruler_has_personality = righteous_personality
				ruler_has_personality = tolerant_personality
				ruler_has_personality = kind_hearted_personality
				ruler_has_personality = free_thinker_personality
				ruler_has_personality = well_connected_personality
				ruler_has_personality = calm_personality
				ruler_has_personality = careful_personality
				ruler_has_personality = secretive_personality
				ruler_has_personality = intricate_web_weaver_personality
				ruler_has_personality = fertile_personality
				ruler_has_personality = well_advised_personality
				ruler_has_personality = benevolent_personality
				ruler_has_personality = zealot_personality 
				ruler_has_personality = pious_personality
				ruler_has_personality = lawgiver_personality
				ruler_has_personality = midas_touched_personality
				ruler_has_personality = incorruptible_personality
				ruler_has_personality = architectural_visionary_personality
				ruler_has_personality = scholar_personality
				ruler_has_personality = entrepreneur_personality
				ruler_has_personality = industrious_personality
				ruler_has_personality = expansionist_personality
				ruler_has_personality = charismatic_negotiator_personality
				ruler_has_personality = conqueror_personality
				ruler_has_personality = silver_tongue_personality
				ruler_has_personality = tactical_genius_personality
				ruler_has_personality = bold_fighter_personality
				ruler_has_personality = strict_personality
				ruler_has_personality = inspiring_leader_personality
				ruler_has_personality = martial_educator_personality
				ruler_has_personality = navigator_personality
				ruler_has_personality = fierce_negotiator_personality
				ruler_has_personality = babbling_buffoon_personality
				ruler_has_personality = embezzler_personality
				ruler_has_personality = infertile_personality
				ruler_has_personality = drunkard_personality
				ruler_has_personality = sinner_personality
				ruler_has_personality = greedy_personality
				ruler_has_personality = cruel_personality
				ruler_has_personality = craven_personality
				ruler_has_personality = naive_personality
				ruler_has_personality = loose_lips_personality
				ruler_has_personality = obsessive_perfectionist_personality
				ruler_has_personality = malevolent_personality
				ruler_has_personality = immortal_personality   #We count it
				ruler_has_mage_personality = yes
		}
	
		amount = 3
	}
}

has_subterranean_race = {
	custom_trigger_tooltip = {
		tooltip = province_has_subterranean_race_tooltip
		OR = {
			has_province_modifier = dwarven_majority_coexisting
			has_province_modifier = dwarven_majority_integrated
			has_province_modifier = dwarven_majority_primary
			has_province_modifier = kobold_majority_coexisting
			has_province_modifier = kobold_majority_integrated
			has_province_modifier = kobold_majority_primary
			has_province_modifier = goblin_majority_coexisting
			has_province_modifier = goblin_majority_integrated
			has_province_modifier = goblin_majority_primary
		}
	}
}

has_ruinborn_culture = {	#fyi culture_is_ruinborn exists and is more updated
	culture_is_ruinborn = yes
	NOT = { culture = duskers }
	NOT = { culture = starborn }
}

has_fey_loved_culture = {
	custom_trigger_tooltip = {
		tooltip = has_fey_loved_culture_tooltip
		OR = {
			culture = wood_elf
			culture = emerald_orc
			culture_group = eordan_ruinborn_elf
		}
	}
}

can_no_longer_find_wonders = {
	OR = {
		AND = {
			OR = {
				has_country_modifier = pf_glowing_city
				has_country_modifier = pf_portal_nexus_ruin
			}
			OR = {
				AND = {
					has_country_modifier = pf_glowing_city
					has_global_flag = pf_end_glowing_city_flag_global
				}
				AND = {
					has_country_modifier = pf_portal_nexus_ruin
					has_global_flag = pf_end_portal_nexus_flag_global
				}
				AND = {
					north_america = { type = all has_discovered = ROOT }
					south_america = { type = all has_discovered = ROOT }
				}
			}
		}
		AND = {
			has_country_modifier = pf_dragon_house
			OR = {
				has_global_flag = pf_end_dragon_house_flag_global
				amadia_region = { type = all has_discovered = ROOT }
			}
		}
		AND = {
			has_country_modifier = pf_elfenbride_manse
			OR = {
				has_global_flag = pf_end_elfenbride_manse_flag_global
				AND = {
					rzenta_region = { type = all has_discovered = ROOT }
					forest_of_the_cursed_ones_region = { type = all has_discovered = ROOT }
					dalaire_region = { type = all has_discovered = ROOT }
				}
			}
		}
		AND = {
			has_country_modifier = pf_god_fragment_ruin
			OR = {
				has_global_flag = pf_end_god_fragment_flag_global
				colonial_noruin = { type = all has_discovered = ROOT }
			}
		}
		AND = {
			has_country_modifier = pf_vault_ruin
			OR = {
				has_global_flag = pf_end_vault_ruin_flag_global
				colonial_ynn = { type = all has_discovered = ROOT }
			}
		}
		AND = {
			has_country_modifier = pf_floating_city_crash_site
			OR = {
				has_global_flag = pf_end_floating_city_crash_site_flag_global
				AND = {
					west_effelai_region = { type = all has_discovered = ROOT }
					east_effelai_region = { type = all has_discovered = ROOT }
					south_effelai_region = { type = all has_discovered = ROOT }
					leechdens_region = { type = all has_discovered = ROOT }
				}
			}
		}
	}
}

#Checks if $tag$ has lower mil tech than the country scope the scripted trigger is within
mil_tech_is_inferior = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			which = root_tech
			value = mil_tech
		}
		export_to_variable = {
			which = from_tech
			value = mil_tech
			who = $tag$
		}
		
		subtract_variable = { root_tech = 1 }
		
		check_variable = {
			which = root_tech
			which = from_tech
		}
	}
}

#Checks if $tag$ has lower dip tech than the country scope the scripted trigger is within
dip_tech_is_inferior = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			which = root_tech
			value = dip_tech
		}
		export_to_variable = {
			which = from_tech
			value = dip_tech
			who = $tag$
		}
		
		subtract_variable = { root_tech = 1 }
		
		check_variable = {
			which = root_tech
			which = from_tech
		}
	}
}

#Checks if $tag$ has lower adm tech than the country scope the scripted trigger is within
adm_tech_is_inferior = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			which = root_tech
			value = adm_tech
		}
		export_to_variable = {
			which = from_tech
			value = adm_tech
			who = $tag$
		}
		
		subtract_variable = { root_tech = 1 }
		
		check_variable = {
			which = root_tech
			which = from_tech
		}
	}
}


want_to_decrease_monstrous = {
	if = {
		limit = {
			has_country_flag = removing_monstrous 
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = ai_monstrous_desire
					value = 0
				}

				#ADD

				#Personality
				if = {
					limit = { ruler_has_personality = free_thinker_personality }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 50 } }
				}
				if = {
					limit = { ruler_has_personality = tolerant_personality }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { ruler_has_personality = naive_personality }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { ruler_has_personality = industrious_personality }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { personality = ai_diplomat }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 25 } }
				}


				#Time
				if = {
					limit = { current_age = age_of_absolutism }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 10 } }
				}
				if = {
					limit = { current_age = age_of_revolutions }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 10 } }
				}
				if = {
					limit = { has_institution = enlightenment }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 20 } }
				}
		

				#Government
				if = {
					limit = { government = republic }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 10 } }
				}

				#Religion
				
				#Situation
				
				#Specific


				#SUBTRACT

				#Personality
				if = {
					limit = { ruler_has_personality = malevolent_personality }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 50 } }
				}
				if = {
					limit = { ruler_has_personality = zealot_personality }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { ruler_has_personality = pious_personality }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { ruler_has_personality = careful_personality }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { personality = ai_militarist }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 25 } }
				}

				#Government
				if = {
					limit = { government = tribal }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 10 } }
				}

				#Religion

				#Situation
				if = {
					limit = { NOT = { stability = 1 } }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 10 } }
				}
				
				#Specific
				if = {
					limit = { has_country_modifier = centaur_administration }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 50 } }
				}


				check_variable = { which = ai_monstrous_desire value = 0 } #If the variable is >=0, the AI will want to decrease it's monstrous level
			}
		}
		always = yes
	}
	else = { always = yes }
}

has_fort_building_trigger = {
	OR = {
		has_building = fort_15th
		has_building = fort_16th
		has_building = fort_17th
		has_building = fort_18th
		has_building = fort_magic
	}
}

is_free_company = {
	OR = {
		template = merc_rezankand_var_kultoz
	}
}
has_mages_organization_privilege = {
	OR = {
		has_estate_privilege = estate_mages_organization_magisterium
		has_estate_privilege = estate_mages_organization_state
		has_estate_privilege = estate_mages_organization_guilds
		has_estate_privilege = estate_mages_organization_religious
		has_estate_privilege = estate_mages_organization_covenant
		has_estate_privilege = estate_mages_organization_elissa
		has_estate_privilege = estate_mages_organization_bardic_college
		has_estate_privilege = estate_mages_organization_ice_smiths
	}
}

has_adventurers_organization_privilege = {
	OR = {
		has_estate_privilege = estate_adventurers_organization_land_of_adventure
		has_estate_privilege = estate_adventurers_organization_licensed_adventurers
		has_estate_privilege = estate_adventurers_organization_chronicler_grants
		has_estate_privilege = estate_adventurers_organization_covenant
	}
}

has_artificers_organization_privilege = {
	OR = {
		has_estate_privilege = estate_artificers_organization_international_gommo
		has_estate_privilege = estate_artificers_organization_independent_unions
		has_estate_privilege = estate_artificers_organization_state
		has_estate_privilege = estate_artificers_organization_ravelian_control
		has_estate_privilege = estate_artificers_organization_covenant
		has_estate_privilege = estate_artificers_organization_sun_elf
	}
}

has_vampire_masquerade = {
	OR = {
		has_estate_privilege = estate_vampires_law_traditional_masquerade
		has_estate_privilege = estate_vampires_law_state_collusion_masquerade
	}
}

want_to_reduce_vampire_influence = {
	AND = {
		estate_influence = {
			estate = estate_vampires
			influence = 90
		}
		has_estate_privilege = estate_vampires_organization_vampires_lord
	}
	NOT = { has_ruler_flag = is_a_vampire }
}

want_to_increase_vampire_influence = {
	OR = {
		AND = {
			estate_loyalty = {
				estate = estate_vampires
				loyalty = 60
			}
			a_vampire_rules_the_country = yes
		}
		AND = {
			estate_influence = {
				estate = estate_vampires
				influence = 20
			}
			has_vampire_masquerade = yes
		}
	}
}

want_to_increase_vampire_loyalty = {
	OR = {
		AND = {
			NOT = {
				estate_loyalty = {
					estate = estate_vampires
					loyalty = 30
				}
			}
			estate_influence = {
				estate = estate_vampires
				influence = 60
			}
		}
	}
}

want_to_increase_vampire_land = {
	estate_loyalty = {
		estate = estate_vampires
		loyalty = 50
	}
	crown_land_share = 30
	NOT = {
		estate_territory = {
			estate = estate_vampires
			territory = 20
		}
	}
}

want_to_reduce_vampire_land = {
	OR = {
		AND = {
			NOT = {
				estate_loyalty = {
					estate = estate_vampires
					loyalty = 50
				}
			}
			estate_influence = {
				estate = estate_vampires
				influence = 80
			}
		}
		NOT = { crown_land_share = 30 }
	}
	estate_territory = {
		estate = estate_vampires
		territory = 10
	}
}

a_vampire_rules_the_country = {
	custom_trigger_tooltip = {
		tooltip = is_a_vampire_tooltip
		has_ruler_flag = is_a_vampire
	}
}


hre_elector_majority = {
	if = {
		limit = { num_of_electors = 7 }
		calc_true_if = {
			all_elector = { preferred_emperor = $tag$ }
			amount = 4
		}
	}
	else_if = {
		limit = { num_of_electors = 5 }
		calc_true_if = {
			all_elector = { preferred_emperor = $tag$ }
			amount = 3
		}
	}
	else_if = {
		limit = { num_of_electors = 3 }
		calc_true_if = {
			all_elector = { preferred_emperor = $tag$ }
			amount = 2
		}
	}
	else_if = {
		limit = { num_of_electors = 1 }
		calc_true_if = {
			all_elector = { preferred_emperor = $tag$ }
			amount = 1
		}
	}
}

has_legitimacy_equivalent = {
	if = {
		limit = { government = monarchy }
		legitimacy = $VAL$
	}
	else_if = {
		limit = { government = republic }
		republican_tradition = $VAL$
	}
	else_if = {
		limit = { government = theocracy }
		if = {
			limit = { has_dlc = "Common Sense" }
			devotion = $VAL$
		}
		else = {
			custom_trigger_tooltip = {
				tooltip = automatic_bypass_tooltip
				always = yes
			}
		}
	}
	else_if = {
		limit = { government = tribal }
		if = {
			limit = {
				has_dlc = "The Cossacks"
				is_nomad = yes
			}
			horde_unity = $VAL$
		}
		else = { legitimacy = $VAL$ }
	}
}

has_professionalism_equivalent = {
	if = {
		limit = { has_dlc = "Cradle of Civilization" }
		army_professionalism = $VAL$
	}
	else = {
		custom_trigger_tooltip = {
			tooltip = automatic_bypass_tooltip
			always = yes
		}
	}
}

is_monstrous_horde = {
	OR = {
		has_reform = greentide_horde
		has_reform = deepwoods_horde
		has_reform = brown_orc_horde
		has_reform = settled_horde
		has_reform = roaming_horde
		has_reform = emerald_horde
		has_reform = graytide_horde
		has_reform = dwarovar_squatter
		has_reform = dwarovar_warband
		has_reform = deepwoods_horde
		has_reform = gnoll_pack
		has_reform = roadwarrior_great_convoy
	}
}

eoa_is_dismantled = {
	custom_trigger_tooltip = {
		tooltip = eoa_dismantled_tooltip
		NOT = {
			hre_size = 1
			exists = Z01 #Empire of Anbennar
		}
	}
}

has_coastal_defence_building = {
	OR = {
		has_building = coastal_defence
		has_building = naval_battery
	}
}

has_any_building_trigger = {
	OR = {
		has_tax_building_trigger = yes
		has_coastal_defence_building = yes
		has_fort_building_trigger = yes
		has_manpower_building_trigger = yes
		has_production_building_trigger = yes
		has_dock_building_trigger = yes
		has_trade_building_trigger = yes
		has_shipyard_building_trigger = yes
		has_forcelimit_building_trigger = yes
		has_dock_building_trigger = yes
		has_manufactory_trigger = yes
		has_courthouse_building_trigger = yes
		has_building = university
	}
}

has_raj_mandate = {
	custom_trigger_tooltip = {
		tooltip = has_raj_mandate_trigger_tt
		OR = {
			has_country_modifier = raj_mandate_raja_protection
			has_country_modifier = raj_mandate_right_to_expansion
			has_country_modifier = raj_mandate_guaranteed_autonomy
			has_country_modifier = raj_mandate_mercantile_preference
			has_country_modifier = raj_mandate_sanctioned_armoury
			has_country_modifier = raj_mandate_ministry_lectures
			has_country_modifier = raj_mandate_senapti_primacy
			has_country_modifier = raj_mandate_extended_prabhi_privileges
			has_country_modifier = raj_mandate_territorial_limits
		}
	}
}

raj_above_allowed_senaptia = {
	custom_trigger_tooltip = {
		tooltip = raj_above_allowed_senaptia_tt
		
		4411 = {
			NOT = {
				is_variable_equal = {
					which = raj_current_num_of_senaptia
					which = raj_max_allowed_senaptia
				}
			}
			check_variable = {
				which = raj_current_num_of_senaptia
				which = raj_max_allowed_senaptia
			}
		}
	}
}

raj_below_allowed_senaptia = {
	custom_trigger_tooltip = {
		tooltip = raj_below_allowed_senaptia_tt
		
		4411 = {
			NOT = {
				check_variable = {
					which = raj_current_num_of_senaptia
					which = raj_max_allowed_senaptia
				}
			}
		}
	}
}

heir_has_max_personalities = {
	calc_true_if = {
		ROOT = {
				heir_has_personality = just_personality
				heir_has_personality = righteous_personality
				heir_has_personality = tolerant_personality
				heir_has_personality = kind_hearted_personality
				heir_has_personality = free_thinker_personality
				heir_has_personality = well_connected_personality
				heir_has_personality = calm_personality
				heir_has_personality = careful_personality
				heir_has_personality = secretive_personality
				heir_has_personality = intricate_web_weaver_personality
				heir_has_personality = fertile_personality
				heir_has_personality = well_advised_personality
				heir_has_personality = benevolent_personality
				heir_has_personality = zealot_personality 
				heir_has_personality = pious_personality
				heir_has_personality = lawgiver_personality
				heir_has_personality = midas_touched_personality
				heir_has_personality = incorruptible_personality
				heir_has_personality = architectural_visionary_personality
				heir_has_personality = scholar_personality
				heir_has_personality = entrepreneur_personality
				heir_has_personality = industrious_personality
				heir_has_personality = expansionist_personality
				heir_has_personality = charismatic_negotiator_personality
				heir_has_personality = conqueror_personality
				heir_has_personality = silver_tongue_personality
				heir_has_personality = tactical_genius_personality
				heir_has_personality = bold_fighter_personality
				heir_has_personality = strict_personality
				heir_has_personality = inspiring_leader_personality
				heir_has_personality = martial_educator_personality
				heir_has_personality = navigator_personality
				heir_has_personality = fierce_negotiator_personality
				heir_has_personality = babbling_buffoon_personality
				heir_has_personality = embezzler_personality
				heir_has_personality = infertile_personality
				heir_has_personality = drunkard_personality
				heir_has_personality = sinner_personality
				heir_has_personality = greedy_personality
				heir_has_personality = cruel_personality
				heir_has_personality = craven_personality
				heir_has_personality = naive_personality
				heir_has_personality = loose_lips_personality
				heir_has_personality = obsessive_perfectionist_personality
				heir_has_personality = malevolent_personality
				heir_has_personality = immortal_personality   #We count it
				heir_has_mage_personality = yes
		}
	
		amount = 3
	}
}

consort_has_max_personalities = {
	calc_true_if = {
		ROOT = {
				consort_has_personality = just_personality
				consort_has_personality = righteous_personality
				consort_has_personality = tolerant_personality
				consort_has_personality = kind_hearted_personality
				consort_has_personality = free_thinker_personality
				consort_has_personality = well_connected_personality
				consort_has_personality = calm_personality
				consort_has_personality = careful_personality
				consort_has_personality = secretive_personality
				consort_has_personality = intricate_web_weaver_personality
				consort_has_personality = fertile_personality
				consort_has_personality = well_advised_personality
				consort_has_personality = benevolent_personality
				consort_has_personality = zealot_personality 
				consort_has_personality = pious_personality
				consort_has_personality = lawgiver_personality
				consort_has_personality = midas_touched_personality
				consort_has_personality = incorruptible_personality
				consort_has_personality = architectural_visionary_personality
				consort_has_personality = scholar_personality
				consort_has_personality = entrepreneur_personality
				consort_has_personality = industrious_personality
				consort_has_personality = expansionist_personality
				consort_has_personality = charismatic_negotiator_personality
				consort_has_personality = conqueror_personality
				consort_has_personality = silver_tongue_personality
				consort_has_personality = tactical_genius_personality
				consort_has_personality = bold_fighter_personality
				consort_has_personality = strict_personality
				consort_has_personality = inspiring_leader_personality
				consort_has_personality = martial_educator_personality
				consort_has_personality = navigator_personality
				consort_has_personality = fierce_negotiator_personality
				consort_has_personality = babbling_buffoon_personality
				consort_has_personality = embezzler_personality
				consort_has_personality = infertile_personality
				consort_has_personality = drunkard_personality
				consort_has_personality = sinner_personality
				consort_has_personality = greedy_personality
				consort_has_personality = cruel_personality
				consort_has_personality = craven_personality
				consort_has_personality = naive_personality
				consort_has_personality = loose_lips_personality
				consort_has_personality = obsessive_perfectionist_personality
				consort_has_personality = malevolent_personality
				consort_has_personality = immortal_personality   #We count it
				consort_has_mage_personality = yes
		}
	
		amount = 3
	}
}

is_technocracy = {
	OR = {
		has_reform = technocracy_republic_reform
		has_country_flag = is_technocratic_gov
	}
}

ruler_is_immortal = {
	OR = {
		has_country_flag = vampire_ruler_has_coffin
		has_country_flag = lich_ruler_has_phylactery
		has_ruler_flag = is_a_secret_homunculus
		has_ruler_flag = is_a_exposed_homunculus
		ruler_culture = homunculi
	}
}

ruler_can_revive = {
	OR = {
		has_country_flag = vampire_ruler_has_coffin
		has_country_flag = lich_ruler_has_phylactery
	}
}

ruler_has_facade = {
	OR = {
		has_country_flag = hidden_ruler_vampire
		#has_country_flag = hidden_lich_ruler
		#has_ruler_flag = is_a_secret_homunculus
	}
}

#Verkal Skomdihr
verkalskomdihr_can_build_gate = {
	NOT = { has_province_modifier = verkalskomdihr_the_warding_gate_4 }
	NOT = { province_id = 4100 }
	OR = {
		has_terrain = dwarven_hold
		has_terrain = dwarven_hold_surface
	}
}

is_evil = {
	OR = {
		has_country_flag = witch_king_flag
		has_country_flag = exposed_vampire_ruler
		has_country_flag = exposed_lich_ruler
		religion = infernal_court 
	}
}

has_crusader_religion = {
	OR = {
		religion = corinite
		religion = the_jadd
	}
}

is_companion = {
	custom_trigger_tooltip = { tooltip = malacnar_is_companion }
	hidden_trigger = {
		has_country_flag = malacnar_companion
	}
}

owned_by_companion = {
	custom_trigger_tooltip = { tooltip = malacnar_owned_by_companion }
	hidden_trigger = {
		OR = {
			owner = { has_country_flag = malacnar_companion }
			AND = {
				is_core = G32
				owned_by = G32
			}
		}	 
	}
}

death_or_companion = {
	custom_trigger_tooltip = { tooltip = malacnar_death_or_companion }
	hidden_trigger = {
		OR = {
			NOT = { exists = yes }
			has_country_flag = malacnar_companion
		}	 
	}
}

has_adm_advisor_4 = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_4_tooltip
		OR = {
			treasurer = 4
			philosopher = 4
			artist = 4
			theologian = 4
			master_of_mint = 4
			inquisitor = 4
			natural_scientist = 4
			court_mage = 4
		}
	}
}

has_adm_advisor_5 = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_5_tooltip
		OR = {
			treasurer = 5
			philosopher = 5
			artist = 5
			theologian = 5
			master_of_mint = 5
			inquisitor = 5
			natural_scientist = 5
			court_mage = 5
		}
	}
}

has_dip_advisor_4 = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_4_tooltip
		OR = {
			statesman = 4
			diplomat = 4
			naval_reformer = 4
			trader = 4
			colonial_governor = 4
			navigator = 4
			spymaster = 4
		}
	}
}

has_dip_advisor_5 = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_5_tooltip
		OR = {
			statesman = 5
			diplomat = 5
			naval_reformer = 5
			trader = 5
			colonial_governor = 5
			navigator = 5
			spymaster = 5
		}
	}
}

has_mil_advisor_4 = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_4_tooltip
		OR = {
			army_organiser = 4
			army_reformer = 4
			commandant = 4
			grand_captain = 4
			recruitmaster = 4
			fortification_expert = 4
			quartermaster = 4
		}
	}
}

has_mil_advisor_5 = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_5_tooltip
		OR = {
			army_organiser = 5
			army_reformer = 5
			commandant = 5
			grand_captain = 5
			recruitmaster = 5
			fortification_expert = 5
			quartermaster = 5
		}
	}
}

has_adventurer_reform = {
	OR = {
		has_reform = adventurer_reform
		has_reform = aelantir_adventurer_reform
		has_reform = dwarovar_adventurer_reform
	}
}

has_claims_restricted = {
	OR = {
		has_reform = adventurer_reform
	}
}

ruler_has_mage_personality = {
	custom_trigger_tooltip = {
		tooltip = ruler_has_mage_personality
		OR = {
			ruler_has_personality = mage_personality
			ruler_has_personality = ancestor_mage_personality
		}
	}
}

heir_has_mage_personality = {
	custom_trigger_tooltip = {
		tooltip = heir_has_mage_personality
		OR = {
			heir_has_personality = mage_personality
			heir_has_personality = ancestor_mage_personality
		}
	}
}

consort_has_mage_personality = {
	custom_trigger_tooltip = {
		tooltip = consort_has_mage_personality
		OR = {
			consort_has_personality = mage_personality
			consort_has_personality = ancestor_mage_personality
		}
	}
}

has_hostile_stronghold = {
	OR = {
		has_province_modifier = magnate_stronghold
		has_province_modifier = crown_stronghold
	}
}

#Roadwarrior upgrade checks
roadwarrior_can_upgrade_main = {
	if = {
		limit = {
			has_country_modifier = roadwarrior_main_1
		}
		adm_power = 100
		dip_power = 100
		mil_power = 100
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_main_2
		}
		adm_power = 200
		dip_power = 200
		mil_power = 200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_main_3
		}
		adm_power = 300
		dip_power = 300
		mil_power = 300
	}
}

roadwarrior_can_upgrade_fighter = {
	if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_1
		}
		mil_power = 50
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_2
		}
		mil_power = 100
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_3
		}
		mil_power = 200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_4
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_5
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_6
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_7
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_8
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_fighter_9
		}
		mil_power = 300
	}
	else = {
		mil_power = 10
	}
}

roadwarrior_can_upgrade_looter = {
	if = {
		limit = { has_country_modifier = roadwarrior_tax_1 }
		dip_power = 50
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_2 }
		dip_power = 100
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_3 }
		dip_power = 200
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_4 }
		dip_power = 300
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_5 }
		dip_power = 400
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_tax_6 }
		dip_power = 500
	}
	else = {
		dip_power = 10
	}
}

roadwarrior_can_upgrade_builder = {
	if = {
		limit = { has_country_modifier = roadwarrior_builder_1 }
		adm_power = 50
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_2 }
		adm_power = 100
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_3 }
		adm_power = 200
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_4 }
		adm_power = 300
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_5 }
		adm_power = 400
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_6 }
		adm_power = 500
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_builder_7 }
		adm_power = 500
	}
	else = {
		adm_power = 10
	}
}

roadwarrior_can_upgrade_living = {
	if = {
		limit = {
			has_country_modifier = roadwarrior_living_1
		}
		mil_power = 50
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_2
		}
		mil_power = 100
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_3
		}
		mil_power = 200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_4
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_5
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_6
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_7
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_8
		}
		mil_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_living_9
		}
		mil_power = 300
	}
	else = {
		mil_power = 10
	}
}

roadwarrior_can_upgrade_training = {
	if = {
		limit = {
			has_country_modifier = roadwarrior_training_1
		}
		adm_power = 200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_2
		}
		adm_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_3
		}
		adm_power = 400
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_training_4
		}
		adm_power = 500
	}
	else = {
		adm_power = 100
	}
}

roadwarrior_can_upgrade_portable_arena = {
	if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_1
		}
		dip_power = 200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_2
		}
		dip_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_3
		}
		dip_power = 400
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_portable_arena_4
		}
		dip_power = 500
	}
	else = {
		dip_power = 100
	}
}

roadwarrior_can_upgrade_smashers = {
	if = {
		limit = { has_country_modifier = roadwarrior_breaker_1 }
		adm_power = 50
		mil_power = 50
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_2 }
		adm_power = 100
		mil_power = 100
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_3 }
		adm_power = 200
		mil_power = 200
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_4 }
		adm_power = 300
		mil_power = 300
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_5 }
		adm_power = 400
		mil_power = 400
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_6 }
		adm_power = 500
		mil_power = 500
	}
	else_if = {
		limit = { has_country_modifier = roadwarrior_breaker_7 }
		adm_power = 500
		mil_power = 500
	}
	else = {
		adm_power = 10
		mil_power = 10
	}
}

roadwarrior_can_upgrade_thinkers = {
	if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_1
		}
		dip_power = 200
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_2
		}
		dip_power = 300
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_3
		}
		dip_power = 400
	}
	else_if = {
		limit = {
			has_country_modifier = roadwarrior_thinking_4
		}
		dip_power = 500
	}
	else = {
		dip_power = 100
	}
}

black_demesne_has_available_acolyte = {
	OR = {
		Z75 = { exists = no }
		Z76 = { exists = no }
		Z77 = { exists = no }
		Z78 = { exists = no }
		Z79 = { exists = no }
		Z80 = { exists = no }
		Z81 = { exists = no }
	}
}

black_demesne_can_have_another_acolyte = {
	OR = {
		AND = {
			NOT = { acolyte_dominion = 1 }
			num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
				value = 50
				is_city = yes
			}
		}
		AND = {
			acolyte_dominion = 1
			NOT = { acolyte_dominion = 2 }
			num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
				value = 100
				is_city = yes
			}
		}
		AND = {
			acolyte_dominion = 2
			NOT = { acolyte_dominion = 3 }
			num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
				value = 150
				is_city = yes
			}
		}
		AND = {
			acolyte_dominion = 3
			NOT = { acolyte_dominion = 4 }
			num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
				value = 200
				is_city = yes
			}
		}
		AND = {
			acolyte_dominion = 4
			NOT = { acolyte_dominion = 5 }
			num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
				value = 250
				is_city = yes
			}
		}
		AND = {
			acolyte_dominion = 5
			NOT = { acolyte_dominion = 6 }
			num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
				value = 300
				is_city = yes
			}
		}
		AND = {
			acolyte_dominion = 6
			NOT = { acolyte_dominion = 7 }
			num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
				value = 350
				is_city = yes
			}
		}
		# always = yes #DEBUG
	}
}

goblinic_shamanism_trigger = {
	NOT = { religion = goblinic_shamanism }
	OR = {
		AND = {
			religion_group = cannorian
			ROOT = { NOT = { has_unlocked_cult = cannorian_cult } }
		}
		AND = {
			religion = the_thought
			ROOT = { NOT = { has_unlocked_cult = gnomish_cult } }
		}
		AND = {
			religion_group = gnollish
			ROOT = { NOT = { has_unlocked_cult = gnollish_cult } }
		}
		AND = {
			religion_group = dwarven
			ROOT = { NOT = { has_unlocked_cult = ancestor_worship_cult } }
		}
		AND = {
			religion_group = elven
			ROOT = { NOT = { has_unlocked_cult = elven_cult } }
		}
		AND = {
			religion_group = bulwari
			ROOT = { NOT = { has_unlocked_cult = bulwari_cult } }
		}
		AND = {
			religion_group = orcish
			ROOT = { NOT = { has_unlocked_cult = orcish_cult } }
		}
		AND = {
			religion = godlost
			ROOT = { NOT = { has_unlocked_cult = godlost_cult } }
		}
		AND = {
			religion_group = kheteratan
			ROOT = { NOT = { has_unlocked_cult = kheteratan_cult } }
		}
		AND = {
			religion_group = gerudian
			ROOT = { NOT = { has_unlocked_cult = gerudian_cult } }
		}
		AND = {
			religion_group = orcish
			ROOT = { NOT = { has_unlocked_cult = orcish_cult } }
		}
		AND = {
			religion_group = harpy
			ROOT = { NOT = { has_unlocked_cult = harpy_cult } }
		}
		AND = {
			religion_group = fey
			ROOT = { NOT = { has_unlocked_cult = fey_cult } }
		}
		AND = {
			religion_group = raheni
			ROOT = { NOT = { has_unlocked_cult = raheni_cult } }
		}
		AND = {
			religion_group = giantkin
			ROOT = { NOT = { has_unlocked_cult = giantkin_cult } }
		}
		AND = {
			religion_group = centaur
			ROOT = { NOT = { has_unlocked_cult = centaur_cult } }
		}
	}
}

has_finished_magical_studies = {
	custom_trigger_tooltip = {
		tooltip = magical_study_tt
		if = {
			limit = { has_ruler_flag = magical_study_1 }
			check_variable = {
				ruler_study_experience = 1000
			}
		}
		else_if = {
			limit = { has_ruler_flag = magical_study_2 }
			check_variable = {
				ruler_study_experience = 1500
			}
		}
		else_if = {
			limit = { has_ruler_flag = magical_study_3 }
			check_variable = {
				ruler_study_experience = 2000
			}
		}
		else = {
			check_variable = {
				ruler_study_experience = 5000
			}
		}
	}
}

# Corintar
corintar_establish_chapter_highlight = {
	OR = {
		owned_by = $tag$
		AND = {
			NOT = { exists = $tag$ }
			NOT = {
				ROOT = { owns_or_non_sovereign_subject_of = $capital$ }
			}
			owner = { owns = $capital$ }
		}
	}
}

corintar_establish_chapter_trigger = {
	if = {
		limit = {
			exists = $tag$
			$tag$ = {
				is_subject = yes
				NOT = { is_subject_of_type = tributary_state }
				NOT = { is_subject_of = ROOT }
			}
		}
		$tag$ = {
			overlord = {
				has_spy_network_from = {
					who = ROOT
					value = 50
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = $tag$
			NOT = { overlord_of = $tag$ }
		}
		has_spy_network_in = {
			who = $tag$
			value = 50
		}
	}
	else_if = {
		limit = {
			NOT = { owns_or_non_sovereign_subject_of = $capital$ }
			$capital$ = {
				owner = {
					is_subject = yes
					NOT = { is_subject_of_type = tributary_state }
				}
			}
		}
		$capital$ = {
			owner = {
				overlord = {
					has_spy_network_from = {
						who = ROOT
						value = 50
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			NOT = { owns_or_non_sovereign_subject_of = $capital$ }
		}
		$capital$ = {
			owner = {
				has_spy_network_from = {
					who = ROOT
					value = 50
				}
			}
		}
	}
	else = {
		owns_or_non_sovereign_subject_of = $capital$
	}
}

corintar_league_war_started = { # returns true if the league war is active, over, or the Empire no longer exists
	OR = {
		emperor = { is_in_league_war = yes }
		hre_religion_locked = yes
		NOT = { hre_size = 1 }
		has_global_flag = peace_of_esmaria
	}
}

b38_homeland = {
	custom_trigger_tooltip = {
		tooltip = elikhand_homeland
		religion = khetist
		is_state = yes
		OR = {
			region = inner_castanor_region
			region = south_castanor_region
			region = west_castanor_region
			area = cursewood_area
			area = whistlevale_area
		}
	}
}